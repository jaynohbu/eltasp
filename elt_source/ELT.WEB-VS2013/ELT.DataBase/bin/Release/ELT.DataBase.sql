/*
Deployment script for ELT.DataBase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ELT.DataBase"
:setvar DefaultFilePrefix "ELT.DataBase"
:setvar DefaultDataPath "C:\Users\Jay\AppData\Local\Microsoft\VisualStudio\SSDT\ELT.WEB"
:setvar DefaultLogPath "C:\Users\Jay\AppData\Local\Microsoft\VisualStudio\SSDT\ELT.WEB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Creating [ftfg_Recent_work_index]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [ftfg_Recent_work_index];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [ftfg_Recent_work_index_7AA34660], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_ftfg_Recent_work_index_7AA34660.mdf') TO FILEGROUP [ftfg_Recent_work_index];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY TORN_PAGE_DETECTION,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'disable';


GO
PRINT N'Creating [DataList]...';


GO
CREATE SCHEMA [DataList]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [DeveloperUtil]...';


GO
CREATE SCHEMA [DeveloperUtil]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Reporting]...';


GO
CREATE SCHEMA [Reporting]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Recent_work_index]...';


GO
CREATE FULLTEXT CATALOG [Recent_work_index]
    WITH ACCENT_SENSITIVITY = OFF
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Reporting].[PNL]...';


GO
CREATE TABLE [Reporting].[PNL] (
    [ID]                 DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [Type]               VARCHAR (10)   NULL,
    [ImportExport]       CHAR (1)       NULL,
    [AirOcean]           CHAR (1)       NULL,
    [Master_House]       CHAR (1)       NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [MBL_NUM]            NVARCHAR (50)  NULL,
    [HBL_NUM]            NVARCHAR (50)  NULL,
    [Item_Code]          NVARCHAR (50)  NULL,
    [Description]        NVARCHAR (500) NULL,
    [Customer_ID]        DECIMAL (18)   NULL,
    [Amount]             FLOAT (53)     NULL,
    [ORIGIN]             NVARCHAR (10)  NULL,
    [DEST]               NVARCHAR (10)  NULL,
    [Customer_Name]      NVARCHAR (500) NULL,
    [Date]               DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[account_payable_journal]...';


GO
CREATE TABLE [dbo].[account_payable_journal] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [gl_account_number]  DECIMAL (5)     NULL,
    [tran_date]          DATETIME        NULL,
    [tran_type]          NVARCHAR (8)    NULL,
    [invoice_No]         DECIMAL (12)    NULL,
    [customer_number]    DECIMAL (7)     NULL,
    [customer_name]      NVARCHAR (128)  NULL,
    [debit_amount]       DECIMAL (12, 2) NULL,
    [credit_amount]      DECIMAL (12, 2) NULL,
    [check_no]           NVARCHAR (12)   NULL,
    [po_no]              NVARCHAR (12)   NULL,
    [last_modified]      DATETIME        NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[account_receivable_journal]...';


GO
CREATE TABLE [dbo].[account_receivable_journal] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [gl_account_number]  DECIMAL (5)     NULL,
    [tran_date]          DATETIME        NULL,
    [tran_type]          NVARCHAR (8)    NULL,
    [invoice_No]         DECIMAL (12)    NULL,
    [customer_number]    DECIMAL (7)     NULL,
    [customer_name]      NVARCHAR (64)   NULL,
    [debit_amount]       DECIMAL (12, 2) NULL,
    [credit_amount]      DECIMAL (12, 2) NULL,
    [pmt_method]         NVARCHAR (8)    NULL,
    [check_no]           NVARCHAR (12)   NULL,
    [po_no]              NVARCHAR (12)   NULL,
    [last_modified]      DATETIME        NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[account_request]...';


GO
CREATE TABLE [dbo].[account_request] (
    [auto_uid]             DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [dba_name]             NVARCHAR (50) NULL,
    [business_legal_name]  NVARCHAR (50) NULL,
    [business_address]     NVARCHAR (50) NULL,
    [business_address_add] NVARCHAR (50) NULL,
    [business_city]        NVARCHAR (50) NULL,
    [business_state]       NVARCHAR (50) NULL,
    [business_province]    NVARCHAR (50) NULL,
    [business_zip]         NVARCHAR (50) NULL,
    [business_country]     NVARCHAR (50) NULL,
    [country_code]         NVARCHAR (8)  NULL,
    [business_phone]       NVARCHAR (50) NULL,
    [business_fax]         NVARCHAR (50) NULL,
    [business_url]         NVARCHAR (50) NULL,
    [admin_pass]           NVARCHAR (50) NULL,
    [admin_id]             NVARCHAR (50) NULL,
    [owner_lname]          NVARCHAR (50) NULL,
    [owner_fname]          NVARCHAR (50) NULL,
    [owner_mail_address]   NVARCHAR (50) NULL,
    [owner_mail_city]      NVARCHAR (50) NULL,
    [owner_mail_state]     NVARCHAR (50) NULL,
    [owner_mail_zip]       NVARCHAR (50) NULL,
    [owner_mail_country]   NVARCHAR (50) NULL,
    [owner_phone]          NVARCHAR (50) NULL,
    [owner_email]          NVARCHAR (50) NULL,
    [account_type]         NVARCHAR (1)  NULL,
    [payment_id]           DECIMAL (18)  NULL
);


GO
PRINT N'Creating [dbo].[aes_codes]...';


GO
CREATE TABLE [dbo].[aes_codes] (
    [code_type] NVARCHAR (16)  NULL,
    [code_id]   NVARCHAR (16)  NULL,
    [code_desc] NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[aes_detail]...';


GO
CREATE TABLE [dbo].[aes_detail] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [item_no]            INT             NOT NULL,
    [dfm]                NVARCHAR (1)    NULL,
    [b_number]           NVARCHAR (32)   NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [b_qty1]             INT             NULL,
    [unit1]              NVARCHAR (16)   NULL,
    [b_qty2]             INT             NULL,
    [unit2]              NVARCHAR (16)   NULL,
    [gross_weight]       DECIMAL (12, 2) NULL,
    [vin_type]           NVARCHAR (1)    NULL,
    [vin]                NVARCHAR (32)   NULL,
    [vc_title]           NVARCHAR (15)   NULL,
    [vc_state]           NVARCHAR (2)    NULL,
    [item_value]         DECIMAL (12, 2) NULL,
    [export_code]        NVARCHAR (32)   NULL,
    [license_type]       NVARCHAR (32)   NULL,
    [aes_id]             DECIMAL (18)    NULL,
    [eccn]               NVARCHAR (5)    NULL,
    [license_number]     NVARCHAR (12)   NULL,
    [id]                 INT             IDENTITY (1, 1) NOT NULL
);


GO
PRINT N'Creating [dbo].[aes_master]...';


GO
CREATE TABLE [dbo].[aes_master] (
    [auto_uid]             DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [elt_account_number]   DECIMAL (8)   NOT NULL,
    [party_to_transaction] NVARCHAR (1)  NULL,
    [export_date]          DATETIME      NULL,
    [tran_ref_no]          NVARCHAR (30) NULL,
    [consignee_acct]       DECIMAL (6)   NULL,
    [inter_consignee_acct] DECIMAL (18)  NULL,
    [origin_state]         NVARCHAR (16) NULL,
    [dest_country]         NVARCHAR (2)  NULL,
    [tran_method]          NVARCHAR (2)  NULL,
    [export_carrier]       NVARCHAR (23) NULL,
    [export_port]          NVARCHAR (5)  NULL,
    [unloading_port]       NVARCHAR (5)  NULL,
    [carrier_id_code]      NVARCHAR (4)  NULL,
    [shipment_ref_no]      NVARCHAR (17) NULL,
    [entry_no]             NVARCHAR (15) NULL,
    [hazardous_materials]  NVARCHAR (1)  NULL,
    [in_bond_type]         NVARCHAR (2)  NULL,
    [in_bond_no]           NVARCHAR (15) NULL,
    [route_export_tran]    NVARCHAR (1)  NULL,
    [tran_date]            DATETIME      NULL,
    [last_modified]        DATETIME      NULL,
    [aes_itn]              NVARCHAR (32) NULL,
    [aes_status]           NVARCHAR (32) NULL,
    [ftz]                  NVARCHAR (5)  NULL,
    [agent_acct]           DECIMAL (18)  NULL,
    [shipper_acct]         DECIMAL (18)  NULL,
    [file_type]            NVARCHAR (2)  NULL,
    [house_num]            NVARCHAR (50) NULL,
    [master_num]           NVARCHAR (50) NULL,
    CONSTRAINT [PK_aes_master] PRIMARY KEY CLUSTERED ([auto_uid] ASC)
);


GO
PRINT N'Creating [dbo].[agent]...';


GO
CREATE TABLE [dbo].[agent] (
    [elt_account_number]   DECIMAL (8)     NOT NULL,
    [dba_name]             NVARCHAR (128)  NOT NULL,
    [class_code]           NCHAR (1)       NULL,
    [date_opened]          DATETIME        NULL,
    [business_legal_name]  NVARCHAR (128)  NULL,
    [business_fed_taxid]   NVARCHAR (16)   NULL,
    [business_st_taxid]    NVARCHAR (16)   NULL,
    [usppi]                NVARCHAR (64)   NULL,
    [business_address]     NVARCHAR (128)  NULL,
    [business_address_add] NVARCHAR (128)  NULL,
    [business_city]        NVARCHAR (64)   NULL,
    [business_province]    NVARCHAR (128)  NULL,
    [business_state]       NVARCHAR (128)  NULL,
    [business_zip]         NVARCHAR (32)   NULL,
    [business_country]     NVARCHAR (32)   NULL,
    [country_code]         NVARCHAR (2)    NULL,
    [business_phone]       NVARCHAR (32)   NULL,
    [business_fax]         NVARCHAR (32)   NULL,
    [business_url]         NVARCHAR (64)   NULL,
    [owner_ssn]            NVARCHAR (9)    NULL,
    [owner_lname]          NVARCHAR (64)   NULL,
    [owner_fname]          NVARCHAR (64)   NULL,
    [owner_mname]          NVARCHAR (32)   NULL,
    [owner_mail_address]   NVARCHAR (128)  NULL,
    [owner_mail_city]      NVARCHAR (64)   NULL,
    [owner_mail_state]     NVARCHAR (128)  NULL,
    [owner_mail_zip]       NVARCHAR (32)   NULL,
    [owner_mail_country]   NVARCHAR (32)   NULL,
    [owner_phone]          NVARCHAR (32)   NULL,
    [owner_email]          NVARCHAR (128)  NULL,
    [account_statue]       NCHAR (1)       NULL,
    [Agent_IATA_Code]      NVARCHAR (32)   NULL,
    [OTI_Code]             NVARCHAR (50)   NULL,
    [board_name]           NVARCHAR (32)   NULL,
    [iv_statement]         NVARCHAR (1024) NULL,
    [faa_approval_no]      NVARCHAR (32)   NULL,
    [maxuser]              DECIMAL (18)    NULL,
    [is_dome]              NVARCHAR (1)    NOT NULL,
    [is_intl]              NVARCHAR (1)    NOT NULL,
    [faa_approval_date]    NVARCHAR (64)   NULL,
    [is_cartage]           NVARCHAR (1)    NULL,
    [is_warehouse]         NVARCHAR (1)    NULL,
    [is_accounting]        NVARCHAR (1)    NULL,
    [is_exporter]          NVARCHAR (1)    NULL,
    [is_aes]               NVARCHAR (1)    NULL,
    [ID]                   INT             IDENTITY (1, 1) NOT NULL
);


GO
PRINT N'Creating [dbo].[agent_rate_table]...';


GO
CREATE TABLE [dbo].[agent_rate_table] (
    [elt_account_number] DECIMAL (8)     NULL,
    [agent_no]           DECIMAL (7)     NULL,
    [agent_name]         NVARCHAR (128)  NULL,
    [item_no]            INT             NULL,
    [airline]            NVARCHAR (3)    NULL,
    [origin_port]        NVARCHAR (3)    NULL,
    [dest_port]          NVARCHAR (3)    NULL,
    [weight_break]       DECIMAL (10, 2) NULL,
    [rate]               DECIMAL (5, 2)  NULL,
    [share]              DECIMAL (5, 2)  NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[agent_view_object]...';


GO
CREATE TABLE [dbo].[agent_view_object] (
    [elt_account_number] DECIMAL (8)   NULL,
    [agent_no]           DECIMAL (5)   NULL,
    [object_id]          NVARCHAR (64) NULL,
    [dt]                 DATETIME      NULL,
    [is_org_merged]      NCHAR (1)     NULL
);


GO
PRINT N'Creating [dbo].[all_accounts_journal]...';


GO
CREATE TABLE [dbo].[all_accounts_journal] (
    [elt_account_number]  DECIMAL (8)     NOT NULL,
    [tran_seq_num]        DECIMAL (8)     NOT NULL,
    [gl_account_number]   DECIMAL (5)     NULL,
    [gl_account_name]     NVARCHAR (128)  NULL,
    [tran_type]           NVARCHAR (16)   NULL,
    [tran_num]            NVARCHAR (16)   NULL,
    [air_ocean]           NVARCHAR (1)    NULL,
    [tran_date]           DATETIME        NULL,
    [customer_name]       NVARCHAR (128)  NULL,
    [customer_number]     DECIMAL (9)     NULL,
    [memo]                NVARCHAR (256)  NULL,
    [split]               NVARCHAR (128)  NULL,
    [check_no]            DECIMAL (7)     NULL,
    [debit_amount]        DECIMAL (12, 2) NULL,
    [credit_amount]       DECIMAL (12, 2) NULL,
    [balance]             DECIMAL (12, 2) NULL,
    [previous_balance]    DECIMAL (12, 2) NULL,
    [gl_balance]          DECIMAL (12, 2) NULL,
    [gl_previous_balance] DECIMAL (12, 2) NULL,
    [adjust_amount]       DECIMAL (12, 2) NULL,
    [ModifiedBy]          NCHAR (10)      NULL,
    [ModifiedDate]        DATETIME        NULL,
    [debit_memo]          DECIMAL (12, 2) NULL,
    [credit_memo]         DECIMAL (12, 2) NULL,
    [flag_close]          NCHAR (1)       NULL,
    [print_check_as]      NVARCHAR (128)  NULL,
    [chk_complete]        NCHAR (1)       NULL,
    [chk_void]            NCHAR (1)       NULL,
    [is_org_merged]       NCHAR (1)       NULL,
    [is_recon_cleared]    NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[all_accounts_journal].[tran_date]...';


GO
CREATE NONCLUSTERED INDEX [tran_date]
    ON [dbo].[all_accounts_journal]([elt_account_number] ASC, [gl_account_number] ASC, [tran_date] ASC);


GO
PRINT N'Creating [dbo].[all_accounts_journal].[all2]...';


GO
CREATE NONCLUSTERED INDEX [all2]
    ON [dbo].[all_accounts_journal]([elt_account_number] ASC, [gl_account_number] ASC, [customer_number] ASC, [tran_date] ASC);


GO
PRINT N'Creating [dbo].[all_accounts_journal].[chk_void]...';


GO
CREATE NONCLUSTERED INDEX [chk_void]
    ON [dbo].[all_accounts_journal]([elt_account_number] ASC, [tran_type] ASC, [tran_num] ASC, [chk_void] ASC);


GO
PRINT N'Creating [dbo].[all_accounts_journal].[chk_complete]...';


GO
CREATE NONCLUSTERED INDEX [chk_complete]
    ON [dbo].[all_accounts_journal]([elt_account_number] ASC, [tran_type] ASC, [tran_num] ASC, [chk_complete] ASC);


GO
PRINT N'Creating [dbo].[all_accounts_journal].[NonClusteredIndex-all_accounts_journal]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-all_accounts_journal]
    ON [dbo].[all_accounts_journal]([tran_type] ASC)
    INCLUDE([elt_account_number], [tran_num]);


GO
PRINT N'Creating [dbo].[all_code]...';


GO
CREATE TABLE [dbo].[all_code] (
    [elt_account_number] DECIMAL (18)  NOT NULL,
    [type]               DECIMAL (18)  NOT NULL,
    [code]               NVARCHAR (32) NOT NULL,
    [description]        NVARCHAR (70) NULL,
    CONSTRAINT [PK_all_code] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [type] ASC, [code] ASC)
);


GO
PRINT N'Creating [dbo].[all_country_code]...';


GO
CREATE TABLE [dbo].[all_country_code] (
    [country_name] NVARCHAR (128) NULL,
    [country_code] NCHAR (2)      NULL,
    [phone_prefix] NCHAR (10)     NULL,
    [phone_mask]   NCHAR (50)     NULL,
    [free_form]    NCHAR (1)      NULL
);


GO
PRINT N'Creating [dbo].[all_currency_code]...';


GO
CREATE TABLE [dbo].[all_currency_code] (
    [auto_uid]      DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [country_name]  NVARCHAR (512) NULL,
    [country_code]  NVARCHAR (8)   NULL,
    [currency_name] NVARCHAR (128) NULL,
    [currency_code] NVARCHAR (8)   NULL
);


GO
PRINT N'Creating [dbo].[all_rate_table]...';


GO
CREATE TABLE [dbo].[all_rate_table] (
    [elt_account_number] DECIMAL (8)    NULL,
    [item_no]            DECIMAL (5)    NULL,
    [rate_type]          INT            NULL,
    [agent_no]           INT            NULL,
    [customer_no]        INT            NULL,
    [airline]            NVARCHAR (8)   NULL,
    [origin_port]        NVARCHAR (8)   NULL,
    [dest_port]          NVARCHAR (8)   NULL,
    [weight_break]       DECIMAL (8)    NULL,
    [rate]               DECIMAL (8, 2) NULL,
    [kg_lb]              NCHAR (1)      NULL,
    [share]              DECIMAL (8, 2) NULL,
    [is_org_merged]      NCHAR (1)      NULL,
    [fl_rate]            DECIMAL (8, 2) NULL,
    [sec_rate]           DECIMAL (8, 2) NULL,
    [include_fl_rate]    NVARCHAR (1)   NULL,
    [include_sec_rate]   NVARCHAR (1)   NULL,
    [id]                 INT            IDENTITY (1, 1) NOT NULL,
    [rate_table_id]      DECIMAL (18)   NOT NULL
);


GO
PRINT N'Creating [dbo].[all_rate_table].[NonClusteredIndex-all_rate_table]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-all_rate_table]
    ON [dbo].[all_rate_table]([rate_type] ASC, [airline] ASC);


GO
PRINT N'Creating [dbo].[app_process_code]...';


GO
CREATE TABLE [dbo].[app_process_code] (
    [process_code] NVARCHAR (2)  NULL,
    [code_desc]    NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[application]...';


GO
CREATE TABLE [dbo].[application] (
    [app_num]             DECIMAL (9)     NOT NULL,
    [date_applied]        DATETIME        NULL,
    [dba_name]            NVARCHAR (128)  NULL,
    [business_legal_name] NVARCHAR (128)  NULL,
    [business_fed_taxid]  NVARCHAR (16)   NULL,
    [business_st_taxid]   NVARCHAR (16)   NULL,
    [business_address]    NVARCHAR (128)  NULL,
    [business_city]       NVARCHAR (32)   NULL,
    [business_state]      NVARCHAR (2)    NULL,
    [business_zip]        NVARCHAR (10)   NULL,
    [business_country]    NVARCHAR (16)   NULL,
    [business_phone]      NVARCHAR (16)   NULL,
    [business_fax]        NVARCHAR (16)   NULL,
    [business_url]        NVARCHAR (64)   NULL,
    [owner_ssn]           NVARCHAR (9)    NULL,
    [owner_lname]         NVARCHAR (32)   NULL,
    [owner_fname]         NVARCHAR (32)   NULL,
    [owner_mname]         NVARCHAR (32)   NULL,
    [owner_mail_address]  NVARCHAR (128)  NULL,
    [owner_mail_city]     NVARCHAR (32)   NULL,
    [owner_mail_state]    NVARCHAR (2)    NULL,
    [owner_mail_zip]      NVARCHAR (10)   NULL,
    [owner_mail_country]  NVARCHAR (16)   NULL,
    [owner_phone]         NVARCHAR (16)   NULL,
    [owner_email]         NVARCHAR (32)   NULL,
    [attn_name]           NVARCHAR (64)   NULL,
    [notify_name]         NVARCHAR (64)   NULL,
    [admin_first_name]    NVARCHAR (64)   NULL,
    [admin_last_name]     NVARCHAR (64)   NULL,
    [admin_login]         NVARCHAR (32)   NULL,
    [admin_phone]         NVARCHAR (32)   NULL,
    [admin_email]         NVARCHAR (128)  NULL,
    [comment]             NVARCHAR (1024) NULL,
    [elt_comment]         NVARCHAR (1024) NULL,
    [staff_last_name]     NVARCHAR (50)   NULL,
    [staff_first_name]    NVARCHAR (50)   NULL,
    [app_status]          NVARCHAR (2)    NULL,
    [last_process_date]   DATETIME        NULL
);


GO
PRINT N'Creating [dbo].[AspNetRoles]...';


GO
CREATE TABLE [dbo].[AspNetRoles] (
    [Id]   NVARCHAR (128) NOT NULL,
    [Name] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_dbo.AspNetRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserClaims]...';


GO
CREATE TABLE [dbo].[AspNetUserClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    [User_Id]    NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_dbo.AspNetUserClaims] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserLogins]...';


GO
CREATE TABLE [dbo].[AspNetUserLogins] (
    [UserId]        NVARCHAR (128) NOT NULL,
    [LoginProvider] NVARCHAR (128) NOT NULL,
    [ProviderKey]   NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_dbo.AspNetUserLogins] PRIMARY KEY CLUSTERED ([UserId] ASC, [LoginProvider] ASC, [ProviderKey] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserRoles]...';


GO
CREATE TABLE [dbo].[AspNetUserRoles] (
    [UserId] NVARCHAR (128) NOT NULL,
    [RoleId] NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_dbo.AspNetUserRoles] PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUsers]...';


GO
CREATE TABLE [dbo].[AspNetUsers] (
    [Id]                 NVARCHAR (128) NOT NULL,
    [UserName]           NVARCHAR (MAX) NULL,
    [PasswordHash]       NVARCHAR (MAX) NULL,
    [SecurityStamp]      NVARCHAR (MAX) NULL,
    [elt_account_number] INT            NULL,
    [Discriminator]      NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_dbo.AspNetUsers] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[bill]...';


GO
CREATE TABLE [dbo].[bill] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [bill_number]        DECIMAL (9)     NOT NULL,
    [bill_type]          NCHAR (1)       NULL,
    [vendor_number]      DECIMAL (7)     NULL,
    [vendor_name]        NVARCHAR (128)  NULL,
    [bill_date]          DATETIME        NULL,
    [bill_due_date]      DATETIME        NULL,
    [bill_amt]           DECIMAL (12, 2) NULL,
    [bill_amt_paid]      DECIMAL (12, 2) NULL,
    [bill_amt_due]       DECIMAL (12, 2) NULL,
    [ref_no]             NVARCHAR (256)  NULL,
    [bill_expense_acct]  DECIMAL (5)     NULL,
    [bill_ap]            DECIMAL (5)     NULL,
    [bill_status]        NCHAR (1)       NULL,
    [print_id]           DECIMAL (9)     NULL,
    [lock]               NCHAR (1)       NULL,
    [pmt_method]         NVARCHAR (32)   NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[bill_detail]...';


GO
CREATE TABLE [dbo].[bill_detail] (
    [elt_account_number]   DECIMAL (8)     NULL,
    [invoice_no]           DECIMAL (12)    NULL,
    [item_id]              INT             NULL,
    [bill_number]          DECIMAL (9)     NULL,
    [vendor_number]        DECIMAL (8)     NULL,
    [item_name]            NVARCHAR (64)   NULL,
    [item_no]              INT             NULL,
    [item_amt]             DECIMAL (12, 2) NULL,
    [item_amt_origin]      DECIMAL (18, 2) NULL,
    [item_expense_acct]    DECIMAL (5)     NULL,
    [item_ap]              DECIMAL (5)     NULL,
    [tran_date]            DATETIME        NULL,
    [ref]                  NVARCHAR (64)   NULL,
    [mb_no]                NVARCHAR (32)   NULL,
    [iType]                NCHAR (1)       NULL,
    [agent_debit_no]       NVARCHAR (64)   NULL,
    [is_org_merged]        NCHAR (1)       NULL,
    [is_manual]            NCHAR (1)       NOT NULL,
    [hawb_master_hawb_num] NVARCHAR (64)   NULL,
    [import_export]        NVARCHAR (1)    NULL,
    [hb_no]                NVARCHAR (32)   NULL
);


GO
PRINT N'Creating [dbo].[booking_confirm]...';


GO
CREATE TABLE [dbo].[booking_confirm] (
    [auto_uid]                     DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [bc_no]                        NVARCHAR (64)  NULL,
    [elt_account_number]           DECIMAL (18)   NULL,
    [document_date]                DATETIME       NULL,
    [air_ocean]                    NVARCHAR (1)   NULL,
    [booking_no]                   NVARCHAR (64)  NULL,
    [master_no]                    NVARCHAR (64)  NULL,
    [house_no]                     NVARCHAR (64)  NULL,
    [sub_house_no]                 NVARCHAR (32)  NULL,
    [shipper_acct]                 DECIMAL (18)   NULL,
    [shipper_name]                 NVARCHAR (128) NULL,
    [shipper_info]                 NTEXT          NULL,
    [deliver_to_acct]              DECIMAL (18)   NULL,
    [deliver_to_name]              NVARCHAR (128) NULL,
    [deliver_to_info]              NTEXT          NULL,
    [cut_off_date]                 NVARCHAR (50)  NULL,
    [export_reference]             NVARCHAR (64)  NULL,
    [carrier_acct]                 DECIMAL (18)   NULL,
    [carrier_name]                 NVARCHAR (128) NULL,
    [carrier_no]                   NVARCHAR (128) NULL,
    [place_of_receipt]             NVARCHAR (128) NULL,
    [place_of_delivery]            NVARCHAR (128) NULL,
    [dep_port]                     NVARCHAR (128) NULL,
    [arr_port]                     NVARCHAR (128) NULL,
    [eta]                          DATETIME       NULL,
    [etd]                          DATETIME       NULL,
    [move_type]                    NVARCHAR (32)  NULL,
    [dest_agent_acct]              DECIMAL (18)   NULL,
    [dest_agent_name]              NVARCHAR (128) NULL,
    [dest_agent_info]              NTEXT          NULL,
    [empty_container_pick_up_acct] DECIMAL (18)   NULL,
    [empty_container_pick_up_name] NVARCHAR (128) NULL,
    [empty_container_pick_up_info] NTEXT          NULL,
    [dangerous]                    NVARCHAR (50)  NULL,
    [quantity]                     DECIMAL (18)   NULL,
    [quantity_unit]                NVARCHAR (50)  NULL,
    [item_desc]                    NTEXT          NULL,
    [gross_weight]                 DECIMAL (18)   NULL,
    [weight_scale]                 NVARCHAR (3)   NULL,
    [dimension]                    DECIMAL (18)   NULL,
    [dimension_scale]              NVARCHAR (3)   NULL,
    [remark]                       NTEXT          NULL,
    CONSTRAINT [PK_booking_confirm] PRIMARY KEY CLUSTERED ([auto_uid] ASC)
);


GO
PRINT N'Creating [dbo].[bug_master]...';


GO
CREATE TABLE [dbo].[bug_master] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [asp_code]           NVARCHAR (32)  NULL,
    [err_number]         NVARCHAR (64)  NULL,
    [source]             NVARCHAR (128) NULL,
    [source_file]        NVARCHAR (128) NULL,
    [err_line]           DECIMAL (18)   NULL,
    [err_desc]           NTEXT          NULL,
    [err_asp_desc]       NTEXT          NULL,
    [last_sql]           NTEXT          NULL,
    [err_date]           DATETIME       NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [user_id]            DECIMAL (18)   NULL
);


GO
PRINT N'Creating [dbo].[cargo_tracking]...';


GO
CREATE TABLE [dbo].[cargo_tracking] (
    [elt_account_number]    DECIMAL (8)     NULL,
    [request_id]            DECIMAL (8)     NULL,
    [export_agent_name]     NVARCHAR (255)  NULL,
    [import_agent_elt_acct] DECIMAL (8)     NULL,
    [import_agent_name]     NVARCHAR (128)  NULL,
    [ref_no]                NVARCHAR (64)   NULL,
    [sr_dt]                 DATETIME        NULL,
    [sr_location]           NVARCHAR (255)  NULL,
    [shipper_name]          NVARCHAR (128)  NULL,
    [shipper_info]          NVARCHAR (256)  NULL,
    [shipper_acct]          DECIMAL (8)     NULL,
    [consignee_name]        NVARCHAR (128)  NULL,
    [consignee_acct]        DECIMAL (8)     NULL,
    [consignee_import_acct] DECIMAL (8)     NULL,
    [flight_no]             NVARCHAR (16)   NULL,
    [etd]                   DATETIME        NULL,
    [eta]                   DATETIME        NULL,
    [pol]                   NVARCHAR (32)   NULL,
    [poa]                   NVARCHAR (32)   NULL,
    [pieces]                INT             NULL,
    [pc_scale]              NVARCHAR (8)    NULL,
    [chg_wt]                DECIMAL (10, 2) NULL,
    [chg_wt_scale]          NVARCHAR (8)    NULL,
    [gross_wt]              DECIMAL (12, 2) NULL,
    [gross_wt_scale]        NVARCHAR (8)    NULL,
    [dims]                  DECIMAL (12, 2) NULL,
    [dims_scale]            NVARCHAR (8)    NULL,
    [sr_by]                 NVARCHAR (64)   NULL,
    [pu_location]           NVARCHAR (128)  NULL,
    [pickup_dt]             DATETIME        NULL,
    [airport_dt]            DATETIME        NULL,
    [ready_dt]              NVARCHAR (50)   NULL,
    [contact]               NVARCHAR (64)   NULL,
    [contact_phone]         NVARCHAR (64)   NULL,
    [hawb]                  NVARCHAR (32)   NULL,
    [mawb]                  NVARCHAR (32)   NULL,
    [note]                  NTEXT           NULL,
    [invoice_no]            DECIMAL (12)    NULL,
    [cargo_location]        NVARCHAR (256)  NULL,
    [it_number]             DECIMAL (12)    NULL,
    [wh1_in_tran_dt]        DATETIME        NULL,
    [wh1_in_dt]             DATETIME        NULL,
    [wh1_in_pc]             INT             NULL,
    [wh1_from]              NVARCHAR (50)   NULL,
    [wh1_in_trucker]        NVARCHAR (50)   NULL,
    [wh1_in_remark]         NTEXT           NULL,
    [wh1_out_tran_dt]       DATETIME        NULL,
    [wh1_out_dt]            DATETIME        NULL,
    [wh1_out_pc]            INT             NULL,
    [wh1_to]                NVARCHAR (64)   NULL,
    [wh1_out_trucker]       NVARCHAR (64)   NULL,
    [wh1_out_remark]        NTEXT           NULL,
    [wh2_in_tran_dt]        DATETIME        NULL,
    [wh2_in_dt]             DATETIME        NULL,
    [wh2_in_pc]             INT             NULL,
    [wh2_from]              NVARCHAR (50)   NULL,
    [wh2_in_trucker]        NVARCHAR (50)   NULL,
    [wh2_in_remark]         NTEXT           NULL,
    [wh2_out_tran_dt]       DATETIME        NULL,
    [wh2_out_dt]            DATETIME        NULL,
    [wh2_out_pc]            INT             NULL,
    [wh2_to]                NVARCHAR (54)   NULL,
    [wh2_out_trucker]       NVARCHAR (64)   NULL,
    [wh2_out_remark]        NTEXT           NULL,
    [dest_tran_dt]          DATETIME        NULL,
    [dest_from]             NVARCHAR (50)   NULL,
    [dest_dt]               DATETIME        NULL,
    [dest_pc]               INT             NULL,
    [dest_trucker]          NVARCHAR (50)   NULL,
    [dest_remark]           NTEXT           NULL,
    [dest_close_remark]     NTEXT           NULL,
    [dest_close_dt]         DATETIME        NULL,
    [status]                NCHAR (1)       NULL,
    [is_org_merged]         NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[carrier_master]...';


GO
CREATE TABLE [dbo].[carrier_master] (
    [auto_uid]           DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)  NULL,
    [carrier_name]       NVARCHAR (64) NULL,
    [carrier_code_type]  NVARCHAR (8)  NULL,
    [carrier_code]       NVARCHAR (8)  NULL,
    [tran_type]          NVARCHAR (8)  NULL,
    [org_account_number] DECIMAL (18)  NULL
);


GO
PRINT N'Creating [dbo].[certificate_origin_air]...';


GO
CREATE TABLE [dbo].[certificate_origin_air] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [doc_num]            NVARCHAR (64)  NULL,
    [hawb_num]           NVARCHAR (64)  NULL,
    [mawb_num]           NVARCHAR (64)  NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [shipper_name]       NVARCHAR (128) NULL,
    [shipper_info]       NTEXT          NULL,
    [shipper_acct_num]   DECIMAL (18)   NULL,
    [consignee_name]     NVARCHAR (128) NULL,
    [consignee_info]     NTEXT          NULL,
    [consignee_acct_num] DECIMAL (18)   NULL,
    [agent_name]         NVARCHAR (128) NULL,
    [agent_info]         NTEXT          NULL,
    [agent_acct_num]     DECIMAL (18)   NULL,
    [notify_name]        NVARCHAR (128) NULL,
    [notify_info]        NTEXT          NULL,
    [notify_acct_num]    DECIMAL (18)   NULL,
    [export_ref]         NTEXT          NULL,
    [origin_country]     NVARCHAR (128) NULL,
    [export_instr]       NTEXT          NULL,
    [pre_carriage]       NVARCHAR (128) NULL,
    [pre_receipt_place]  NVARCHAR (128) NULL,
    [export_carrier]     NVARCHAR (128) NULL,
    [loading_port]       NVARCHAR (64)  NULL,
    [loading_terminal]   NVARCHAR (64)  NULL,
    [unloading_port]     NVARCHAR (64)  NULL,
    [delivery_place]     NVARCHAR (64)  NULL,
    [move_type]          NVARCHAR (64)  NULL,
    [updated_date]       DATETIME       NULL,
    [file_name]          NVARCHAR (128) NULL,
    [anonymous]          NVARCHAR (1)   NULL,
    [us_state]           NVARCHAR (64)  NULL,
    [dest_country]       NVARCHAR (128) NULL,
    [shipping_city]      NVARCHAR (128) NULL,
    [ff_name]            NVARCHAR (128) NULL,
    [ff_city]            NVARCHAR (128) NULL,
    [ff_county]          NVARCHAR (128) NULL,
    [created_date]       DATETIME       NULL,
    [sworn_date]         DATETIME       NULL,
    [employee]           NVARCHAR (128) NULL,
    [origin_state]       NVARCHAR (64)  NULL,
    [is_org_merged]      NCHAR (1)      NULL,
    [session_id]         NVARCHAR (64)  NULL,
    [ff_county_acct]     DECIMAL (9)    NULL,
    [ff_county_name]     NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[certificate_origin_air_items]...';


GO
CREATE TABLE [dbo].[certificate_origin_air_items] (
    [cert_id]           DECIMAL (18)   NOT NULL,
    [doc_num]           NVARCHAR (32)  NULL,
    [desc1]             NVARCHAR (512) NULL,
    [desc2]             NVARCHAR (512) NULL,
    [desc3]             NVARCHAR (512) NULL,
    [gross_weight]      FLOAT (53)     NULL,
    [measurement]       FLOAT (53)     NULL,
    [weight_scale]      NVARCHAR (3)   NULL,
    [measurement_scale] NVARCHAR (3)   NULL
);


GO
PRINT N'Creating [dbo].[certificate_origin_ocean]...';


GO
CREATE TABLE [dbo].[certificate_origin_ocean] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [booking_num]        NVARCHAR (64)  NULL,
    [hbol_num]           NVARCHAR (64)  NULL,
    [mbol_num]           NVARCHAR (64)  NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [shipper_name]       NVARCHAR (128) NULL,
    [shipper_info]       NTEXT          NULL,
    [shipper_acct_num]   DECIMAL (18)   NULL,
    [consignee_name]     NVARCHAR (128) NULL,
    [consignee_info]     NTEXT          NULL,
    [consignee_acct_num] DECIMAL (18)   NULL,
    [agent_name]         NVARCHAR (128) NULL,
    [agent_info]         NVARCHAR (256) NULL,
    [agent_acct_num]     DECIMAL (18)   NULL,
    [notify_name]        NVARCHAR (128) NULL,
    [notify_info]        NTEXT          NULL,
    [notify_acct_num]    DECIMAL (18)   NULL,
    [export_ref]         NTEXT          NULL,
    [origin_country]     NVARCHAR (128) NULL,
    [export_instr]       NTEXT          NULL,
    [pre_carriage]       NVARCHAR (64)  NULL,
    [pre_receipt_place]  NVARCHAR (64)  NULL,
    [export_carrier]     NVARCHAR (64)  NULL,
    [loading_port]       NVARCHAR (64)  NULL,
    [loading_pier]       NVARCHAR (64)  NULL,
    [unloading_port]     NVARCHAR (64)  NULL,
    [delivery_place]     NVARCHAR (64)  NULL,
    [move_type]          NVARCHAR (64)  NULL,
    [containerized]      NVARCHAR (1)   NULL,
    [updated_date]       DATETIME       NULL,
    [file_name]          NVARCHAR (128) NULL,
    [anonymous]          NVARCHAR (1)   NULL,
    [us_state]           NVARCHAR (64)  NULL,
    [dest_country]       NVARCHAR (128) NULL,
    [shipping_city]      NVARCHAR (128) NULL,
    [ff_name]            NVARCHAR (128) NULL,
    [ff_city]            NVARCHAR (128) NULL,
    [ff_county]          NVARCHAR (128) NULL,
    [created_date]       DATETIME       NULL,
    [sworn_date]         DATETIME       NULL,
    [employee]           NVARCHAR (128) NULL,
    [origin_state]       NVARCHAR (64)  NULL,
    [is_org_merged]      NCHAR (1)      NULL,
    [session_id]         NVARCHAR (64)  NULL,
    [ff_county_acct]     DECIMAL (9)    NULL,
    [ff_county_name]     NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[certificate_origin_ocean_items]...';


GO
CREATE TABLE [dbo].[certificate_origin_ocean_items] (
    [cert_id]           DECIMAL (18)   NOT NULL,
    [doc_num]           NVARCHAR (32)  NULL,
    [desc1]             NVARCHAR (512) NULL,
    [desc2]             NVARCHAR (512) NULL,
    [desc3]             NVARCHAR (MAX) NULL,
    [gross_weight]      FLOAT (53)     NULL,
    [measurement]       FLOAT (53)     NULL,
    [weight_scale]      NVARCHAR (3)   NULL,
    [measurement_scale] NVARCHAR (3)   NULL
);


GO
PRINT N'Creating [dbo].[charge_item]...';


GO
CREATE TABLE [dbo].[charge_item] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [item_no]            INT             NOT NULL,
    [item_name]          NVARCHAR (32)   NULL,
    [item_type]          NVARCHAR (32)   NULL,
    [item_desc]          NVARCHAR (32)   NULL,
    [unit_price]         DECIMAL (10, 2) NULL,
    [account_revenue]    DECIMAL (5)     NULL,
    [account_expense]    DECIMAL (5)     NULL
);


GO
PRINT N'Creating [dbo].[check_detail]...';


GO
CREATE TABLE [dbo].[check_detail] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [print_id]           DECIMAL (9)     NOT NULL,
    [tran_id]            INT             NOT NULL,
    [bill_number]        DECIMAL (9)     NULL,
    [due_date]           DATETIME        NULL,
    [invoice_no]         NVARCHAR (64)   NULL,
    [bill_amt]           DECIMAL (12, 2) NULL,
    [amt_due]            DECIMAL (12, 2) NULL,
    [amt_paid]           DECIMAL (12, 2) NULL,
    [amt_dispute]        DECIMAL (18, 2) NULL,
    [memo]               NVARCHAR (512)  NULL,
    [pmt_method]         NVARCHAR (32)   NULL
);


GO
PRINT N'Creating [dbo].[check_queue]...';


GO
CREATE TABLE [dbo].[check_queue] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [print_id]           DECIMAL (9)     NOT NULL,
    [check_no]           DECIMAL (15)    NULL,
    [check_type]         NVARCHAR (8)    NULL,
    [check_amt]          DECIMAL (12, 2) NULL,
    [vendor_number]      DECIMAL (7)     NULL,
    [vendor_name]        NVARCHAR (256)  NULL,
    [vendor_info]        NVARCHAR (256)  NULL,
    [bank]               DECIMAL (7)     NULL,
    [ap]                 DECIMAL (7)     NULL,
    [print_status]       NCHAR (1)       NULL,
    [bill_date]          DATETIME        NULL,
    [bill_due_date]      DATETIME        NULL,
    [print_date]         DATETIME        NULL,
    [memo]               NVARCHAR (512)  NULL,
    [pmt_method]         NVARCHAR (32)   NULL,
    [print_check_as]     NVARCHAR (128)  NULL,
    [is_org_merged]      NCHAR (1)       NULL,
    [chk_complete]       NCHAR (1)       NULL,
    [chk_void]           NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[Cities]...';


GO
CREATE TABLE [dbo].[Cities] (
    [CityId]    INT            IDENTITY (1, 1) NOT NULL,
    [City]      NVARCHAR (255) NULL,
    [CountryId] INT            NULL
);


GO
PRINT N'Creating [dbo].[colo]...';


GO
CREATE TABLE [dbo].[colo] (
    [colodee_elt_acct] DECIMAL (8)    NULL,
    [colodee_name]     NVARCHAR (128) NULL,
    [coloder_elt_acct] DECIMAL (8)    NULL,
    [coloder_name]     NVARCHAR (128) NULL,
    [colodee_org_num]  DECIMAL (5)    NULL,
    [tran_date]        DATETIME       NULL,
    [is_org_merged]    NCHAR (1)      NULL,
    [coloder_org_num]  DECIMAL (5)    NULL
);


GO
PRINT N'Creating [dbo].[Countries]...';


GO
CREATE TABLE [dbo].[Countries] (
    [CountryId] INT            IDENTITY (1, 1) NOT NULL,
    [Country]   NVARCHAR (255) NULL,
    [CapitalId] INT            NULL,
    CONSTRAINT [PK_Countries] PRIMARY KEY CLUSTERED ([CountryId] ASC)
);


GO
PRINT N'Creating [dbo].[country_code]...';


GO
CREATE TABLE [dbo].[country_code] (
    [elt_account_number] DECIMAL (18)   NULL,
    [country_name]       NVARCHAR (128) NULL,
    [country_code]       NCHAR (2)      NULL
);


GO
PRINT N'Creating [dbo].[customer_balance]...';


GO
CREATE TABLE [dbo].[customer_balance] (
    [elt_account_number] DECIMAL (8)     NULL,
    [gl_account_number]  DECIMAL (8)     NULL,
    [customer_name]      NVARCHAR (128)  NULL,
    [customer_acct]      DECIMAL (9)     NULL,
    [balance]            DECIMAL (12, 2) NULL,
    [last_modified]      DATETIME        NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[customer_credit_info]...';


GO
CREATE TABLE [dbo].[customer_credit_info] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (8)     NULL,
    [customer_no]        DECIMAL (8)     NULL,
    [memo]               NVARCHAR (256)  NULL,
    [credit]             DECIMAL (12, 2) NULL,
    [tran_date]          DATETIME        NULL,
    [customer_name]      NVARCHAR (256)  NULL,
    [entry_no]           DECIMAL (5)     NULL,
    [invoice_no]         DECIMAL (5)     NULL,
    [ref_no]             NVARCHAR (256)  NULL,
    [is_refund]          NVARCHAR (1)    NULL
);


GO
PRINT N'Creating [dbo].[customer_credits]...';


GO
CREATE TABLE [dbo].[customer_credits] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [customer_no]        DECIMAL (8)     NOT NULL,
    [customer_name]      NVARCHAR (128)  NULL,
    [credit]             DECIMAL (12, 2) NULL,
    [is_org_merged]      NCHAR (1)       NULL,
    CONSTRAINT [PK_customer_credits] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [customer_no] ASC)
);


GO
PRINT N'Creating [dbo].[customer_payment]...';


GO
CREATE TABLE [dbo].[customer_payment] (
    [elt_account_number]  DECIMAL (8)     NOT NULL,
    [branch]              INT             NULL,
    [payment_no]          DECIMAL (9)     NOT NULL,
    [payment_date]        DATETIME        NULL,
    [ref_no]              NVARCHAR (32)   NULL,
    [customer_number]     DECIMAL (8)     NULL,
    [customer_name]       NVARCHAR (250)  NULL,
    [third_party_number]  DECIMAL (8)     NULL,
    [third_party_name]    NVARCHAR (250)  NULL,
    [accounts_receivable] DECIMAL (7)     NULL,
    [deposit_to]          DECIMAL (7)     NULL,
    [received_amt]        DECIMAL (12, 2) NULL,
    [balance]             DECIMAL (12, 2) NULL,
    [pmt_method]          NVARCHAR (32)   NULL,
    [existing_credits]    DECIMAL (12, 2) NULL,
    [unapplied_amt]       DECIMAL (12, 2) NULL,
    [added_amt]           DECIMAL (12, 2) NULL,
    [is_org_merged]       NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[customer_payment].[IX_customer_payment]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment]
    ON [dbo].[customer_payment]([elt_account_number] ASC);


GO
PRINT N'Creating [dbo].[customer_payment].[IX_customer_payment_1]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment_1]
    ON [dbo].[customer_payment]([payment_no] ASC);


GO
PRINT N'Creating [dbo].[customer_payment].[IX_customer_payment_2]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment_2]
    ON [dbo].[customer_payment]([payment_date] ASC);


GO
PRINT N'Creating [dbo].[customer_payment_detail]...';


GO
CREATE TABLE [dbo].[customer_payment_detail] (
    [elt_account_number] DECIMAL (8)    NOT NULL,
    [payment_no]         DECIMAL (9)    NOT NULL,
    [item_id]            INT            NOT NULL,
    [invoice_date]       DATETIME       NULL,
    [type]               NVARCHAR (16)  NULL,
    [invoice_no]         DECIMAL (12)   NULL,
    [orig_amt]           DECIMAL (9, 2) NULL,
    [amt_due]            DECIMAL (9, 2) NULL,
    [payment]            DECIMAL (9, 2) NULL
);


GO
PRINT N'Creating [dbo].[customer_payment_detail].[IX_customer_payment_detail]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment_detail]
    ON [dbo].[customer_payment_detail]([elt_account_number] ASC);


GO
PRINT N'Creating [dbo].[customer_payment_detail].[IX_customer_payment_detail_1]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment_detail_1]
    ON [dbo].[customer_payment_detail]([payment_no] ASC);


GO
PRINT N'Creating [dbo].[customer_payment_detail].[IX_customer_payment_detail_2]...';


GO
CREATE NONCLUSTERED INDEX [IX_customer_payment_detail_2]
    ON [dbo].[customer_payment_detail]([invoice_no] ASC);


GO
PRINT N'Creating [dbo].[delivery_order]...';


GO
CREATE TABLE [dbo].[delivery_order] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [mawb_no]            NVARCHAR (64)  NULL,
    [hawb_no]            NVARCHAR (64)  NULL,
    [sub_hawb_no]        NVARCHAR (32)  NULL,
    [shipper_name]       NVARCHAR (128) NULL,
    [shipper_info]       NTEXT          NULL,
    [shipper_acct]       DECIMAL (18)   NULL,
    [consignee_name]     NVARCHAR (128) NULL,
    [consignee_info]     NTEXT          NULL,
    [consignee_acct]     DECIMAL (18)   NULL,
    [update_date]        DATETIME       NULL,
    [ref_no_Our]         NVARCHAR (32)  NULL,
    [carrier_name]       NVARCHAR (128) NULL,
    [carrier_info]       NTEXT          NULL,
    [cargo_location]     NVARCHAR (128) NULL,
    [iType]              NVARCHAR (1)   NULL,
    [dep_port]           NVARCHAR (128) NULL,
    [arr_port]           NVARCHAR (128) NULL,
    [eta]                DATETIME       NULL,
    [etd]                DATETIME       NULL,
    [free_date]          DATETIME       NULL,
    [trucker_name]       NVARCHAR (128) NULL,
    [trucker_info]       NTEXT          NULL,
    [trucker_acct]       NVARCHAR (64)  NULL,
    [entry_billing_no]   NVARCHAR (32)  NULL,
    [customer_ref_no]    NVARCHAR (32)  NULL,
    [item_pieces]        NVARCHAR (64)  NULL,
    [item_desc]          NTEXT          NULL,
    [item_gross_wt]      FLOAT (53)     NULL,
    [item_scale]         NVARCHAR (3)   NULL,
    [inland_charge]      FLOAT (53)     NULL,
    [inland_charge_type] NVARCHAR (1)   NULL,
    [route]              NTEXT          NULL,
    [sec_num]            NVARCHAR (32)  NULL,
    [handling]           NVARCHAR (128) NULL,
    [attention]          NVARCHAR (128) NULL,
    [employee]           NVARCHAR (128) NULL,
    [anonymous]          NVARCHAR (1)   NULL,
    [file_name]          NVARCHAR (128) NULL,
    [pickupfrom]         NVARCHAR (256) NULL,
    [is_org_merged]      NCHAR (1)      NULL,
    [session_id]         NVARCHAR (64)  NULL,
    [Carrier_Code]       NVARCHAR (64)  NULL,
    [importer_acct]      DECIMAL (18)   NULL,
    [importer_name]      NVARCHAR (128) NULL,
    [importer_info]      NTEXT          NULL,
    [pickup_acct]        DECIMAL (18)   NULL,
    [pickup_name]        NVARCHAR (128) NULL,
    [pickup_info]        NTEXT          NULL,
    [dep_port_code]      NVARCHAR (8)   NULL,
    [arr_port_code]      NVARCHAR (8)   NULL,
    [delivery_ref_num]   NVARCHAR (32)  NULL,
    [dimension]          NVARCHAR (128) NULL,
    [dimension_scale]    NVARCHAR (3)   NULL
);


GO
PRINT N'Creating [dbo].[eli_back]...';


GO
CREATE TABLE [dbo].[eli_back] (
    [elt_account_number]    DECIMAL (8)     NOT NULL,
    [org_account_number]    DECIMAL (7)     NOT NULL,
    [dba_name]              NVARCHAR (128)  NULL,
    [class_code]            NCHAR (20)      NULL,
    [isFrequently]          NCHAR (1)       NULL,
    [business_legal_name]   NVARCHAR (128)  NULL,
    [business_fed_taxid]    NVARCHAR (16)   NULL,
    [business_address]      NVARCHAR (128)  NULL,
    [business_address2]     NVARCHAR (128)  NULL,
    [business_address3]     NVARCHAR (128)  NULL,
    [business_city]         NVARCHAR (32)   NULL,
    [business_state]        NVARCHAR (2)    NULL,
    [business_zip]          NVARCHAR (32)   NULL,
    [business_country]      NVARCHAR (64)   NULL,
    [b_country_code]        NVARCHAR (2)    NULL,
    [business_phone]        NVARCHAR (32)   NULL,
    [business_phone_ext]    NVARCHAR (16)   NULL,
    [business_phone_mask]   NCHAR (2)       NULL,
    [business_phone2]       NVARCHAR (32)   NULL,
    [business_phone2_ext]   NVARCHAR (16)   NULL,
    [business_phone2_mask]  NCHAR (2)       NULL,
    [business_fax]          NVARCHAR (32)   NULL,
    [business_fax_mask]     NCHAR (2)       NULL,
    [business_url]          NVARCHAR (64)   NULL,
    [web_login_id]          NVARCHAR (32)   NULL,
    [web_login_pin]         NVARCHAR (32)   NULL,
    [owner_lname]           NVARCHAR (32)   NULL,
    [owner_fname]           NVARCHAR (32)   NULL,
    [owner_mname]           NVARCHAR (32)   NULL,
    [owner_title]           NVARCHAR (128)  NULL,
    [owner_departm]         NVARCHAR (128)  NULL,
    [owner_mail_address]    NVARCHAR (128)  NULL,
    [owner_mail_address2]   NVARCHAR (128)  NULL,
    [owner_mail_address3]   NVARCHAR (128)  NULL,
    [owner_mail_city]       NVARCHAR (32)   NULL,
    [owner_mail_state]      NVARCHAR (32)   NULL,
    [owner_mail_zip]        NVARCHAR (32)   NULL,
    [owner_mail_country]    NVARCHAR (64)   NULL,
    [owner_phone]           NVARCHAR (32)   NULL,
    [owner_phone_mask]      NCHAR (2)       NULL,
    [owner_email]           NVARCHAR (64)   NULL,
    [attn_name]             NVARCHAR (64)   NULL,
    [notify_name]           NVARCHAR (64)   NULL,
    [agent_elt_acct]        NCHAR (8)       NULL,
    [edt]                   NCHAR (1)       NULL,
    [iata_code]             NVARCHAR (16)   NULL,
    [carrier_code]          NVARCHAR (16)   NULL,
    [carrier_id]            NVARCHAR (16)   NULL,
    [carrier_type]          NCHAR (1)       NULL,
    [account_status]        NVARCHAR (1)    NULL,
    [comment]               NTEXT           NULL,
    [comment2]              NTEXT           NULL,
    [credit_amt]            DECIMAL (12, 2) NULL,
    [bill_term]             INT             NULL,
    [colodee_elt_acct]      DECIMAL (8)     NULL,
    [colodee_elt_acct_name] NVARCHAR (128)  NULL,
    [z_bond_number]         DECIMAL (18)    NULL,
    [z_bond_exp_date]       DATETIME        NULL,
    [z_bond_amount]         DECIMAL (18)    NULL,
    [z_bond_surety]         NVARCHAR (50)   NULL,
    [z_bank_name]           NVARCHAR (50)   NULL,
    [z_bank_account_no]     NCHAR (20)      NULL,
    [z_chl_no]              NVARCHAR (30)   NULL,
    [z_firm_code]           NVARCHAR (30)   NULL,
    [z_carrier_code]        NVARCHAR (30)   NULL,
    [z_carrier_prefix]      NCHAR (10)      NULL,
    [z_attn_txt]            NVARCHAR (64)   NULL,
    [SalesPerson]           NVARCHAR (64)   NULL,
    [c2FirstName]           NVARCHAR (32)   NULL,
    [c2MiddleName]          NVARCHAR (32)   NULL,
    [c2LastName]            NVARCHAR (32)   NULL,
    [c2Title]               NVARCHAR (128)  NULL,
    [c2Phone]               NVARCHAR (32)   NULL,
    [c2Ext]                 NVARCHAR (16)   NULL,
    [c2Phone_mask]          NCHAR (2)       NULL,
    [c2Cell]                NVARCHAR (32)   NULL,
    [c2Cell_mask]           NCHAR (2)       NULL,
    [c2Fax]                 NVARCHAR (32)   NULL,
    [c2Fax_mask]            NCHAR (2)       NULL,
    [c2Email]               NVARCHAR (32)   NULL,
    [c3FirstName]           NVARCHAR (32)   NULL,
    [c3MiddleName]          NVARCHAR (32)   NULL,
    [c3LastName]            NVARCHAR (32)   NULL,
    [c3Title]               NVARCHAR (128)  NULL,
    [c3Phone]               NVARCHAR (32)   NULL,
    [c3Phone_mask]          NCHAR (2)       NULL,
    [c3Ext]                 NVARCHAR (16)   NULL,
    [c3Cell]                NVARCHAR (32)   NULL,
    [c3Cell_mask]           NCHAR (2)       NULL,
    [c3Fax]                 NVARCHAR (32)   NULL,
    [c3Fax_mask]            NCHAR (2)       NULL,
    [c3Email]               NVARCHAR (32)   NULL,
    [is_shipper]            NCHAR (1)       NULL,
    [is_consignee]          NCHAR (1)       NULL,
    [is_agent]              NCHAR (1)       NULL,
    [is_vendor]             NCHAR (1)       NULL,
    [is_carrier]            NCHAR (1)       NULL,
    [is_colodee]            NCHAR (1)       NULL,
    [z_is_trucker]          NCHAR (1)       NULL,
    [z_is_special]          NCHAR (1)       NULL,
    [z_is_broker]           NCHAR (1)       NULL,
    [z_is_warehousing]      NCHAR (1)       NULL,
    [z_is_cfs]              NCHAR (1)       NULL,
    [z_is_govt]             NCHAR (1)       NULL,
    [SubConsignee]          NVARCHAR (20)   NULL,
    [SubShipper]            NVARCHAR (20)   NULL,
    [SubAgent]              NVARCHAR (20)   NULL,
    [SubCarrier]            NVARCHAR (20)   NULL,
    [SubTrucker]            NVARCHAR (20)   NULL,
    [SubWarehousing]        NVARCHAR (20)   NULL,
    [SubCFS]                NVARCHAR (20)   NULL,
    [SubBroker]             NVARCHAR (20)   NULL,
    [SubGovt]               NVARCHAR (20)   NULL,
    [SubVendor]             NVARCHAR (20)   NULL,
    [SubSpecial]            NVARCHAR (20)   NULL,
    [DefaultBroker]         NVARCHAR (20)   NULL,
    [broker_info]           NTEXT           NULL,
    [refferedBy]            NVARCHAR (64)   NULL,
    [date_opened]           DATETIME        NULL,
    [last_update]           DATETIME        NULL,
    [acct_name]             NVARCHAR (16)   NULL,
    [business_st_taxid]     NVARCHAR (16)   NULL,
    [owner_ssn]             NVARCHAR (10)   NULL
);


GO
PRINT N'Creating [dbo].[ELT_NOTIFICATION]...';


GO
CREATE TABLE [dbo].[ELT_NOTIFICATION] (
    [elt_account_number] DECIMAL (8)    NOT NULL,
    [userid]             DECIMAL (8)    NOT NULL,
    [message]            NVARCHAR (128) NULL,
    [expired_to]         DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[email_history]...';


GO
CREATE TABLE [dbo].[email_history] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [email_id]           NVARCHAR (64)  NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [user_id]            DECIMAL (18)   NULL,
    [to_org_id]          DECIMAL (18)   NULL,
    [to_org_name]        NVARCHAR (128) NULL,
    [email_sender]       NVARCHAR (128) NULL,
    [email_from]         NVARCHAR (128) NULL,
    [email_to]           NVARCHAR (128) NULL,
    [email_cc]           NVARCHAR (128) NULL,
    [email_subject]      NVARCHAR (256) NULL,
    [email_content]      NTEXT          NULL,
    [sent_date]          DATETIME       NULL,
    [sent_status]        NVARCHAR (32)  NULL,
    [air_ocean]          NVARCHAR (1)   NULL,
    [im_export]          NVARCHAR (1)   NULL,
    [screen_name]        NVARCHAR (64)  NULL,
    [master_num]         NVARCHAR (32)  NULL,
    [house_num]          NTEXT          NULL,
    [manifest_link]      NTEXT          NULL,
    [invoice_num]        NTEXT          NULL,
    [attached_files]     NTEXT          NULL,
    [attached_pdf]       NTEXT          NULL,
    [online_alert]       NVARCHAR (1)   NULL,
    [is_org_merged]      NCHAR (1)      NULL,
    CONSTRAINT [PK_email_history] PRIMARY KEY CLUSTERED ([auto_uid] ASC)
);


GO
PRINT N'Creating [dbo].[email_report]...';


GO
CREATE TABLE [dbo].[email_report] (
    [auto_uid]           INT            IDENTITY (1, 1) NOT NULL,
    [session_id]         NVARCHAR (128) NULL,
    [sqlstr]             NTEXT          NULL,
    [status]             NVARCHAR (32)  NULL,
    [elt_account_number] DECIMAL (8)    NULL,
    [company]            INT            NULL,
    [message]            NVARCHAR (256) NULL,
    [sent_date]          DATETIME       NULL,
    [email]              NVARCHAR (256) NULL,
    [period]             NVARCHAR (64)  NULL,
    [is_org_merged]      NCHAR (1)      NULL
);


GO
PRINT N'Creating [dbo].[email_report].[email_report_elt_company]...';


GO
CREATE NONCLUSTERED INDEX [email_report_elt_company]
    ON [dbo].[email_report]([elt_account_number] ASC, [company] ASC);


GO
PRINT N'Creating [dbo].[export_code]...';


GO
CREATE TABLE [dbo].[export_code] (
    [export_code] NCHAR (2)      NOT NULL,
    [export_desc] NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[ff_rate_table]...';


GO
CREATE TABLE [dbo].[ff_rate_table] (
    [elt_account_number] DECIMAL (8)     NULL,
    [item_no]            INT             NULL,
    [airline]            NVARCHAR (3)    NULL,
    [origin_port]        NVARCHAR (3)    NULL,
    [dest_port]          NVARCHAR (3)    NULL,
    [weight_break]       DECIMAL (10, 2) NULL,
    [rate]               DECIMAL (5, 2)  NULL
);


GO
PRINT N'Creating [dbo].[flight_no]...';


GO
CREATE TABLE [dbo].[flight_no] (
    [elt_account_number] DECIMAL (8)   NULL,
    [airline_name]       NVARCHAR (64) NULL,
    [airline_code]       NVARCHAR (2)  NULL,
    [flight_no]          NVARCHAR (16) NULL,
    [pod]                NVARCHAR (16) NULL,
    [poa]                NVARCHAR (16) NULL
);


GO
PRINT N'Creating [dbo].[form_stmt]...';


GO
CREATE TABLE [dbo].[form_stmt] (
    [form_name] NVARCHAR (32)  NULL,
    [stmt_name] NVARCHAR (32)  NULL,
    [stmt]      NVARCHAR (256) NULL,
    [country]   NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[freight_location]...';


GO
CREATE TABLE [dbo].[freight_location] (
    [elt_account_number] DECIMAL (8)    NULL,
    [location]           NVARCHAR (128) NULL,
    [firm_code]          NVARCHAR (8)   NULL,
    [phone]              NVARCHAR (32)  NULL,
    [fax]                NVARCHAR (32)  NULL,
    [address]            NVARCHAR (128) NULL,
    [city]               NVARCHAR (64)  NULL,
    [state]              NVARCHAR (2)   NULL,
    [country]            NVARCHAR (32)  NULL
);


GO
PRINT N'Creating [dbo].[general_journal_entry]...';


GO
CREATE TABLE [dbo].[general_journal_entry] (
    [elt_account_number] DECIMAL (8)     NULL,
    [entry_no]           INT             NULL,
    [item_no]            INT             NULL,
    [gl_account_number]  DECIMAL (7)     NULL,
    [credit]             DECIMAL (12, 2) NULL,
    [debit]              DECIMAL (12, 2) NULL,
    [memo]               NVARCHAR (128)  NULL,
    [org_acct]           DECIMAL (6)     NULL,
    [dt]                 DATETIME        NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[gl]...';


GO
CREATE TABLE [dbo].[gl] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [gl_account_number]  DECIMAL (7)     NOT NULL,
    [gl_account_desc]    NVARCHAR (128)  NULL,
    [gl_master_type]     NVARCHAR (32)   NULL,
    [gl_account_type]    NVARCHAR (32)   NULL,
    [gl_account_balance] DECIMAL (12, 2) NULL,
    [gl_begin_balance]   DECIMAL (12, 2) NULL,
    [gl_account_status]  NCHAR (1)       NULL,
    [gl_account_cdate]   DATETIME        NULL,
    [gl_last_modified]   DATETIME        NULL,
    [control_no]         DECIMAL (18)    NULL,
    [gl_default]         NCHAR (1)       NULL,
    [gl_vendor_no]       DECIMAL (18)    NULL,
    CONSTRAINT [PK_gl] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [gl_account_number] ASC)
);


GO
PRINT N'Creating [dbo].[gl_reference]...';


GO
CREATE TABLE [dbo].[gl_reference] (
    [gl_id]          DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [gl_master_type] NVARCHAR (128) NULL,
    [gl_type]        NVARCHAR (256) NULL,
    [remark]         NTEXT          NULL
);


GO
PRINT N'Creating [dbo].[greetMessage]...';


GO
CREATE TABLE [dbo].[greetMessage] (
    [AgentID] NUMERIC (8)   NOT NULL,
    [MsgType] NVARCHAR (20) NOT NULL,
    [MsgTxt]  NTEXT         NULL
);


GO
PRINT N'Creating [dbo].[HAWB_master]...';


GO
CREATE TABLE [dbo].[HAWB_master] (
    [elt_account_number]                  DECIMAL (8)     NOT NULL,
    [HAWB_NUM]                            NVARCHAR (32)   NOT NULL,
    [MAWB_NUM]                            NVARCHAR (64)   NULL,
    [DEP_AIRPORT_CODE]                    NVARCHAR (3)    NULL,
    [airline_vendor_num]                  DECIMAL (5)     NULL,
    [Agent_Name]                          NVARCHAR (128)  NULL,
    [Agent_Info]                          NTEXT           NULL,
    [Agent_No]                            DECIMAL (7)     NULL,
    [Shipper_Name]                        NVARCHAR (128)  NULL,
    [Shipper_Info]                        NTEXT           NULL,
    [Shipper_account_number]              NVARCHAR (16)   NULL,
    [ff_shipper_acct]                     NVARCHAR (64)   NULL,
    [Consignee_Name]                      NVARCHAR (256)  NULL,
    [Consignee_Info]                      NTEXT           NULL,
    [Consignee_acct_num]                  NVARCHAR (32)   NULL,
    [ff_consignee_acct]                   NVARCHAR (64)   NULL,
    [Issue_Carrier_agent]                 NTEXT           NULL,
    [Agent_IATA_Code]                     NVARCHAR (32)   NULL,
    [Account_No]                          NVARCHAR (32)   NULL,
    [Departure_Airport]                   NVARCHAR (64)   NULL,
    [departure_state]                     NVARCHAR (16)   NULL,
    [IssuedBy]                            NTEXT           NULL,
    [Account_Info]                        NTEXT           NULL,
    [to_1]                                NVARCHAR (8)    NULL,
    [by_1]                                NVARCHAR (64)   NULL,
    [to_2]                                NVARCHAR (8)    NULL,
    [by_2]                                NVARCHAR (64)   NULL,
    [to_3]                                NVARCHAR (8)    NULL,
    [by_3]                                NVARCHAR (64)   NULL,
    [Currency]                            NVARCHAR (3)    NULL,
    [Charge_Code]                         NVARCHAR (10)   NULL,
    [PPO_1]                               NVARCHAR (1)    NULL,
    [COLL_1]                              NVARCHAR (1)    NULL,
    [PPO_2]                               NVARCHAR (1)    NULL,
    [COLL_2]                              NVARCHAR (1)    NULL,
    [Declared_Value_Carriage]             NVARCHAR (16)   NULL,
    [Declared_Value_Customs]              NVARCHAR (16)   NULL,
    [Dest_Airport]                        NVARCHAR (64)   NULL,
    [flight_no]                           NVARCHAR (12)   NULL,
    [Flight_Date_1]                       NVARCHAR (32)   NULL,
    [Flight_Date_2]                       NVARCHAR (32)   NULL,
    [export_date]                         DATETIME        NULL,
    [Insurance_AMT]                       NVARCHAR (16)   NULL,
    [Handling_Info]                       NTEXT           NULL,
    [dest_country]                        NVARCHAR (128)  NULL,
    [SCI]                                 NVARCHAR (16)   NULL,
    [Total_Pieces]                        DECIMAL (18)    NULL,
    [Adjusted_Weight]                     DECIMAL (12, 2) NULL,
    [Total_Gross_Weight]                  DECIMAL (12, 2) NULL,
    [Total_Chargeable_Weight]             DECIMAL (12, 2) NULL,
    [Weight_Scale]                        NCHAR (1)       NULL,
    [Total_Weight_Charge_HAWB]            DECIMAL (12, 2) NULL,
    [total_other_cost]                    DECIMAL (18, 2) NULL,
    [af_cost]                             DECIMAL (12, 2) NULL,
    [agent_profit]                        DECIMAL (12, 2) NULL,
    [agent_profit_share]                  DECIMAL (3, 2)  NULL,
    [other_agent_profit_carrier]          DECIMAL (12, 2) NULL,
    [other_agent_profit_agent]            DECIMAL (12, 2) NULL,
    [Total_Weight_Charge_ACCT]            DECIMAL (12, 2) NULL,
    [Total_Other_Charges]                 DECIMAL (12, 2) NULL,
    [Prepaid_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Collect_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Prepaid_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Collect_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Prepaid_Tax]                         DECIMAL (12, 2) NULL,
    [Collect_Tax]                         DECIMAL (12, 2) NULL,
    [Prepaid_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Collect_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Prepaid_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Collect_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Prepaid_Unused]                      DECIMAL (12, 2) NULL,
    [Collect_Unused]                      DECIMAL (12, 2) NULL,
    [Prepaid_Total]                       DECIMAL (12, 2) NULL,
    [Collect_Total]                       DECIMAL (12, 2) NULL,
    [Signature]                           NTEXT           NULL,
    [Date_Executed]                       DATETIME        NULL,
    [Execution]                           NTEXT           NULL,
    [Date_Last_Modified]                  DATETIME        NULL,
    [Currency_Conv_Rate]                  DECIMAL (10, 2) NULL,
    [CC_Charge_Dest_Rate]                 DECIMAL (10, 2) NULL,
    [Charge_at_Dest]                      DECIMAL (12, 2) NULL,
    [Total_Collect_Charge]                DECIMAL (12, 2) NULL,
    [Desc1]                               NTEXT           NULL,
    [Desc2]                               NTEXT           NULL,
    [manifest_desc]                       NTEXT           NULL,
    [lc]                                  NVARCHAR (128)  NULL,
    [ci]                                  NVARCHAR (128)  NULL,
    [other_ref]                           NVARCHAR (128)  NULL,
    [Show_Weight_Charge_Shipper]          NCHAR (1)       NULL,
    [Show_Weight_Charge_Consignee]        NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Prepaid_Invoiced]                    NCHAR (1)       NULL,
    [Collect_Invoiced]                    NCHAR (1)       NULL,
    [colo]                                NCHAR (1)       NULL,
    [colo_pay]                            NCHAR (1)       NULL,
    [coloder_elt_acct]                    DECIMAL (8)     NULL,
    [coloder_invoiced]                    NCHAR (1)       NULL,
    [Notify_no]                           NVARCHAR (32)   NULL,
    [SalesPerson]                         NVARCHAR (64)   NULL,
    [CreatedBy]                           NVARCHAR (64)   NULL,
    [CreatedDate]                         DATETIME        NULL,
    [ModifiedBy]                          NVARCHAR (64)   NULL,
    [ModifiedDate]                        DATETIME        NULL,
    [aes_xtn]                             NVARCHAR (64)   NULL,
    [rate_on]                             NCHAR (2)       NULL,
    [is_sub]                              NCHAR (1)       NULL,
    [is_master]                           NCHAR (1)       NULL,
    [sub_to_no]                           NVARCHAR (32)   NULL,
    [sub_no]                              INT             NULL,
    [is_master_closed]                    NCHAR (1)       NULL,
    [is_invoice_queued]                   NCHAR (1)       NULL,
    [is_org_merged]                       NCHAR (1)       NULL,
    [master_weight_charge]                DECIMAL (12, 2) NULL,
    [master_pieces]                       DECIMAL (4)     NULL,
    [master_gross_weight]                 DECIMAL (12, 2) NULL,
    [master_chargeable_weight]            DECIMAL (12, 2) NULL,
    [dimtext]                             NTEXT           NULL,
    [reference_number]                    NVARCHAR (32)   NULL,
    [sub_count]                           NCHAR (1)       NULL,
    [is_dome]                             NVARCHAR (1)    NOT NULL,
    [iac_num]                             NVARCHAR (32)   NULL,
    [service_level_other]                 NVARCHAR (64)   NULL,
    [PO_num]                              NVARCHAR (32)   NULL,
    [purchase_num]                        NVARCHAR (64)   NULL,
    [shipper_reference_num]               NVARCHAR (64)   NULL,
    [service_level]                       NVARCHAR (128)  NULL,
    [cod_amount]                          DECIMAL (10, 2) NULL,
    [shipper_cod_amount]                  DECIMAL (10, 2) NULL,
    [bill_to_party]                       NVARCHAR (1)    NULL,
    [danger_good]                         NVARCHAR (1)    NULL,
    [show_weight_charge_rate]             NVARCHAR (1)    NULL,
    [show_other_charge_rate]              NVARCHAR (1)    NULL,
    [is_agent_house]                      NVARCHAR (1)    NULL,
    [is_inbound]                          NVARCHAR (1)    NULL,
    [sed_stmt]                            NVARCHAR (128)  NULL
);


GO
PRINT N'Creating [dbo].[HAWB_master].[PK_hawb_master]...';


GO
CREATE UNIQUE CLUSTERED INDEX [PK_hawb_master]
    ON [dbo].[HAWB_master]([elt_account_number] ASC, [HAWB_NUM] ASC, [MAWB_NUM] ASC);


GO
PRINT N'Creating [dbo].[HAWB_master].[NonClusteredIndex-HAWB_master]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-HAWB_master]
    ON [dbo].[HAWB_master]([MAWB_NUM] ASC);


GO
PRINT N'Creating [dbo].[HAWB_master_add]...';


GO
CREATE TABLE [dbo].[HAWB_master_add] (
    [auto_uid]            DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [hawb_num]            NVARCHAR (64)  NULL,
    [mawb_num]            NVARCHAR (64)  NULL,
    [is_agent_house]      NVARCHAR (1)   NULL,
    [elt_account_number]  DECIMAL (18)   NULL,
    [customer_acct]       DECIMAL (18)   NULL,
    [billto_acct]         DECIMAL (18)   NULL,
    [ship_status]         NVARCHAR (1)   NULL,
    [pickup_alert_date]   NVARCHAR (10)  NULL,
    [pickup_alert_time]   NVARCHAR (8)   NULL,
    [ready_date]          NVARCHAR (10)  NULL,
    [ready_time]          NVARCHAR (8)   NULL,
    [close_date]          NVARCHAR (10)  NULL,
    [close_time]          NVARCHAR (8)   NULL,
    [pickup_date]         NVARCHAR (10)  NULL,
    [pickup_time]         NVARCHAR (8)   NULL,
    [dispatch_date]       NVARCHAR (10)  NULL,
    [dispatch_time]       NVARCHAR (8)   NULL,
    [onboard_date]        NVARCHAR (10)  NULL,
    [onboard_time]        NVARCHAR (8)   NULL,
    [transfer_date]       NVARCHAR (10)  NULL,
    [transfer_time]       NVARCHAR (8)   NULL,
    [carrier_signer]      NVARCHAR (128) NULL,
    [delivery_alert_date] NVARCHAR (10)  NULL,
    [delivery_alert_time] NVARCHAR (50)  NULL,
    [recover_date]        NVARCHAR (50)  NULL,
    [recover_time]        NVARCHAR (50)  NULL,
    [OFD_date]            NVARCHAR (50)  NULL,
    [OFD_time]            NVARCHAR (50)  NULL,
    [POD_date]            NVARCHAR (50)  NULL,
    [POD_time]            NVARCHAR (50)  NULL,
    [POD_signer]          NVARCHAR (128) NULL,
    [ship_time_status]    NVARCHAR (32)  NULL
);


GO
PRINT N'Creating [dbo].[HAWB_master_drivers]...';


GO
CREATE TABLE [dbo].[HAWB_master_drivers] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [hawb_num]           NVARCHAR (64)  NULL,
    [mawb_num]           NVARCHAR (64)  NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [driver_acct]        DECIMAL (18)   NULL,
    [piece]              DECIMAL (18)   NULL,
    [weight]             DECIMAL (9, 2) NULL,
    [cost_item_no]       DECIMAL (18)   NULL,
    [cost_amount]        DECIMAL (9, 2) NULL,
    [cost_percent]       DECIMAL (9, 2) NULL,
    [remark]             NTEXT          NULL,
    [item_id]            DECIMAL (18)   NULL,
    [driver_paid]        DECIMAL (9, 2) NULL
);


GO
PRINT N'Creating [dbo].[hawb_milestones]...';


GO
CREATE TABLE [dbo].[hawb_milestones] (
    [auto_uid]           DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [hawb_num]           NVARCHAR (128) NULL,
    [location_id]        NVARCHAR (8)   NULL,
    [seq_id]             DECIMAL (18)   NULL,
    [job_type]           NVARCHAR (128) NULL,
    [status]             NVARCHAR (32)  NULL,
    [remark]             NTEXT          NULL,
    [update_date]        DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[hawb_Other_Charge]...';


GO
CREATE TABLE [dbo].[hawb_Other_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [HAWB_NUM]           NVARCHAR (128)  NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [Carrier_Agent]      NCHAR (1)       NULL,
    [charge_code]        INT             NULL,
    [Charge_Desc]        NVARCHAR (128)  NULL,
    [Amt_HAWB]           DECIMAL (12, 2) NULL,
    [Amt_Acct]           DECIMAL (12, 2) NULL,
    [vendor_num]         DECIMAL (18)    NULL,
    [cost_code]          INT             NULL,
    [cost_desc]          NVARCHAR (128)  NULL,
    [cost_amt]           DECIMAL (12, 2) NULL,
    [invoice_only]       NVARCHAR (1)    NULL
);


GO
PRINT N'Creating [dbo].[hawb_Other_Charge].[NonClusteredIndex-hawb_Other_Charge]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-hawb_Other_Charge]
    ON [dbo].[hawb_Other_Charge]([elt_account_number] ASC, [HAWB_NUM] ASC)
    INCLUDE([Coll_Prepaid], [charge_code], [Charge_Desc], [Amt_HAWB]);


GO
PRINT N'Creating [dbo].[hawb_other_cost]...';


GO
CREATE TABLE [dbo].[hawb_other_cost] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)    NULL,
    [hawb_num]           NVARCHAR (50)   NULL,
    [vendor_no]          DECIMAL (18)    NULL,
    [cost_amt]           DECIMAL (18, 2) NULL,
    [item_no]            DECIMAL (18)    NULL,
    [cost_desc]          NVARCHAR (50)   NULL
);


GO
PRINT N'Creating [dbo].[hawb_weight_charge]...';


GO
CREATE TABLE [dbo].[hawb_weight_charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [HAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [No_Pieces]          INT             NULL,
    [unit_qty]           NVARCHAR (8)    NULL,
    [Gross_Weight]       DECIMAL (10, 2) NULL,
    [Adjusted_Weight]    DECIMAL (10, 2) NULL,
    [Kg_Lb]              NCHAR (1)       NULL,
    [Service_Code]       NCHAR (4)       NULL,
    [Rate_Class]         NVARCHAR (1)    NULL,
    [Commodity_Item_No]  NVARCHAR (16)   NULL,
    [length]             DECIMAL (9, 2)  NULL,
    [width]              DECIMAL (9, 2)  NULL,
    [height]             DECIMAL (9, 2)  NULL,
    [cubic_inches]       DECIMAL (18)    NULL,
    [dimension_factor]   DECIMAL (18)    NULL,
    [Dimension]          DECIMAL (12, 2) NULL,
    [Dem_Detail]         NVARCHAR (1024) NULL,
    [Chargeable_Weight]  DECIMAL (12, 2) NULL,
    [Rate_Charge]        DECIMAL (10, 2) NULL,
    [Total_Charge]       DECIMAL (12, 2) NULL,
    [Desc1]              NVARCHAR (256)  NULL,
    [Desc2]              NVARCHAR (256)  NULL,
    [is_master]          NCHAR (1)       NULL,
    [invoice_only]       NVARCHAR (1)    NULL
);


GO
PRINT N'Creating [dbo].[hbol_master]...';


GO
CREATE TABLE [dbo].[hbol_master] (
    [elt_account_number]         DECIMAL (8)     NOT NULL,
    [hbol_num]                   NVARCHAR (32)   NOT NULL,
    [booking_num]                NVARCHAR (32)   NULL,
    [mbol_num]                   NVARCHAR (32)   NULL,
    [agent_name]                 NVARCHAR (128)  NULL,
    [agent_info]                 NTEXT           NULL,
    [agent_no]                   DECIMAL (6)     NULL,
    [forward_agent_name]         NVARCHAR (128)  NULL,
    [forward_agent_info]         NTEXT           NULL,
    [forward_agent_acct_num]     DECIMAL (7)     NULL,
    [Shipper_Name]               NVARCHAR (128)  NULL,
    [Shipper_Info]               NTEXT           NULL,
    [Shipper_acct_num]           DECIMAL (7)     NULL,
    [Consignee_Name]             NVARCHAR (128)  NULL,
    [Consignee_Info]             NTEXT           NULL,
    [Consignee_acct_num]         DECIMAL (7)     NULL,
    [export_ref]                 NTEXT           NULL,
    [origin_country]             NVARCHAR (32)   NULL,
    [dest_country]               NVARCHAR (64)   NULL,
    [export_instr]               NTEXT           NULL,
    [loading_pier]               NVARCHAR (64)   NULL,
    [move_type]                  NVARCHAR (32)   NULL,
    [containerized]              NCHAR (1)       NULL,
    [pre_carriage]               NVARCHAR (64)   NULL,
    [pre_receipt_place]          NVARCHAR (64)   NULL,
    [export_carrier]             NVARCHAR (64)   NULL,
    [vessel_name]                NVARCHAR (64)   NULL,
    [loading_port]               NVARCHAR (64)   NULL,
    [unloading_port]             NVARCHAR (64)   NULL,
    [departure_date]             DATETIME        NULL,
    [delivery_place]             NVARCHAR (64)   NULL,
    [desc1]                      NTEXT           NULL,
    [desc2]                      NTEXT           NULL,
    [desc3]                      NTEXT           NULL,
    [desc4]                      NTEXT           NULL,
    [desc5]                      NTEXT           NULL,
    [manifest_desc]              NVARCHAR (128)  NULL,
    [weight_cp]                  NCHAR (1)       NULL,
    [prepaid_other_charge]       NCHAR (1)       NULL,
    [collect_other_charge]       NCHAR (1)       NULL,
    [pieces]                     INT             NULL,
    [scale]                      NCHAR (1)       NULL,
    [gross_weight]               DECIMAL (12, 2) NULL,
    [measurement]                DECIMAL (12, 2) NULL,
    [width]                      DECIMAL (10, 2) NULL,
    [length]                     DECIMAL (10, 2) NULL,
    [height]                     DECIMAL (10, 2) NULL,
    [dem_detail]                 NTEXT           NULL,
    [charge_rate]                FLOAT (53)      NULL,
    [total_weight_charge]        DECIMAL (12, 2) NULL,
    [Show_Prepaid_Weight_Charge] NCHAR (1)       NULL,
    [Show_Collect_Weight_Charge] NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge]  NCHAR (1)       NULL,
    [Show_Collect_Other_Charge]  NCHAR (1)       NULL,
    [declared_value]             DECIMAL (12, 2) NULL,
    [tran_by]                    NVARCHAR (64)   NULL,
    [tran_date]                  DATETIME        NULL,
    [tran_place]                 NVARCHAR (32)   NULL,
    [last_modified]              DATETIME        NULL,
    [prepaid_invoiced]           NCHAR (1)       NULL,
    [collect_invoiced]           NCHAR (1)       NULL,
    [ci]                         NVARCHAR (128)  NULL,
    [Notify_Name]                NVARCHAR (128)  NULL,
    [Notify_Info]                NTEXT           NULL,
    [Notify_acct_num]            DECIMAL (7)     NULL,
    [unit_qty]                   NVARCHAR (8)    NULL,
    [SalesPerson]                NVARCHAR (64)   NULL,
    [CreatedBy]                  NVARCHAR (64)   NULL,
    [CreatedDate]                DATETIME        NULL,
    [ModifiedBy]                 NVARCHAR (64)   NULL,
    [ModifiedDate]               DATETIME        NULL,
    [total_other_charge]         DECIMAL (12)    NULL,
    [total_other_cost]           DECIMAL (18, 2) NULL,
    [lc]                         NVARCHAR (64)   NULL,
    [aes_xtn]                    NVARCHAR (64)   NULL,
    [colo]                       NCHAR (1)       NULL,
    [coloder_elt_acct]           DECIMAL (8)     NULL,
    [colo_pay]                   NCHAR (1)       NULL,
    [coloder_invoiced]           NCHAR (1)       NULL,
    [is_sub]                     NCHAR (1)       NULL,
    [is_master]                  NCHAR (1)       NULL,
    [sub_to_no]                  NVARCHAR (32)   NULL,
    [sub_no]                     INT             NULL,
    [is_master_closed]           NCHAR (1)       NULL,
    [is_invoice_queued]          NCHAR (1)       NULL,
    [is_org_merged]              NCHAR (1)       NULL,
    [master_weight_charge]       DECIMAL (12, 2) NULL,
    [master_pieces]              DECIMAL (4)     NULL,
    [master_gross_weight]        DECIMAL (12, 2) NULL,
    [master_chargeable_weight]   DECIMAL (12, 2) NULL,
    [dimtext]                    NTEXT           NULL,
    [sub_count]                  NCHAR (1)       NULL,
    [of_cost]                    DECIMAL (12, 2) NULL,
    [agent_profit]               DECIMAL (12, 2) NULL,
    [agent_profit_share]         DECIMAL (3, 2)  NULL,
    [other_agent_profit_carrier] DECIMAL (12, 2) NULL,
    [other_agent_profit_agent]   DECIMAL (12, 2) NULL,
    [sed_stmt]                   NVARCHAR (128)  NULL
);


GO
PRINT N'Creating [dbo].[hbol_master].[PK_hbol_master]...';


GO
CREATE UNIQUE CLUSTERED INDEX [PK_hbol_master]
    ON [dbo].[hbol_master]([elt_account_number] ASC, [hbol_num] ASC, [booking_num] ASC);


GO
PRINT N'Creating [dbo].[hbol_other_charge]...';


GO
CREATE TABLE [dbo].[hbol_other_charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [hbol_num]           NVARCHAR (128)  NOT NULL,
    [tran_no]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [charge_code]        INT             NULL,
    [charge_desc]        NVARCHAR (128)  NULL,
    [charge_amt]         DECIMAL (12, 2) NULL,
    [vendor_num]         DECIMAL (18)    NULL,
    [cost_code]          INT             NULL,
    [cost_desc]          NVARCHAR (128)  NULL,
    [cost_amt]           DECIMAL (12, 2) NULL
);


GO
PRINT N'Creating [dbo].[hbol_other_cost]...';


GO
CREATE TABLE [dbo].[hbol_other_cost] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)    NULL,
    [hbol_num]           NVARCHAR (50)   NULL,
    [vendor_no]          DECIMAL (18)    NULL,
    [cost_amt]           DECIMAL (18, 2) NULL,
    [item_no]            DECIMAL (18)    NULL,
    [cost_desc]          NVARCHAR (50)   NULL
);


GO
PRINT N'Creating [dbo].[iata_rate_table]...';


GO
CREATE TABLE [dbo].[iata_rate_table] (
    [item_no]      INT             NULL,
    [airline]      NVARCHAR (3)    NULL,
    [origin_port]  NVARCHAR (3)    NULL,
    [dest_port]    NVARCHAR (3)    NULL,
    [weight_break] DECIMAL (10, 2) NULL,
    [rate]         DECIMAL (5, 2)  NULL
);


GO
PRINT N'Creating [dbo].[IFF_statistics]...';


GO
CREATE TABLE [dbo].[IFF_statistics] (
    [s_date]       DATETIME       NULL,
    [s_week]       NVARCHAR (250) COLLATE Korean_Wansung_Unicode_CI_AI_KS_WS NULL,
    [s_user_agent] NVARCHAR (250) COLLATE Korean_Wansung_Unicode_CI_AI_KS_WS NULL,
    [s_referer]    NVARCHAR (250) COLLATE Korean_Wansung_Unicode_CI_AI_KS_WS NULL,
    [ip]           NVARCHAR (50)  NULL
);


GO
PRINT N'Creating [dbo].[ig_ocean_ams_edi_header]...';


GO
CREATE TABLE [dbo].[ig_ocean_ams_edi_header] (
    [elt_account_number]              DECIMAL (18)  NOT NULL,
    [doc_number]                      DECIMAL (18)  NOT NULL,
    [v1_vessel_code]                  NCHAR (7)     NULL,
    [v2_voyage_number]                NCHAR (5)     NULL,
    [v3_vessel_name]                  NCHAR (23)    NULL,
    [v4_scac_code]                    NCHAR (4)     NULL,
    [v5_vessel_flag]                  NCHAR (2)     NULL,
    [v6_first_us_port_of_discharge]   NCHAR (5)     NULL,
    [v7_last_foreign_pol_s]           NCHAR (32)    NULL,
    [v7_last_foreign_pol]             NCHAR (5)     NULL,
    [p1_port_of_discharge]            NCHAR (5)     NULL,
    [p2_estimated_date_of_arrival]    DATETIME      NULL,
    [p3_terminal_operator_code_s]     NCHAR (32)    NULL,
    [p3_terminal_operator_code]       NCHAR (5)     NULL,
    [l1_port_of_load_s]               NCHAR (32)    NULL,
    [l1_port_of_load]                 NCHAR (5)     NULL,
    [l2_load_date]                    DATETIME      NULL,
    [l3_load_time]                    SMALLDATETIME NULL,
    [creation_date]                   DATETIME      NULL,
    [b1_bill_of_lading_number]        NCHAR (12)    NULL,
    [b2_port_of_loading_s]            NCHAR (32)    NULL,
    [b2_port_of_loading]              NCHAR (5)     NULL,
    [b3_place_of_final_destination_s] NCHAR (32)    NULL,
    [b3_place_of_final_destination]   NCHAR (5)     NULL,
    [b4_place_of_receipt]             NCHAR (17)    NULL,
    [b5_b_lading_status_code]         NCHAR (1)     NULL,
    [b6_b_lading_issuer_scac_code]    NCHAR (4)     NULL,
    [b7_snp1]                         NCHAR (4)     NULL,
    [b8_snp2]                         NCHAR (4)     NULL,
    [b9_manifested_units]             NCHAR (5)     NULL,
    [b10_total_gross_weight]          NCHAR (10)    NULL,
    [b11_booking_number]              NCHAR (30)    NULL,
    [b12_master_ocean_bill_number]    NCHAR (16)    NULL,
    [b13_agency_unique_code]          NCHAR (5)     NULL,
    [b14_snp3]                        NCHAR (4)     NULL,
    [b15_snp4]                        NCHAR (4)     NULL,
    [b16_snp5]                        NCHAR (4)     NULL,
    [b17_snp6]                        NCHAR (4)     NULL,
    [b18_snp7]                        NCHAR (4)     NULL,
    [b19_snp8]                        NCHAR (4)     NULL,
    [b20_weight_unit]                 NCHAR (2)     NULL,
    [s1_shipper_name]                 NCHAR (35)    NULL,
    [s2_shipper_address1]             NCHAR (35)    NULL,
    [s3_shipper_address2]             NCHAR (35)    NULL,
    [s4_shipper_city]                 NCHAR (19)    NULL,
    [s5_shipper_state_province]       NCHAR (2)     NULL,
    [s6_shipper_postal_code]          NCHAR (10)    NULL,
    [s7_shipper_telephone_fax]        NCHAR (35)    NULL,
    [s8_shipper_iso_country_code]     NCHAR (2)     NULL,
    [s9_shipper_contact_name]         NCHAR (35)    NULL,
    [c1_consignee_name]               NCHAR (35)    NULL,
    [c2_consignee_address1]           NCHAR (35)    NULL,
    [c3_consignee_address2]           NCHAR (35)    NULL,
    [c4_consignee_city]               NCHAR (19)    NULL,
    [c5_consignee_state_province]     NCHAR (2)     NULL,
    [c6_consignee_postal_code]        NCHAR (9)     NULL,
    [c7_consignee_telephone_fax]      NCHAR (35)    NULL,
    [c8_consignee_iso_country_code]   NCHAR (2)     NULL,
    [c9_consignee_contact_name]       NCHAR (35)    NULL,
    [n1_notify_name]                  NCHAR (35)    NULL,
    [n2_notify_address1]              NCHAR (35)    NULL,
    [n3_notify_address2]              NCHAR (35)    NULL,
    [n4_notify_city]                  NCHAR (19)    NULL,
    [n5_notify_state_province]        NCHAR (2)     NULL,
    [n6_notify_postal_code]           NCHAR (9)     NULL,
    [n7_notify_telephone_fax]         NCHAR (35)    NULL,
    [n8_notify_iso_country_code]      NCHAR (2)     NULL,
    [n9_notify_party_contact_name]    NCHAR (35)    NULL
);


GO
PRINT N'Creating [dbo].[ig_ocean_ams_edi_item]...';


GO
CREATE TABLE [dbo].[ig_ocean_ams_edi_item] (
    [elt_account_number]           DECIMAL (18) NOT NULL,
    [doc_number]                   DECIMAL (18) NOT NULL,
    [i1_item_number]               NCHAR (3)    NOT NULL,
    [i2_quantity]                  NCHAR (10)   NULL,
    [i3_net_weight]                NCHAR (10)   NULL,
    [i4_volume]                    NCHAR (10)   NULL,
    [i5_package_type]              NCHAR (3)    NULL,
    [i6_comodity_code]             NCHAR (11)   NULL,
    [i7_cash_value]                NCHAR (8)    NULL,
    [e1_equipment_number]          NCHAR (14)   NULL,
    [e2_seal_number1]              NCHAR (15)   NULL,
    [e3_seal_number2]              NCHAR (15)   NULL,
    [e4_length]                    NCHAR (5)    NULL,
    [e5_width]                     NCHAR (8)    NULL,
    [e6_height]                    NCHAR (8)    NULL,
    [e7_iso_equipment]             NCHAR (4)    NULL,
    [e8_type_of_service]           NCHAR (2)    NULL,
    [e9_loaded_empty_total]        NCHAR (1)    NULL,
    [e10_equipment_desc_code]      NCHAR (2)    NULL,
    [d1_line_of_description]       NCHAR (45)   NULL,
    [m1_line_of_marks_and_numbers] NCHAR (45)   NULL,
    [h1_hazard_code]               NCHAR (10)   NULL,
    [h2_hazard_class]              NCHAR (4)    NULL,
    [h3_hazard_description]        NCHAR (30)   NULL,
    [h4_hazard_contact]            NCHAR (24)   NULL,
    [h5_un_page_number]            NCHAR (6)    NULL,
    [h6_flashpoint_temperature]    NCHAR (3)    NULL,
    [h7_hazard_code_qualifier]     NCHAR (1)    NULL,
    [h8_hazard_unit_of_measure]    NCHAR (2)    NULL,
    [h9_negative_indigator]        NCHAR (1)    NULL,
    [h10_hazard_label]             NCHAR (30)   NULL,
    [h11_hazard_classification]    NCHAR (30)   NULL
);


GO
PRINT N'Creating [dbo].[ig_ocean_ams_que]...';


GO
CREATE TABLE [dbo].[ig_ocean_ams_que] (
    [sessionid]          NCHAR (30)  NOT NULL,
    [elt_account_number] DECIMAL (8) NOT NULL,
    [doc_number]         NCHAR (20)  NOT NULL
);


GO
PRINT N'Creating [dbo].[ig_org_comments]...';


GO
CREATE TABLE [dbo].[ig_org_comments] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [org_account_number] DECIMAL (7)     NOT NULL,
    [item_no]            NCHAR (3)       NOT NULL,
    [title]              NCHAR (32)      NULL,
    [comment]            NVARCHAR (1024) NULL,
    [date]               SMALLDATETIME   NULL,
    [editedby]           NCHAR (20)      NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[ig_org_comments_tmp]...';


GO
CREATE TABLE [dbo].[ig_org_comments_tmp] (
    [sessionid]          NCHAR (30)      NOT NULL,
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [org_account_number] DECIMAL (7)     NOT NULL,
    [item_no]            NCHAR (3)       NOT NULL,
    [title]              NCHAR (32)      NULL,
    [comment]            NVARCHAR (1024) NULL,
    [date]               SMALLDATETIME   NULL,
    [editedby]           NCHAR (20)      NULL
);


GO
PRINT N'Creating [dbo].[ig_org_contact]...';


GO
CREATE TABLE [dbo].[ig_org_contact] (
    [elt_account_number] DECIMAL (8)    NOT NULL,
    [org_account_number] DECIMAL (7)    NOT NULL,
    [item_no]            INT            NOT NULL,
    [name]               NVARCHAR (128) NULL,
    [job_title]          NVARCHAR (32)  NULL,
    [phone]              NVARCHAR (32)  NULL,
    [fax]                NVARCHAR (32)  NULL,
    [email]              NVARCHAR (128) NULL,
    [remark]             NVARCHAR (64)  NULL,
    [date]               SMALLDATETIME  NULL,
    [editedby]           NCHAR (20)     NULL,
    [cellPhone]          NVARCHAR (32)  NULL,
    [phoneExt]           NVARCHAR (32)  NULL,
    [is_org_merged]      NCHAR (1)      NULL
);


GO
PRINT N'Creating [dbo].[ig_org_que]...';


GO
CREATE TABLE [dbo].[ig_org_que] (
    [sessionid]          NCHAR (30)  NOT NULL,
    [elt_account_number] DECIMAL (8) NOT NULL,
    [org_account_number] DECIMAL (7) NOT NULL
);


GO
PRINT N'Creating [dbo].[ig_schedule_b]...';


GO
CREATE TABLE [dbo].[ig_schedule_b] (
    [elt_account_number] DECIMAL (8)   NOT NULL,
    [org_account_number] DECIMAL (7)   NOT NULL,
    [sb]                 NVARCHAR (32) NOT NULL,
    [sb_unit1]           NVARCHAR (3)  NULL,
    [sb_unit2]           NVARCHAR (3)  NULL,
    [description]        NVARCHAR (45) NULL,
    [is_org_merged]      NCHAR (1)     NULL,
    [export_code]        NVARCHAR (2)  NULL,
    [license_type]       NVARCHAR (3)  NULL,
    [eccn]               NVARCHAR (5)  NULL,
    [sb_id]              DECIMAL (18)  NULL
);


GO
PRINT N'Creating [dbo].[ig_schedule_b_old]...';


GO
CREATE TABLE [dbo].[ig_schedule_b_old] (
    [elt_account_number] DECIMAL (8)   NOT NULL,
    [org_account_number] DECIMAL (7)   NOT NULL,
    [sb]                 NVARCHAR (32) NOT NULL,
    [sb_unit1]           NVARCHAR (3)  NULL,
    [sb_unit2]           NVARCHAR (3)  NULL,
    [description]        NVARCHAR (45) NULL,
    [is_org_merged]      NCHAR (1)     NULL,
    [export_code]        NVARCHAR (2)  NULL,
    [license_type]       NVARCHAR (3)  NULL,
    [eccn]               NVARCHAR (5)  NULL,
    [sb_id]              DECIMAL (18)  NULL
);


GO
PRINT N'Creating [dbo].[ig_schedule_k]...';


GO
CREATE TABLE [dbo].[ig_schedule_k] (
    [country] NCHAR (32) NULL,
    [port]    NCHAR (64) NULL,
    [k_code]  NCHAR (5)  NULL
);


GO
PRINT N'Creating [dbo].[iHAWB_master]...';


GO
CREATE TABLE [dbo].[iHAWB_master] (
    [elt_account_number]                  DECIMAL (8)     NOT NULL,
    [agent_elt_acct]                      DECIMAL (8)     NOT NULL,
    [tran_dt]                             DATETIME        NULL,
    [HAWB_NUM]                            NVARCHAR (32)   NULL,
    [MAWB_NUM]                            NVARCHAR (32)   NULL,
    [pieces]                              INT             NULL,
    [unit_qty]                            NVARCHAR (16)   NULL,
    [gross_wt]                            DECIMAL (12, 2) NULL,
    [chargeable_wt]                       DECIMAL (12, 2) NULL,
    [kg_lb]                               NCHAR (2)       NULL,
    [DEP_AIRPORT_CODE]                    NVARCHAR (3)    NULL,
    [airline_vendor_num]                  DECIMAL (5)     NULL,
    [Agent_Name]                          NVARCHAR (128)  NULL,
    [Agent_Info]                          NTEXT           NULL,
    [Agent_No]                            DECIMAL (7)     NULL,
    [Shipper_Name]                        NVARCHAR (128)  NULL,
    [Shipper_Info]                        NTEXT           NULL,
    [Shipper_account_number]              NVARCHAR (16)   NULL,
    [Consignee_Name]                      NVARCHAR (128)  NULL,
    [Consignee_Info]                      NTEXT           NULL,
    [Consignee_acct_num]                  NVARCHAR (32)   NULL,
    [Issue_Carrier_agent]                 NVARCHAR (128)  NULL,
    [Agent_IATA_Code]                     NVARCHAR (32)   NULL,
    [Account_No]                          NVARCHAR (32)   NULL,
    [Departure_Airport]                   NVARCHAR (32)   NULL,
    [departure_state]                     NVARCHAR (16)   NULL,
    [IssuedBy]                            NVARCHAR (128)  NULL,
    [Account_Info]                        NTEXT           NULL,
    [to_1]                                NVARCHAR (8)    NULL,
    [by_1]                                NVARCHAR (32)   NULL,
    [to_2]                                NVARCHAR (8)    NULL,
    [by_2]                                NVARCHAR (32)   NULL,
    [to_3]                                NVARCHAR (8)    NULL,
    [by_3]                                NVARCHAR (32)   NULL,
    [Currency]                            NVARCHAR (3)    NULL,
    [Charge_Code]                         NVARCHAR (2)    NULL,
    [PPO_1]                               NVARCHAR (1)    NULL,
    [COLL_1]                              NVARCHAR (1)    NULL,
    [PPO_2]                               NVARCHAR (1)    NULL,
    [COLL_2]                              NVARCHAR (1)    NULL,
    [Declared_Value_Carriage]             NVARCHAR (16)   NULL,
    [Declared_Value_Customs]              NVARCHAR (16)   NULL,
    [Dest_Airport]                        NVARCHAR (32)   NULL,
    [Flight_Date_1]                       NVARCHAR (10)   NULL,
    [Flight_Date_2]                       NVARCHAR (10)   NULL,
    [export_date]                         DATETIME        NULL,
    [Insurance_AMT]                       NVARCHAR (16)   NULL,
    [Handling_Info]                       NTEXT           NULL,
    [dest_country]                        NVARCHAR (32)   NULL,
    [SCI]                                 NVARCHAR (16)   NULL,
    [Total_Pieces]                        DECIMAL (4)     NULL,
    [Adjusted_Weight]                     DECIMAL (12, 2) NULL,
    [Total_Gross_Weight]                  DECIMAL (12, 2) NULL,
    [Total_Chargeable_Weight]             DECIMAL (12, 2) NULL,
    [Weight_Scale]                        NCHAR (1)       NULL,
    [Total_Weight_Charge_HAWB]            DECIMAL (12, 2) NULL,
    [Total_Weight_Charge_ACCT]            DECIMAL (12, 2) NULL,
    [Total_Other_Charges]                 DECIMAL (12, 2) NULL,
    [Prepaid_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Collect_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Prepaid_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Collect_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Prepaid_Tax]                         DECIMAL (12, 2) NULL,
    [Collect_Tax]                         DECIMAL (12, 2) NULL,
    [Prepaid_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Collect_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Prepaid_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Collect_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Prepaid_Unused]                      DECIMAL (12, 2) NULL,
    [Collect_Unused]                      DECIMAL (12, 2) NULL,
    [Prepaid_Total]                       DECIMAL (12, 2) NULL,
    [Collect_Total]                       DECIMAL (12, 2) NULL,
    [Signature]                           NVARCHAR (64)   NULL,
    [Date_Executed]                       DATETIME        NULL,
    [Execution]                           NVARCHAR (256)  NULL,
    [Date_Last_Modified]                  DATETIME        NULL,
    [Currency_Conv_Rate]                  DECIMAL (10, 2) NULL,
    [CC_Charge_Dest_Rate]                 DECIMAL (10, 2) NULL,
    [Charge_at_Dest]                      DECIMAL (12, 2) NULL,
    [Total_Collect_Charge]                DECIMAL (12, 2) NULL,
    [Desc1]                               NTEXT           NULL,
    [Desc2]                               NTEXT           NULL,
    [manifest_desc]                       NVARCHAR (128)  NULL,
    [Show_Weight_Charge_Shipper]          NCHAR (1)       NULL,
    [Show_Weight_Charge_Consignee]        NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Prepaid_Invoiced]                    NCHAR (1)       NULL,
    [Collect_Invoiced]                    NCHAR (1)       NULL,
    [agent_bbk]                           DECIMAL (12, 2) NULL,
    [agent_profit_share]                  DECIMAL (12, 2) NULL,
    [agent_others]                        DECIMAL (12, 2) NULL,
    [ref_no]                              NVARCHAR (32)   NULL,
    [sub_master]                          NVARCHAR (32)   NULL,
    [it_no]                               NVARCHAR (32)   NULL,
    [it_date]                             NVARCHAR (32)   NULL,
    [mfst_no]                             NVARCHAR (32)   NULL,
    [entry_no]                            NVARCHAR (32)   NULL,
    [freight_location]                    NVARCHAR (64)   NULL,
    [storage_begin]                       NVARCHAR (32)   NULL
);


GO
PRINT N'Creating [dbo].[ihawb_Other_Charge]...';


GO
CREATE TABLE [dbo].[ihawb_Other_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [HAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [Carrier_Agent]      NCHAR (1)       NULL,
    [charge_code]        INT             NULL,
    [Charge_Desc]        NVARCHAR (32)   NULL,
    [Amt_HAWB]           DECIMAL (12, 2) NULL,
    [Amt_Acct]           DECIMAL (12, 2) NULL,
    [Vendor_Num]         NVARCHAR (16)   NULL,
    [Cost_Amt]           DECIMAL (12, 2) NULL
);


GO
PRINT N'Creating [dbo].[ihawb_weight_charge]...';


GO
CREATE TABLE [dbo].[ihawb_weight_charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [HAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [No_Pieces]          INT             NULL,
    [Gross_Weight]       DECIMAL (10, 2) NULL,
    [Adjusted_Weight]    DECIMAL (10, 2) NULL,
    [Kg_Lb]              NCHAR (1)       NULL,
    [Service_Code]       NCHAR (4)       NULL,
    [Rate_Class]         NVARCHAR (1)    NULL,
    [Commodity_Item_No]  NVARCHAR (16)   NULL,
    [length]             DECIMAL (9, 2)  NULL,
    [width]              DECIMAL (9, 2)  NULL,
    [height]             DECIMAL (9, 2)  NULL,
    [Dimension]          DECIMAL (12, 2) NULL,
    [Dem_Detail]         NVARCHAR (1024) NULL,
    [Chargeable_Weight]  DECIMAL (12, 2) NULL,
    [Rate_Charge]        DECIMAL (10, 2) NULL,
    [Total_Charge]       DECIMAL (12, 2) NULL,
    [Desc1]              NVARCHAR (256)  NULL,
    [Desc2]              NVARCHAR (256)  NULL
);


GO
PRINT N'Creating [dbo].[ihbol_master]...';


GO
CREATE TABLE [dbo].[ihbol_master] (
    [elt_account_number]         DECIMAL (8)     NULL,
    [hbol_num]                   NVARCHAR (24)   NULL,
    [booking_num]                NVARCHAR (32)   NULL,
    [mbol_num]                   NVARCHAR (32)   NULL,
    [agent_name]                 NVARCHAR (128)  NULL,
    [agent_info]                 NTEXT           NULL,
    [agent_no]                   DECIMAL (6)     NULL,
    [forward_agent_name]         NVARCHAR (128)  NULL,
    [forward_agent_info]         NTEXT           NULL,
    [forward_agent_acct_num]     DECIMAL (7)     NULL,
    [Shipper_Name]               NVARCHAR (128)  NULL,
    [Shipper_Info]               NTEXT           NULL,
    [Shipper_acct_num]           DECIMAL (7)     NULL,
    [Consignee_Name]             NVARCHAR (128)  NULL,
    [Consignee_Info]             NTEXT           NULL,
    [Consignee_acct_num]         DECIMAL (7)     NULL,
    [export_ref]                 NTEXT           NULL,
    [notify_info]                NTEXT           NULL,
    [origin_country]             NVARCHAR (32)   NULL,
    [export_instr]               NTEXT           NULL,
    [loading_pier]               NVARCHAR (32)   NULL,
    [move_type]                  NVARCHAR (32)   NULL,
    [containerized]              NCHAR (1)       NULL,
    [pre_carriage]               NVARCHAR (32)   NULL,
    [pre_receipt_place]          NVARCHAR (32)   NULL,
    [export_carrier]             NVARCHAR (32)   NULL,
    [loading_port]               NVARCHAR (64)   NULL,
    [unloading_port]             NVARCHAR (64)   NULL,
    [departure_date]             DATETIME        NULL,
    [delivery_place]             NVARCHAR (32)   NULL,
    [desc1]                      NTEXT           NULL,
    [desc2]                      NTEXT           NULL,
    [desc3]                      NTEXT           NULL,
    [desc6]                      NTEXT           NULL,
    [desc5]                      NTEXT           NULL,
    [weight_cp]                  NCHAR (1)       NULL,
    [prepaid_other_charge]       NCHAR (1)       NULL,
    [collect_other_charge]       NCHAR (1)       NULL,
    [pieces]                     INT             NULL,
    [scale]                      NCHAR (1)       NULL,
    [gross_weight]               DECIMAL (12, 2) NULL,
    [measurement]                DECIMAL (12, 2) NULL,
    [width]                      DECIMAL (10, 2) NULL,
    [length]                     DECIMAL (10, 2) NULL,
    [height]                     DECIMAL (10, 2) NULL,
    [dem_detail]                 NTEXT           NULL,
    [charge_rate]                FLOAT (53)      NULL,
    [total_weight_charge]        DECIMAL (12, 2) NULL,
    [Show_Prepaid_Weight_Charge] NCHAR (1)       NULL,
    [Show_Collect_Weight_Charge] NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge]  NCHAR (1)       NULL,
    [Show_Collect_Other_Charge]  NCHAR (1)       NULL,
    [declared_value]             DECIMAL (12, 2) NULL,
    [tran_by]                    NVARCHAR (64)   NULL,
    [tran_date]                  DATETIME        NULL,
    [tran_place]                 NVARCHAR (32)   NULL,
    [last_modified]              DATETIME        NULL,
    [agent_bbk]                  DECIMAL (12, 2) NULL,
    [agent_profit_share]         DECIMAL (12, 2) NULL,
    [agent_others]               DECIMAL (12, 2) NULL,
    [ref_no]                     NVARCHAR (32)   NULL,
    [sub_master]                 NVARCHAR (32)   NULL,
    [it_no]                      NVARCHAR (32)   NULL,
    [it_date]                    NVARCHAR (32)   NULL,
    [mfst_no]                    NVARCHAR (32)   NULL,
    [entry_no]                   NVARCHAR (32)   NULL,
    [freight_location]           NVARCHAR (64)   NULL,
    [storage_begin]              NVARCHAR (32)   NULL,
    [f_port1]                    NVARCHAR (32)   NULL,
    [f_eta1]                     NVARCHAR (32)   NULL,
    [f_port2]                    NVARCHAR (32)   NULL,
    [f_eta2]                     NVARCHAR (32)   NULL,
    [f_port3]                    NVARCHAR (32)   NULL,
    [f_eta3]                     NVARCHAR (32)   NULL,
    [container]                  NVARCHAR (32)   NULL,
    [prepaid_invoiced]           NCHAR (1)       NULL,
    [collect_invoiced]           NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[ihbol_other_charge]...';


GO
CREATE TABLE [dbo].[ihbol_other_charge] (
    [elt_account_number] DECIMAL (8)     NULL,
    [hbol_num]           NVARCHAR (24)   NULL,
    [tran_no]            INT             NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [charge_code]        INT             NULL,
    [charge_desc]        NVARCHAR (32)   NULL,
    [charge_amt]         DECIMAL (12, 2) NULL,
    [vendor_num]         DECIMAL (5)     NULL,
    [cost_amt]           DECIMAL (12, 2) NULL
);


GO
PRINT N'Creating [dbo].[iMAWB_MASTER]...';


GO
CREATE TABLE [dbo].[iMAWB_MASTER] (
    [elt_account_number]                  DECIMAL (8)     NOT NULL,
    [agent_elt_acct]                      DECIMAL (8)     NULL,
    [tran_dt]                             DATETIME        NULL,
    [MAWB_NUM]                            NVARCHAR (32)   NOT NULL,
    [carrier]                             NVARCHAR (128)  NULL,
    [file_no]                             NVARCHAR (128)  NULL,
    [etd]                                 DATETIME        NULL,
    [eta]                                 DATETIME        NULL,
    [dep_port]                            NVARCHAR (64)   NULL,
    [arr_port]                            NVARCHAR (64)   NULL,
    [cargo_location]                      NVARCHAR (128)  NULL,
    [storage_begin_date]                  DATETIME        NULL,
    [it_number]                           NVARCHAR (64)   NULL,
    [it_date]                             DATETIME        NULL,
    [job_file_no]                         NVARCHAR (64)   NULL,
    [agent_debit_no]                      NVARCHAR (64)   NULL,
    [agent_debit_amt]                     DECIMAL (12, 2) NULL,
    [freight_collect]                     DECIMAL (12, 2) NULL,
    [profit]                              DECIMAL (12, 2) NULL,
    [DEP_AIRPORT_CODE]                    NVARCHAR (3)    NULL,
    [master_agent]                        DECIMAL (5)     NULL,
    [airline_vendor_num]                  DECIMAL (5)     NULL,
    [Shipper_Name]                        NVARCHAR (128)  NULL,
    [Shipper_Info]                        NTEXT           NULL,
    [Shipper_account_number]              NVARCHAR (16)   NULL,
    [Consignee_Name]                      NVARCHAR (128)  NULL,
    [Consignee_Info]                      NTEXT           NULL,
    [Consignee_acct_num]                  NVARCHAR (32)   NULL,
    [Issue_Carrier_agent]                 NTEXT           NULL,
    [Agent_IATA_Code]                     NVARCHAR (32)   NULL,
    [Account_No]                          NVARCHAR (32)   NULL,
    [Departure_Airport]                   NVARCHAR (32)   NULL,
    [DEPARTURE_STATE]                     NVARCHAR (16)   NULL,
    [IssuedBy]                            NVARCHAR (128)  NULL,
    [Account_Info]                        NTEXT           NULL,
    [to_1]                                NVARCHAR (8)    NULL,
    [by_1]                                NVARCHAR (32)   NULL,
    [to_2]                                NVARCHAR (8)    NULL,
    [by_2]                                NVARCHAR (32)   NULL,
    [to_3]                                NVARCHAR (8)    NULL,
    [by_3]                                NVARCHAR (32)   NULL,
    [Currency]                            NVARCHAR (3)    NULL,
    [Charge_Code]                         NVARCHAR (2)    NULL,
    [PPO_1]                               NVARCHAR (1)    NULL,
    [COLL_1]                              NVARCHAR (1)    NULL,
    [PPO_2]                               NVARCHAR (1)    NULL,
    [COLL_2]                              NVARCHAR (1)    NULL,
    [Declared_Value_Carriage]             NVARCHAR (16)   NULL,
    [Declared_Value_Customs]              NVARCHAR (16)   NULL,
    [Dest_Airport]                        NVARCHAR (32)   NULL,
    [Flight_Date_1]                       NVARCHAR (10)   NULL,
    [Flight_Date_2]                       NVARCHAR (10)   NULL,
    [Insurance_AMT]                       NVARCHAR (16)   NULL,
    [Handling_Info]                       NTEXT           NULL,
    [dest_country]                        NVARCHAR (32)   NULL,
    [SCI]                                 NVARCHAR (16)   NULL,
    [Total_Pieces]                        DECIMAL (4)     NULL,
    [Adjusted_Weight]                     DECIMAL (12, 2) NULL,
    [Total_Gross_Weight]                  DECIMAL (12, 2) NULL,
    [Weight_Scale]                        NCHAR (1)       NULL,
    [Total_Weight_Charge_HAWB]            DECIMAL (12, 2) NULL,
    [Total_Weight_Charge_ACCT]            DECIMAL (12, 2) NULL,
    [Total_Other_Charges]                 DECIMAL (12, 2) NULL,
    [Prepaid_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Collect_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Prepaid_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Collect_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Prepaid_Tax]                         DECIMAL (12, 2) NULL,
    [Collect_Tax]                         DECIMAL (12, 2) NULL,
    [Prepaid_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Collect_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Prepaid_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Collect_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Prepaid_Unused]                      DECIMAL (12, 2) NULL,
    [Collect_Unused]                      DECIMAL (12, 2) NULL,
    [Prepaid_Total]                       DECIMAL (12, 2) NULL,
    [Collect_Total]                       DECIMAL (12, 2) NULL,
    [Signature]                           NVARCHAR (64)   NULL,
    [Date_Executed]                       DATETIME        NULL,
    [Place_Executed]                      NVARCHAR (64)   NULL,
    [Execution]                           NVARCHAR (128)  NULL,
    [Date_Last_Modified]                  DATETIME        NULL,
    [Currency_Conv_Rate]                  DECIMAL (10, 2) NULL,
    [CC_Charge_Dest_Rate]                 DECIMAL (10, 2) NULL,
    [Charge_at_Dest]                      DECIMAL (12, 2) NULL,
    [Total_Collect_Charge]                DECIMAL (12, 2) NULL,
    [Desc1]                               NTEXT           NULL,
    [Desc2]                               NTEXT           NULL,
    [Show_Weight_Charge_Shipper]          NCHAR (1)       NULL,
    [Show_Weight_Charge_Consignee]        NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Invoiced]                            NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[iMAWB_NUMBER]...';


GO
CREATE TABLE [dbo].[iMAWB_NUMBER] (
    [elt_account_number]   DECIMAL (8)   NOT NULL,
    [mawb_no]              NVARCHAR (32) NOT NULL,
    [Carrier_Code]         NVARCHAR (16) NULL,
    [Carrier_Desc]         NVARCHAR (32) NULL,
    [Flight#]              NVARCHAR (8)  NULL,
    [File#]                NVARCHAR (32) NULL,
    [Created_Date]         DATETIME      NULL,
    [Origin_Port_ID]       NVARCHAR (3)  NULL,
    [Origin_Port_Location] NVARCHAR (32) NULL,
    [Origin_Port_State]    NVARCHAR (8)  NULL,
    [Origin_Port_Country]  NVARCHAR (32) NULL,
    [Dest_Port_ID]         NVARCHAR (3)  NULL,
    [Dest_Port_Location]   NVARCHAR (32) NULL,
    [Dest_Port_Country]    NVARCHAR (32) NULL,
    [To]                   NVARCHAR (3)  NULL,
    [By]                   NVARCHAR (32) NULL,
    [To_1]                 NVARCHAR (3)  NULL,
    [By_1]                 NVARCHAR (17) NULL,
    [To_2]                 NVARCHAR (3)  NULL,
    [By_2]                 NVARCHAR (17) NULL,
    [Flight#1]             NVARCHAR (32) NULL,
    [Flight#2]             NVARCHAR (32) NULL,
    [ETD_DATE1]            DATETIME      NULL,
    [ETD_DATE2]            DATETIME      NULL,
    [ETA_DATE1]            DATETIME      NULL,
    [ETA_DATE2]            DATETIME      NULL,
    [Weight_Reserved]      DECIMAL (18)  NULL,
    [Weight_Scale]         NVARCHAR (4)  NULL,
    [Status]               NCHAR (1)     NULL
);


GO
PRINT N'Creating [dbo].[iMAWB_Other_Charge]...';


GO
CREATE TABLE [dbo].[iMAWB_Other_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [MAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [Carrier_Agent]      NCHAR (1)       NULL,
    [charge_code]        NVARCHAR (8)    NULL,
    [Charge_Desc]        NVARCHAR (32)   NULL,
    [Amt_MAWB]           DECIMAL (12, 2) NULL,
    [Amt_Acct]           DECIMAL (12, 2) NULL,
    [Vendor_Num]         NVARCHAR (16)   NULL,
    [Cost_Amt]           DECIMAL (12, 2) NULL
);


GO
PRINT N'Creating [dbo].[iMAWB_Weight_Charge]...';


GO
CREATE TABLE [dbo].[iMAWB_Weight_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [MAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [No_Pieces]          INT             NULL,
    [Gross_Weight]       DECIMAL (10, 2) NULL,
    [Kg_Lb]              NCHAR (1)       NULL,
    [Service_Code]       NCHAR (4)       NULL,
    [Rate_Class]         NCHAR (1)       NULL,
    [Commodity_Item_No]  NVARCHAR (16)   NULL,
    [Dem_Detail]         NVARCHAR (1024) NULL,
    [Chargeable_Weight]  DECIMAL (12, 2) NULL,
    [Rate_Charge]        DECIMAL (10, 2) NULL,
    [Total_Charge]       DECIMAL (12, 2) NULL,
    [Desc1]              NVARCHAR (256)  NULL,
    [Desc2]              NVARCHAR (256)  NULL
);


GO
PRINT N'Creating [dbo].[imbol_master]...';


GO
CREATE TABLE [dbo].[imbol_master] (
    [elt_account_number] DECIMAL (8)     NULL,
    [booking_num]        NVARCHAR (32)   NULL,
    [mbol_num]           NVARCHAR (32)   NULL,
    [agent_name]         NVARCHAR (128)  NULL,
    [agent_info]         NTEXT           NULL,
    [agent_acct_num]     DECIMAL (7)     NULL,
    [Shipper_Name]       NVARCHAR (128)  NULL,
    [Shipper_Info]       NTEXT           NULL,
    [Shipper_acct_num]   DECIMAL (7)     NULL,
    [Consignee_Name]     NVARCHAR (128)  NULL,
    [Consignee_Info]     NTEXT           NULL,
    [Consignee_acct_num] DECIMAL (7)     NULL,
    [export_ref]         NTEXT           NULL,
    [notify_info]        NTEXT           NULL,
    [origin_country]     NVARCHAR (32)   NULL,
    [export_instr]       NTEXT           NULL,
    [loading_pier]       NVARCHAR (32)   NULL,
    [move_type]          NVARCHAR (32)   NULL,
    [containerized]      NCHAR (1)       NULL,
    [pre_carriage]       NVARCHAR (32)   NULL,
    [pre_receipt_place]  NVARCHAR (32)   NULL,
    [export_carrier]     NVARCHAR (32)   NULL,
    [loading_port]       NVARCHAR (64)   NULL,
    [unloading_port]     NVARCHAR (64)   NULL,
    [departure_date]     DATETIME        NULL,
    [delivery_place]     NVARCHAR (32)   NULL,
    [desc1]              NTEXT           NULL,
    [desc2]              NTEXT           NULL,
    [desc3]              NTEXT           NULL,
    [desc4]              NTEXT           NULL,
    [desc5]              NTEXT           NULL,
    [pieces]             INT             NULL,
    [gross_weight]       DECIMAL (12, 2) NULL,
    [measurement]        DECIMAL (12, 2) NULL,
    [tran_date]          DATETIME        NULL,
    [last_modified]      DATETIME        NULL
);


GO
PRINT N'Creating [dbo].[import_hawb]...';


GO
CREATE TABLE [dbo].[import_hawb] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [agent_elt_acct]     DECIMAL (8)     NULL,
    [agent_org_acct]     DECIMAL (8)     NULL,
    [tran_dt]            DATETIME        NULL,
    [iType]              NCHAR (1)       NULL,
    [mawb_num]           NVARCHAR (32)   NULL,
    [hawb_num]           NVARCHAR (32)   NOT NULL,
    [sec]                INT             NOT NULL,
    [invoice_no]         DECIMAL (12)    NULL,
    [process_dt]         DATETIME        NULL,
    [processed]          NCHAR (1)       NULL,
    [shipper_name]       NVARCHAR (128)  NULL,
    [shipper_info]       NTEXT           NULL,
    [shipper_acct]       DECIMAL (8)     NULL,
    [consignee_name]     NVARCHAR (128)  NULL,
    [consignee_info]     NTEXT           NULL,
    [consignee_acct]     DECIMAL (8)     NULL,
    [notify_name]        NVARCHAR (128)  NULL,
    [notify_info]        NTEXT           NULL,
    [notify_acct]        DECIMAL (8)     NULL,
    [broker_info]        NTEXT           NULL,
    [broker_acct]        DECIMAL (8)     NULL,
    [pieces]             DECIMAL (18)    NULL,
    [uom]                NVARCHAR (16)   NULL,
    [gross_wt]           DECIMAL (12, 2) NULL,
    [scale1]             NCHAR (3)       NULL,
    [chg_wt]             DECIMAL (12, 2) NULL,
    [scale2]             NCHAR (3)       NULL,
    [prepaid_collect]    NCHAR (1)       NULL,
    [freight_collect]    DECIMAL (12, 2) NULL,
    [oc_collect]         DECIMAL (12, 2) NULL,
    [prepared_by]        NVARCHAR (64)   NULL,
    [sub_mawb1]          NVARCHAR (32)   NULL,
    [sub_mawb2]          NVARCHAR (32)   NULL,
    [customer_ref]       NVARCHAR (64)   NULL,
    [delivery_place]     NVARCHAR (64)   NULL,
    [etd2]               NVARCHAR (32)   NULL,
    [eta2]               NVARCHAR (32)   NULL,
    [container_location] NVARCHAR (256)  NULL,
    [destination]        NVARCHAR (256)  NULL,
    [free_date]          NVARCHAR (32)   NULL,
    [go_date]            NVARCHAR (32)   NULL,
    [it_number]          NVARCHAR (64)   NULL,
    [it_date]            NVARCHAR (64)   NULL,
    [it_entry_port]      NVARCHAR (64)   NULL,
    [cargo_location]     NVARCHAR (128)  NULL,
    [desc1]              NTEXT           NULL,
    [desc2]              NTEXT           NULL,
    [desc3]              NTEXT           NULL,
    [desc4]              NTEXT           NULL,
    [desc5]              NTEXT           NULL,
    [remarks]            NTEXT           NULL,
    [term]               INT             NULL,
    [pickup_date]        DATETIME        NULL,
    [igSub_HAWB]         NVARCHAR (32)   NULL,
    [SalesPerson]        NVARCHAR (64)   NULL,
    [CreatedBy]          NVARCHAR (64)   NULL,
    [CreatedDate]        DATETIME        NULL,
    [ModifiedBy]         NVARCHAR (64)   NULL,
    [ModifiedDate]       DATETIME        NULL,
    [fc_rate]            DECIMAL (12, 3) NULL,
    [fc_charge]          DECIMAL (12, 3) NULL,
    [total_other_charge] DECIMAL (12)    NULL,
    [dep_code]           NVARCHAR (8)    NULL,
    [arr_code]           NVARCHAR (8)    NULL,
    [is_default_rate]    NCHAR (1)       NULL,
    [eta]                NVARCHAR (32)   NULL,
    [etd]                NVARCHAR (32)   NULL,
    [flt_no]             NVARCHAR (32)   NULL,
    [broker_name]        NVARCHAR (128)  NULL,
    [is_org_merged]      NCHAR (1)       NULL,
    [dep_port]           NVARCHAR (128)  NULL,
    [arr_port]           NVARCHAR (128)  NULL,
    [carrier_code]       NVARCHAR (16)   NULL
);


GO
PRINT N'Creating [dbo].[import_mawb]...';


GO
CREATE TABLE [dbo].[import_mawb] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [agent_elt_acct]     DECIMAL (8)     NULL,
    [export_agent_name]  NVARCHAR (256)  NULL,
    [agent_org_acct]     DECIMAL (8)     NULL,
    [tran_dt]            DATETIME        NULL,
    [iType]              NCHAR (1)       NULL,
    [mawb_num]           NVARCHAR (64)   NOT NULL,
    [sec]                INT             NOT NULL,
    [sub_mawb]           NVARCHAR (64)   NULL,
    [process_dt]         DATETIME        NULL,
    [processed]          NVARCHAR (1)    NULL,
    [carrier]            NVARCHAR (256)  NULL,
    [vessel_name]        NVARCHAR (256)  NULL,
    [file_no]            NVARCHAR (128)  NULL,
    [voyage_no]          NVARCHAR (64)   NULL,
    [flt_no]             NVARCHAR (64)   NULL,
    [etd]                NVARCHAR (64)   NULL,
    [eta]                NVARCHAR (64)   NULL,
    [dep_port]           NVARCHAR (128)  NULL,
    [arr_port]           NVARCHAR (128)  NULL,
    [cargo_location]     NVARCHAR (256)  NULL,
    [last_free_date]     DATETIME        NULL,
    [pieces]             NVARCHAR (128)  NULL,
    [scale1]             NVARCHAR (4)    NULL,
    [gross_wt]           NVARCHAR (64)   NULL,
    [scale2]             NVARCHAR (4)    NULL,
    [chg_wt]             NVARCHAR (64)   NULL,
    [scale3]             NVARCHAR (4)    NULL,
    [agent_debit_no]     NVARCHAR (64)   NULL,
    [agent_debit_amt]    DECIMAL (12, 2) NULL,
    [it_number]          NVARCHAR (64)   NULL,
    [it_date]            NVARCHAR (64)   NULL,
    [it_entry_port]      NVARCHAR (64)   NULL,
    [place_of_delivery]  NVARCHAR (128)  NULL,
    [SalesPerson]        NVARCHAR (128)  NULL,
    [CreatedBy]          NVARCHAR (128)  NULL,
    [CreatedDate]        DATETIME        NULL,
    [ModifiedBy]         NVARCHAR (128)  NULL,
    [ModifiedDate]       DATETIME        NULL,
    [dep_code]           NVARCHAR (8)    NULL,
    [arr_code]           NVARCHAR (8)    NULL,
    [carrier_code]       NVARCHAR (64)   NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[import_mawb].[NonClusteredIndex-import_mawb]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-import_mawb]
    ON [dbo].[import_mawb]([elt_account_number] ASC, [mawb_num] ASC)
    INCLUDE([dep_code], [arr_code]);


GO
PRINT N'Creating [dbo].[inbond_type]...';


GO
CREATE TABLE [dbo].[inbond_type] (
    [ibt]      INT           NULL,
    [ibt_desc] NVARCHAR (64) NULL
);


GO
PRINT N'Creating [dbo].[invoice]...';


GO
CREATE TABLE [dbo].[invoice] (
    [elt_account_number]  DECIMAL (8)     NOT NULL,
    [invoice_no]          DECIMAL (12)    NOT NULL,
    [master_invoice_no]   DECIMAL (18)    NULL,
    [invoice_type]        NCHAR (1)       NULL,
    [import_export]       NVARCHAR (1)    NULL,
    [air_ocean]           NVARCHAR (1)    NULL,
    [invoice_date]        DATETIME        NULL,
    [ref_no]              NVARCHAR (64)   NULL,
    [ref_no_Our]          NVARCHAR (64)   NULL,
    [Customer_info]       NVARCHAR (512)  NULL,
    [Total_Pieces]        NVARCHAR (32)   NULL,
    [Total_Gross_Weight]  NVARCHAR (32)   NULL,
    [Total_Charge_Weight] NVARCHAR (32)   NULL,
    [Description]         NVARCHAR (512)  NULL,
    [Origin_Dest]         NVARCHAR (64)   NULL,
    [origin]              NVARCHAR (64)   NULL,
    [dest]                NVARCHAR (64)   NULL,
    [Customer_Number]     NVARCHAR (32)   NULL,
    [Customer_Name]       NVARCHAR (128)  NULL,
    [shipper]             NVARCHAR (512)  NULL,
    [consignee]           NVARCHAR (512)  NULL,
    [entry_no]            NVARCHAR (32)   NULL,
    [entry_date]          DATETIME        NULL,
    [Carrier]             NVARCHAR (128)  NULL,
    [Arrival_Dept]        NVARCHAR (32)   NULL,
    [mawb_num]            NVARCHAR (64)   NULL,
    [hawb_num]            NVARCHAR (64)   NULL,
    [subtotal]            DECIMAL (12, 2) NULL,
    [sale_tax]            DECIMAL (12, 2) NULL,
    [agent_profit]        DECIMAL (12, 2) NULL,
    [accounts_receivable] DECIMAL (5)     NULL,
    [amount_charged]      DECIMAL (12, 2) NULL,
    [amount_paid]         DECIMAL (12, 2) NULL,
    [balance]             DECIMAL (12, 2) NULL,
    [total_cost]          DECIMAL (12, 2) NULL,
    [remarks]             NTEXT           NULL,
    [pay_status]          NCHAR (1)       NULL,
    [term_curr]           INT             NULL,
    [term30]              NCHAR (1)       NULL,
    [term60]              NCHAR (1)       NULL,
    [term90]              NCHAR (1)       NULL,
    [received_amt]        DECIMAL (9, 2)  NULL,
    [pmt_method]          NVARCHAR (16)   NULL,
    [existing_credits]    DECIMAL (9, 2)  NULL,
    [deposit_to]          DECIMAL (9)     NULL,
    [lock_ar]             NCHAR (1)       NULL,
    [lock_ap]             NCHAR (1)       NULL,
    [in_memo]             NTEXT           NULL,
    [is_org_merged]       NCHAR (1)       NULL,
    [invoice_id]          DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_invoice] PRIMARY KEY CLUSTERED ([invoice_id] ASC)
);


GO
PRINT N'Creating [dbo].[invoice].[inv_customer]...';


GO
CREATE NONCLUSTERED INDEX [inv_customer]
    ON [dbo].[invoice]([elt_account_number] ASC, [invoice_no] ASC, [Customer_Number] ASC);


GO
PRINT N'Creating [dbo].[invoice].[NonClusteredIndex-import_export]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-import_export]
    ON [dbo].[invoice]([import_export] ASC)
    INCLUDE([elt_account_number], [invoice_no], [air_ocean], [invoice_date], [Customer_Number], [mawb_num], [hawb_num]);


GO
PRINT N'Creating [dbo].[invoice_charge_item]...';


GO
CREATE TABLE [dbo].[invoice_charge_item] (
    [elt_account_number] DECIMAL (8)     NULL,
    [invoice_no]         DECIMAL (12)    NULL,
    [item_id]            INT             NULL,
    [item_no]            INT             NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [qty]                INT             NULL,
    [charge_amount]      DECIMAL (12, 2) NULL,
    [mb_no]              NVARCHAR (32)   NULL,
    [hb_no]              NVARCHAR (32)   NULL,
    [iType]              NVARCHAR (1)    NULL,
    [import_export]      NVARCHAR (1)    NULL,
    [invoice_header_id]  DECIMAL (18)    NULL
);


GO
PRINT N'Creating [dbo].[invoice_charge_item].[NonClusteredIndex-invoice_charge_item]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-invoice_charge_item]
    ON [dbo].[invoice_charge_item]([elt_account_number] ASC, [invoice_no] ASC)
    INCLUDE([item_no], [item_desc], [charge_amount]);


GO
PRINT N'Creating [dbo].[invoice_cost_item]...';


GO
CREATE TABLE [dbo].[invoice_cost_item] (
    [elt_account_number] DECIMAL (8)     NULL,
    [invoice_no]         DECIMAL (12)    NULL,
    [item_id]            INT             NULL,
    [item_no]            INT             NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [qty]                INT             NULL,
    [ref_no]             NVARCHAR (128)  NULL,
    [cost_amount]        DECIMAL (12, 2) NULL,
    [vendor_no]          DECIMAL (7)     NULL,
    [is_org_merged]      NCHAR (1)       NULL,
    [mb_no]              NVARCHAR (32)   NULL,
    [hb_no]              NVARCHAR (32)   NULL,
    [iType]              NVARCHAR (1)    NULL,
    [import_export]      NVARCHAR (1)    NULL,
    [ap_lock]            NVARCHAR (1)    NULL,
    [invoice_header_id]  DECIMAL (18)    NULL
);


GO
PRINT N'Creating [dbo].[invoice_cost_item].[NonClusteredIndex-invoice_cost_item]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-invoice_cost_item]
    ON [dbo].[invoice_cost_item]([elt_account_number] ASC)
    INCLUDE([invoice_no], [item_no], [item_desc], [cost_amount], [vendor_no]);


GO
PRINT N'Creating [dbo].[invoice_detail]...';


GO
CREATE TABLE [dbo].[invoice_detail] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [invoice_no]         DECIMAL (7)     NOT NULL,
    [item_id]            INT             NOT NULL,
    [item_no]            INT             NOT NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [qty]                INT             NULL,
    [ref_no]             NVARCHAR (128)  NULL,
    [charge_amount]      DECIMAL (12, 2) NULL,
    [cost_amount]        DECIMAL (12, 2) NULL,
    [vendor_no]          DECIMAL (7)     NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[invoice_hawb]...';


GO
CREATE TABLE [dbo].[invoice_hawb] (
    [elt_account_number] DECIMAL (8)     NULL,
    [invoice_no]         DECIMAL (12)    NULL,
    [invoice_type]       NCHAR (1)       NULL,
    [import_export]      NVARCHAR (1)    NULL,
    [air_ocean]          NVARCHAR (1)    NULL,
    [hawb_num]           NVARCHAR (64)   NULL,
    [hawb_url]           NVARCHAR (1024) NULL
);


GO
PRINT N'Creating [dbo].[invoice_header]...';


GO
CREATE TABLE [dbo].[invoice_header] (
    [auto_id]            DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [invoice_no]         DECIMAL (12)   NOT NULL,
    [mawb]               NVARCHAR (32)  NULL,
    [hawb]               NVARCHAR (32)  NULL,
    [ETA]                NVARCHAR (32)  NULL,
    [ETD]                NVARCHAR (32)  NULL,
    [Consignee]          NVARCHAR (256) NULL,
    [Shipper]            NVARCHAR (256) NULL,
    [FILE_NO]            NVARCHAR (32)  NULL,
    [GrossWeight]        NVARCHAR (32)  NULL,
    [ChargeableWeight]   NVARCHAR (32)  NULL,
    [unit]               NVARCHAR (32)  NULL,
    [Pieces]             NVARCHAR (32)  NULL,
    [Origin]             NVARCHAR (32)  NULL,
    [Destination]        NVARCHAR (32)  NULL,
    [Carrier]            NVARCHAR (32)  NULL
);


GO
PRINT N'Creating [dbo].[invoice_joined_temp]...';


GO
CREATE TABLE [dbo].[invoice_joined_temp] (
    [invoice_id]          INT             NOT NULL,
    [customer_dba_name]   NVARCHAR (180)  NULL,
    [business_phone]      NVARCHAR (32)   NULL,
    [customer_credit]     INT             NULL,
    [customer_no]         NVARCHAR (32)   NULL,
    [elt_account_number]  DECIMAL (8)     NOT NULL,
    [invoice_no]          DECIMAL (12)    NOT NULL,
    [invoice_type]        NCHAR (1)       NULL,
    [import_export]       NVARCHAR (1)    NULL,
    [air_ocean]           NVARCHAR (1)    NULL,
    [invoice_date]        DATETIME        NULL,
    [ref_no]              NVARCHAR (64)   NULL,
    [ref_no_our]          NVARCHAR (64)   NULL,
    [customer_info]       NVARCHAR (512)  NULL,
    [total_pieces]        NVARCHAR (32)   NULL,
    [total_gross_weight]  NVARCHAR (32)   NULL,
    [total_charge_weight] NVARCHAR (32)   NULL,
    [origin_dest]         NVARCHAR (64)   NULL,
    [origin]              NVARCHAR (64)   NULL,
    [dest]                NVARCHAR (64)   NULL,
    [customer_number]     NVARCHAR (32)   NULL,
    [customer_name]       NVARCHAR (128)  NULL,
    [shipper]             NVARCHAR (512)  NULL,
    [consignee]           NVARCHAR (512)  NULL,
    [entry_no]            NVARCHAR (32)   NULL,
    [entry_date]          DATETIME        NULL,
    [carrier]             NVARCHAR (128)  NULL,
    [arrival_dept]        NVARCHAR (32)   NULL,
    [mawb_num]            NVARCHAR (64)   NULL,
    [hawb_num]            NVARCHAR (64)   NULL,
    [subtotal]            DECIMAL (12, 2) NULL,
    [sale_tax]            DECIMAL (12, 2) NULL,
    [agent_profit]        DECIMAL (12, 2) NULL,
    [accounts_receivable] DECIMAL (5)     NULL,
    [amount_charged]      DECIMAL (12, 2) NULL,
    [amount_paid]         DECIMAL (12, 2) NULL,
    [balance]             DECIMAL (12, 2) NULL,
    [total_cost]          DECIMAL (12, 2) NULL,
    [remarks]             NTEXT           NULL,
    [pay_status]          NCHAR (1)       NULL,
    [term_curr]           INT             NULL,
    [term30]              NCHAR (1)       NULL,
    [term60]              NCHAR (1)       NULL,
    [term90]              NCHAR (1)       NULL,
    [received_amt]        DECIMAL (9, 2)  NULL,
    [pmt_method]          NVARCHAR (16)   NULL,
    [existing_credits]    DECIMAL (9, 2)  NULL,
    [deposit_to]          DECIMAL (9)     NULL,
    [lock_ar]             NCHAR (1)       NULL,
    [lock_ap]             NCHAR (1)       NULL,
    [in_memo]             NTEXT           NULL,
    [is_org_merged]       NCHAR (1)       NULL,
    [master_invoice_no]   DECIMAL (18)    NULL
);


GO
PRINT N'Creating [dbo].[invoice_queue]...';


GO
CREATE TABLE [dbo].[invoice_queue] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [queue_id]           DECIMAL (8)     NOT NULL,
    [inqueue_date]       DATETIME        NOT NULL,
    [outqueue_date]      DATETIME        NULL,
    [agent_shipper]      NCHAR (1)       NULL,
    [hawb_num]           NVARCHAR (128)  NULL,
    [mawb_num]           NVARCHAR (128)  NULL,
    [bill_to]            NVARCHAR (1024) NULL,
    [bill_to_org_acct]   DECIMAL (8)     NULL,
    [agent_name]         NVARCHAR (1024) NULL,
    [agent_org_acct]     DECIMAL (8)     NULL,
    [master_agent]       NCHAR (1)       NULL,
    [air_ocean]          NCHAR (1)       NULL,
    [master_only]        NCHAR (1)       NULL,
    [invoiced]           NCHAR (1)       NULL,
    [is_dome]            NVARCHAR (1)    NULL,
    CONSTRAINT [PK_invoice_queue] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [queue_id] ASC)
);


GO
PRINT N'Creating [dbo].[invoice_tmp]...';


GO
CREATE TABLE [dbo].[invoice_tmp] (
    [elt_account_number]  DECIMAL (8)     NOT NULL,
    [invoice_no]          DECIMAL (12)    NOT NULL,
    [invoice_type]        NCHAR (1)       NULL,
    [import_export]       NVARCHAR (1)    NULL,
    [air_ocean]           NVARCHAR (1)    NULL,
    [invoice_date]        DATETIME        NULL,
    [ref_no]              NVARCHAR (64)   NULL,
    [Customer_info]       NVARCHAR (512)  NULL,
    [Total_Pieces]        NVARCHAR (32)   NULL,
    [Total_Gross_Weight]  NVARCHAR (32)   NULL,
    [Total_Charge_Weight] NVARCHAR (32)   NULL,
    [Description]         NVARCHAR (512)  NULL,
    [Origin_Dest]         NVARCHAR (64)   NULL,
    [origin]              NVARCHAR (64)   NULL,
    [dest]                NVARCHAR (64)   NULL,
    [Customer_Number]     NVARCHAR (32)   NULL,
    [Customer_Name]       NVARCHAR (128)  NULL,
    [shipper]             NVARCHAR (512)  NULL,
    [consignee]           NVARCHAR (512)  NULL,
    [entry_no]            NVARCHAR (16)   NULL,
    [entry_date]          DATETIME        NULL,
    [Carrier]             NVARCHAR (32)   NULL,
    [Arrival_Dept]        NVARCHAR (32)   NULL,
    [mawb_num]            NVARCHAR (64)   NULL,
    [hawb_num]            NVARCHAR (64)   NULL,
    [subtotal]            DECIMAL (12, 2) NULL,
    [sale_tax]            DECIMAL (12, 2) NULL,
    [agent_profit]        DECIMAL (12, 2) NULL,
    [accounts_receivable] DECIMAL (5)     NULL,
    [amount_charged]      DECIMAL (12, 2) NULL,
    [amount_paid]         DECIMAL (12, 2) NULL,
    [balance]             DECIMAL (12, 2) NULL,
    [total_cost]          DECIMAL (12, 2) NULL,
    [remarks]             NVARCHAR (512)  NULL,
    [pay_status]          NCHAR (1)       NULL,
    [term_curr]           INT             NULL,
    [term30]              NCHAR (1)       NULL,
    [term60]              NCHAR (1)       NULL,
    [term90]              NCHAR (1)       NULL,
    [received_amt]        DECIMAL (9, 2)  NULL,
    [pmt_method]          NVARCHAR (16)   NULL,
    [existing_credits]    DECIMAL (9, 2)  NULL,
    [deposit_to]          DECIMAL (9)     NULL,
    [lock_ar]             NCHAR (1)       NULL,
    [lock_ap]             NCHAR (1)       NULL,
    [in_memo]             NVARCHAR (512)  NULL
);


GO
PRINT N'Creating [dbo].[iocean_booking_number]...';


GO
CREATE TABLE [dbo].[iocean_booking_number] (
    [elt_account_number]   DECIMAL (8)   NULL,
    [booking_num]          NVARCHAR (32) NULL,
    [mbol_num]             NVARCHAR (32) NULL,
    [departure_date]       DATETIME      NULL,
    [arrival_date]         DATETIME      NULL,
    [origin_port_id]       NVARCHAR (8)  NULL,
    [origin_port_location] NVARCHAR (64) NULL,
    [origin_port_state]    NVARCHAR (8)  NULL,
    [origin_port_country]  NVARCHAR (32) NULL,
    [dest_port_id]         NVARCHAR (8)  NULL,
    [dest_port_location]   NVARCHAR (64) NULL,
    [dest_port_country]    NVARCHAR (32) NULL,
    [exporting_carrier]    NVARCHAR (32) NULL,
    [move_type]            NVARCHAR (32) NULL,
    [status]               NCHAR (1)     NULL
);


GO
PRINT N'Creating [dbo].[item_charge]...';


GO
CREATE TABLE [dbo].[item_charge] (
    [elt_account_number] DECIMAL (8)     NULL,
    [item_no]            INT             NULL,
    [item_name]          NVARCHAR (32)   NULL,
    [item_type]          NVARCHAR (32)   NULL,
    [item_desc]          NVARCHAR (32)   NULL,
    [unit_price]         DECIMAL (10, 2) NULL,
    [account_revenue]    DECIMAL (5)     NULL,
    [item_def]           NVARCHAR (32)   NULL
);


GO
PRINT N'Creating [dbo].[item_cost]...';


GO
CREATE TABLE [dbo].[item_cost] (
    [elt_account_number] DECIMAL (8)     NULL,
    [item_no]            INT             NULL,
    [item_name]          NVARCHAR (32)   NULL,
    [item_type]          NVARCHAR (32)   NULL,
    [item_desc]          NVARCHAR (32)   NULL,
    [unit_price]         DECIMAL (10, 2) NULL,
    [account_expense]    DECIMAL (5)     NULL,
    [item_def]           NVARCHAR (32)   NULL
);


GO
PRINT N'Creating [dbo].[license_code]...';


GO
CREATE TABLE [dbo].[license_code] (
    [license_code] NCHAR (3)      NOT NULL,
    [license_desc] NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[MAWB_MASTER]...';


GO
CREATE TABLE [dbo].[MAWB_MASTER] (
    [elt_account_number]                  DECIMAL (8)     NOT NULL,
    [MAWB_NUM]                            NVARCHAR (64)   NULL,
    [DEP_AIRPORT_CODE]                    NVARCHAR (3)    NULL,
    [master_agent]                        DECIMAL (5)     NULL,
    [airline_vendor_num]                  DECIMAL (5)     NULL,
    [Shipper_Name]                        NVARCHAR (128)  NULL,
    [Shipper_Info]                        NTEXT           NULL,
    [Shipper_account_number]              NVARCHAR (16)   NULL,
    [ff_shipper_acct]                     NVARCHAR (64)   NULL,
    [Consignee_Name]                      NVARCHAR (256)  NULL,
    [Consignee_Info]                      NTEXT           NULL,
    [Consignee_acct_num]                  NVARCHAR (32)   NULL,
    [ff_consignee_acct]                   NVARCHAR (64)   NULL,
    [Issue_Carrier_agent]                 NTEXT           NULL,
    [Agent_IATA_Code]                     NVARCHAR (32)   NULL,
    [Account_No]                          NVARCHAR (32)   NULL,
    [Departure_Airport]                   NVARCHAR (64)   NULL,
    [IssuedBy]                            NTEXT           NULL,
    [Account_Info]                        NTEXT           NULL,
    [to_1]                                NVARCHAR (8)    NULL,
    [by_1]                                NVARCHAR (64)   NULL,
    [to_2]                                NVARCHAR (8)    NULL,
    [by_2]                                NVARCHAR (64)   NULL,
    [to_3]                                NVARCHAR (8)    NULL,
    [by_3]                                NVARCHAR (64)   NULL,
    [Currency]                            NVARCHAR (3)    NULL,
    [Charge_Code]                         NVARCHAR (10)   NULL,
    [PPO_1]                               NVARCHAR (1)    NULL,
    [COLL_1]                              NVARCHAR (1)    NULL,
    [PPO_2]                               NVARCHAR (1)    NULL,
    [COLL_2]                              NVARCHAR (1)    NULL,
    [Declared_Value_Carriage]             NVARCHAR (16)   NULL,
    [Declared_Value_Customs]              NVARCHAR (16)   NULL,
    [Dest_Airport]                        NVARCHAR (64)   NULL,
    [Flight_Date_1]                       NVARCHAR (32)   NULL,
    [Flight_Date_2]                       NVARCHAR (32)   NULL,
    [Insurance_AMT]                       NVARCHAR (16)   NULL,
    [Handling_Info]                       NTEXT           NULL,
    [dest_country]                        NVARCHAR (32)   NULL,
    [SCI]                                 NVARCHAR (16)   NULL,
    [Total_Pieces]                        DECIMAL (4)     NULL,
    [Adjusted_Weight]                     DECIMAL (12, 2) NULL,
    [Total_Gross_Weight]                  DECIMAL (12, 2) NULL,
    [total_chargeable_weight]             DECIMAL (12, 2) NULL,
    [Weight_Scale]                        NCHAR (1)       NULL,
    [Total_Weight_Charge_HAWB]            DECIMAL (12, 2) NULL,
    [Total_Weight_Charge_ACCT]            DECIMAL (12, 2) NULL,
    [Total_Other_Charges]                 DECIMAL (12, 2) NULL,
    [total_other_cost]                    DECIMAL (18, 2) NULL,
    [Prepaid_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Collect_Weight_Charge]               DECIMAL (12, 2) NULL,
    [Prepaid_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Collect_Valuation_Charge]            DECIMAL (12, 2) NULL,
    [Prepaid_Tax]                         DECIMAL (12, 2) NULL,
    [Collect_Tax]                         DECIMAL (12, 2) NULL,
    [Prepaid_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Collect_Due_Agent]                   DECIMAL (12, 2) NULL,
    [Prepaid_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Collect_Due_Carrier]                 DECIMAL (12, 2) NULL,
    [Prepaid_Unused]                      DECIMAL (12, 2) NULL,
    [Collect_Unused]                      DECIMAL (12, 2) NULL,
    [Prepaid_Total]                       DECIMAL (12, 2) NULL,
    [Collect_Total]                       DECIMAL (12, 2) NULL,
    [Signature]                           NTEXT           NULL,
    [Date_Executed]                       DATETIME        NULL,
    [Place_Executed]                      NVARCHAR (64)   NULL,
    [Execution]                           NTEXT           NULL,
    [Date_Last_Modified]                  DATETIME        NULL,
    [Currency_Conv_Rate]                  DECIMAL (10, 2) NULL,
    [CC_Charge_Dest_Rate]                 DECIMAL (10, 2) NULL,
    [Charge_at_Dest]                      DECIMAL (12, 2) NULL,
    [Total_Collect_Charge]                DECIMAL (12, 2) NULL,
    [Desc1]                               NTEXT           NULL,
    [Desc2]                               NTEXT           NULL,
    [Show_Weight_Charge_Shipper]          NCHAR (1)       NULL,
    [Show_Weight_Charge_Consignee]        NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Shipper]   NCHAR (1)       NULL,
    [Show_Prepaid_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Show_Collect_Other_Charge_Consignee] NCHAR (1)       NULL,
    [Invoiced]                            NCHAR (1)       NULL,
    [Notify_no]                           NVARCHAR (32)   NULL,
    [SalesPerson]                         NVARCHAR (64)   NULL,
    [CreatedBy]                           NVARCHAR (64)   NULL,
    [CreatedDate]                         DATETIME        NULL,
    [ModifiedBy]                          NVARCHAR (64)   NULL,
    [ModifiedDate]                        DATETIME        NULL,
    [is_org_merged]                       NCHAR (1)       NULL,
    [dimtext]                             NTEXT           NULL,
    [reference_number]                    NVARCHAR (32)   NULL,
    [is_dome]                             NVARCHAR (1)    NOT NULL,
    [master_type]                         NVARCHAR (2)    NULL,
    [bill_to_party]                       NVARCHAR (1)    NULL,
    [service_level_other]                 NVARCHAR (64)   NULL,
    [iac_num]                             NVARCHAR (64)   NULL,
    [known_shipper]                       NVARCHAR (128)  NULL,
    [unknown_shipper]                     NVARCHAR (128)  NULL,
    [item_under_16]                       NVARCHAR (128)  NULL,
    [shipper_reference_num]               NVARCHAR (64)   NULL,
    [carrier_icc_num]                     NVARCHAR (64)   NULL,
    [dim_text]                            NVARCHAR (128)  NULL,
    [shipper_COD]                         DECIMAL (10, 2) NULL,
    [third_party_no]                      NVARCHAR (64)   NULL,
    [is_inbound]                          NVARCHAR (1)    NULL,
    [service_level]                       NVARCHAR (64)   NULL,
    [cod_amount]                          DECIMAL (10, 2) NULL,
    [pickup_charge]                       DECIMAL (10, 2) NULL,
    [origin_adv_charge]                   DECIMAL (10, 2) NULL,
    [origin_adv_charge_desc]              NVARCHAR (128)  NULL,
    [dest_adv_charge]                     DECIMAL (10, 2) NULL,
    [dest_adv_charge_desc]                NVARCHAR (128)  NULL,
    [item_prepaid]                        DECIMAL (10, 2) NULL,
    [item_collect]                        DECIMAL (10, 2) NULL,
    [cod_fee]                             DECIMAL (10, 2) NULL,
    [other_charge]                        DECIMAL (10, 2) NULL,
    [delivery_charge]                     DECIMAL (10, 2) NULL,
    [Total_Freight_Cost]                  DECIMAL (12, 2) NULL,
    [aes_xtn]                             NVARCHAR (64)   NULL,
    [sed_stmt]                            NVARCHAR (128)  NULL
);


GO
PRINT N'Creating [dbo].[MAWB_MASTER].[PK_mawb_master]...';


GO
CREATE UNIQUE CLUSTERED INDEX [PK_mawb_master]
    ON [dbo].[MAWB_MASTER]([elt_account_number] ASC, [MAWB_NUM] ASC);


GO
PRINT N'Creating [dbo].[MAWB_MASTER].[NonClusteredIndex-MAWB_MASTER]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-MAWB_MASTER]
    ON [dbo].[MAWB_MASTER]([MAWB_NUM] ASC)
    INCLUDE([elt_account_number], [DEP_AIRPORT_CODE], [airline_vendor_num], [to_1], [PPO_1], [COLL_1], [Date_Last_Modified]);


GO
PRINT N'Creating [dbo].[MAWB_NUMBER]...';


GO
CREATE TABLE [dbo].[MAWB_NUMBER] (
    [elt_account_number]    DECIMAL (8)    NOT NULL,
    [mawb_no]               NVARCHAR (32)  NOT NULL,
    [Carrier_Code]          NVARCHAR (16)  NULL,
    [Carrier_MC_ICC]        NVARCHAR (64)  NULL,
    [Carrier_acct]          DECIMAL (18)   NULL,
    [Carrier_Desc]          NVARCHAR (64)  NULL,
    [scac]                  NVARCHAR (32)  NULL,
    [Flight#]               NVARCHAR (8)   NULL,
    [File#]                 NVARCHAR (32)  NULL,
    [Created_Date]          DATETIME       NULL,
    [Origin_Port_ID]        NVARCHAR (3)   NULL,
    [origin_port_aes_code]  DECIMAL (6)    NULL,
    [Origin_Port_Location]  NVARCHAR (128) NULL,
    [Origin_Port_State]     NVARCHAR (8)   NULL,
    [Origin_Port_Country]   NVARCHAR (128) NULL,
    [Dest_Port_ID]          NVARCHAR (3)   NULL,
    [dest_port_aes_code]    DECIMAL (6)    NULL,
    [Dest_Port_Location]    NVARCHAR (128) NULL,
    [Dest_Port_Country]     NVARCHAR (128) NULL,
    [dest_country_code]     NVARCHAR (2)   NULL,
    [To]                    NVARCHAR (3)   NULL,
    [By]                    NVARCHAR (64)  NULL,
    [To_1]                  NVARCHAR (3)   NULL,
    [By_1]                  NVARCHAR (64)  NULL,
    [To_2]                  NVARCHAR (3)   NULL,
    [By_2]                  NVARCHAR (64)  NULL,
    [Flight#1]              NVARCHAR (32)  NULL,
    [Flight#2]              NVARCHAR (32)  NULL,
    [ETD_DATE1]             DATETIME       NULL,
    [ETD_DATE2]             DATETIME       NULL,
    [ETA_DATE1]             DATETIME       NULL,
    [ETA_DATE2]             DATETIME       NULL,
    [Weight_Reserved]       DECIMAL (18)   NULL,
    [Weight_Scale]          NVARCHAR (4)   NULL,
    [airline_staff]         NVARCHAR (64)  NULL,
    [Status]                NCHAR (1)      NULL,
    [used]                  NCHAR (1)      NULL,
    [is_dome]               NVARCHAR (1)   NOT NULL,
    [pieces]                DECIMAL (18)   NULL,
    [master_type]           NVARCHAR (2)   NULL,
    [service_level]         NVARCHAR (128) NULL,
    [service_level_other]   NVARCHAR (64)  NULL,
    [booking_date]          DATETIME       NULL,
    [is_inbound]            NVARCHAR (1)   NULL,
    [inbound_customer_acct] DECIMAL (18)   NULL,
    CONSTRAINT [PK_MAWB_NUMBER] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [mawb_no] ASC)
);


GO
PRINT N'Creating [dbo].[MAWB_NUMBER].[mawb_number]...';


GO
CREATE NONCLUSTERED INDEX [mawb_number]
    ON [dbo].[MAWB_NUMBER]([elt_account_number] ASC, [Carrier_Code] ASC, [Carrier_Desc] ASC, [Status] ASC, [mawb_no] ASC);


GO
PRINT N'Creating [dbo].[MAWB_Other_Charge]...';


GO
CREATE TABLE [dbo].[MAWB_Other_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [MAWB_NUM]           NVARCHAR (128)  NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [Carrier_Agent]      NCHAR (1)       NULL,
    [charge_code]        NVARCHAR (8)    NULL,
    [Charge_Desc]        NVARCHAR (128)  NULL,
    [Amt_MAWB]           DECIMAL (12, 2) NULL,
    [Amt_Acct]           DECIMAL (12, 2) NULL,
    [vendor_num]         DECIMAL (18)    NULL,
    [cost_code]          INT             NULL,
    [cost_desc]          NVARCHAR (128)  NULL,
    [Cost_Amt]           DECIMAL (12, 2) NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[mawb_other_cost]...';


GO
CREATE TABLE [dbo].[mawb_other_cost] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)    NULL,
    [mawb_num]           NVARCHAR (50)   NULL,
    [vendor_no]          DECIMAL (18)    NULL,
    [cost_amt]           DECIMAL (18, 2) NULL,
    [item_no]            DECIMAL (18)    NULL,
    [cost_desc]          NVARCHAR (50)   NULL
);


GO
PRINT N'Creating [dbo].[MAWB_Weight_Charge]...';


GO
CREATE TABLE [dbo].[MAWB_Weight_Charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [MAWB_NUM]           NVARCHAR (32)   NOT NULL,
    [Tran_No]            INT             NOT NULL,
    [No_Pieces]          INT             NULL,
    [Gross_Weight]       DECIMAL (10, 2) NULL,
    [Kg_Lb]              NCHAR (1)       NULL,
    [Service_Code]       NCHAR (4)       NULL,
    [Rate_Class]         NCHAR (1)       NULL,
    [Commodity_Item_No]  NVARCHAR (16)   NULL,
    [Dem_Detail]         NVARCHAR (1024) NULL,
    [Chargeable_Weight]  DECIMAL (12, 2) NULL,
    [Rate_Charge]        DECIMAL (10, 2) NULL,
    [Total_Charge]       DECIMAL (12, 2) NULL,
    [Desc1]              NTEXT           NULL,
    [Desc2]              NTEXT           NULL,
    [cubic_inches]       DECIMAL (10, 2) NULL,
    [dimension_factor]   DECIMAL (18)    NULL,
    [cubic_weight]       DECIMAL (10, 2) NULL
);


GO
PRINT N'Creating [dbo].[MAWB_Weight_Charge].[NonClusteredIndex-MAWB_Weight_Charge]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-MAWB_Weight_Charge]
    ON [dbo].[MAWB_Weight_Charge]([elt_account_number] ASC, [MAWB_NUM] ASC, [Kg_Lb] ASC);


GO
PRINT N'Creating [dbo].[mb_cost_item]...';


GO
CREATE TABLE [dbo].[mb_cost_item] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (8)     NULL,
    [mb_no]              NVARCHAR (32)   NULL,
    [item_id]            INT             NULL,
    [item_no]            INT             NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [qty]                INT             NULL,
    [ref_no]             NVARCHAR (128)  NULL,
    [cost_amount]        DECIMAL (12, 2) NULL,
    [vendor_no]          DECIMAL (8)     NULL,
    [iType]              NCHAR (1)       NULL,
    [lock_ap]            NCHAR (1)       NULL,
    [is_org_merged]      NCHAR (1)       NULL,
    [bill_number]        DECIMAL (9)     NULL,
    [rate]               DECIMAL (10, 2) NULL
);


GO
PRINT N'Creating [dbo].[mbol_master]...';


GO
CREATE TABLE [dbo].[mbol_master] (
    [elt_account_number]         DECIMAL (8)     NOT NULL,
    [booking_num]                NVARCHAR (32)   NOT NULL,
    [mbol_num]                   NVARCHAR (32)   NULL,
    [agent_name]                 NVARCHAR (128)  NULL,
    [agent_info]                 NTEXT           NULL,
    [agent_acct_num]             DECIMAL (7)     NULL,
    [Shipper_Name]               NVARCHAR (128)  NULL,
    [Shipper_Info]               NTEXT           NULL,
    [Shipper_acct_num]           DECIMAL (7)     NULL,
    [Consignee_Name]             NVARCHAR (128)  NULL,
    [Consignee_Info]             NTEXT           NULL,
    [Consignee_acct_num]         DECIMAL (7)     NULL,
    [export_ref]                 NTEXT           NULL,
    [origin_country]             NVARCHAR (32)   NULL,
    [export_instr]               NTEXT           NULL,
    [loading_pier]               NVARCHAR (32)   NULL,
    [move_type]                  NVARCHAR (32)   NULL,
    [containerized]              NCHAR (1)       NULL,
    [pre_carriage]               NVARCHAR (32)   NULL,
    [pre_receipt_place]          NVARCHAR (32)   NULL,
    [export_carrier]             NVARCHAR (64)   NULL,
    [loading_port]               NVARCHAR (64)   NULL,
    [unloading_port]             NVARCHAR (64)   NULL,
    [departure_date]             DATETIME        NULL,
    [delivery_place]             NVARCHAR (32)   NULL,
    [desc1]                      NTEXT           NULL,
    [desc2]                      NTEXT           NULL,
    [desc3]                      NTEXT           NULL,
    [desc4]                      NTEXT           NULL,
    [desc5]                      NTEXT           NULL,
    [pieces]                     INT             NULL,
    [gross_weight]               DECIMAL (12, 2) NULL,
    [measurement]                DECIMAL (12, 2) NULL,
    [tran_date]                  DATETIME        NULL,
    [last_modified]              DATETIME        NULL,
    [Notify_Name]                NVARCHAR (128)  NULL,
    [Notify_Info]                NTEXT           NULL,
    [Notify_acct_num]            DECIMAL (7)     NULL,
    [dest_country]               NVARCHAR (64)   NULL,
    [vessel_name]                NVARCHAR (64)   NULL,
    [manifest_desc]              NVARCHAR (128)  NULL,
    [weight_cp]                  NCHAR (1)       NULL,
    [prepaid_other_charge]       NCHAR (1)       NULL,
    [collect_other_charge]       NCHAR (1)       NULL,
    [scale]                      NCHAR (1)       NULL,
    [width]                      DECIMAL (10, 2) NULL,
    [length]                     DECIMAL (10, 2) NULL,
    [height]                     DECIMAL (10, 2) NULL,
    [dem_detail]                 NTEXT           NULL,
    [charge_rate]                FLOAT (53)      NULL,
    [total_weight_charge]        DECIMAL (12, 2) NULL,
    [declared_value]             DECIMAL (12, 2) NULL,
    [tran_by]                    NVARCHAR (64)   NULL,
    [tran_place]                 NVARCHAR (32)   NULL,
    [prepaid_invoiced]           NCHAR (1)       NULL,
    [collect_invoiced]           NCHAR (1)       NULL,
    [ci]                         NVARCHAR (64)   NULL,
    [unit_qty]                   NVARCHAR (8)    NULL,
    [SalesPerson]                NVARCHAR (64)   NULL,
    [CreatedBy]                  NVARCHAR (64)   NULL,
    [CreatedDate]                DATETIME        NULL,
    [ModifiedBy]                 NVARCHAR (64)   NULL,
    [ModifiedDate]               DATETIME        NULL,
    [total_other_charge]         DECIMAL (12)    NULL,
    [total_other_cost]           DECIMAL (18, 2) NULL,
    [is_org_merged]              NCHAR (1)       NULL,
    [dimtext]                    NTEXT           NULL,
    [of_cost]                    DECIMAL (12, 2) NULL,
    [agent_profit]               DECIMAL (12, 2) NULL,
    [agent_profit_share]         DECIMAL (3, 2)  NULL,
    [other_agent_profit_carrier] DECIMAL (12, 2) NULL,
    [other_agent_profit_agent]   DECIMAL (12, 2) NULL,
    [Total_Freight_Cost]         DECIMAL (12, 2) NULL,
    [aes_xtn]                    NVARCHAR (64)   NULL,
    [sed_stmt]                   NVARCHAR (128)  NULL
);


GO
PRINT N'Creating [dbo].[mbol_master].[PK_mbol_master]...';


GO
CREATE UNIQUE CLUSTERED INDEX [PK_mbol_master]
    ON [dbo].[mbol_master]([elt_account_number] ASC, [booking_num] ASC);


GO
PRINT N'Creating [dbo].[mbol_master].[NonClusteredIndex-mbol_master]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-mbol_master]
    ON [dbo].[mbol_master]([mbol_num] ASC, [elt_account_number] ASC)
    INCLUDE([booking_num]);


GO
PRINT N'Creating [dbo].[mbol_other_charge]...';


GO
CREATE TABLE [dbo].[mbol_other_charge] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [booking_num]        NVARCHAR (128)  NOT NULL,
    [mbol_num]           NVARCHAR (128)  NOT NULL,
    [tran_no]            INT             NOT NULL,
    [Coll_Prepaid]       NCHAR (1)       NULL,
    [charge_code]        INT             NULL,
    [charge_desc]        NVARCHAR (128)  NULL,
    [charge_amt]         DECIMAL (12, 2) NULL,
    [vendor_num]         DECIMAL (18)    NULL,
    [cost_code]          INT             NULL,
    [cost_desc]          NVARCHAR (128)  NULL,
    [cost_amt]           DECIMAL (12, 2) NULL,
    [is_org_merged]      NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[mbol_other_cost]...';


GO
CREATE TABLE [dbo].[mbol_other_cost] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)    NULL,
    [booking_num]        NVARCHAR (50)   NULL,
    [vendor_no]          DECIMAL (18)    NULL,
    [cost_amt]           DECIMAL (18, 2) NULL,
    [item_no]            DECIMAL (18)    NULL,
    [cost_desc]          NVARCHAR (50)   NULL
);


GO
PRINT N'Creating [dbo].[mode_transport_code]...';


GO
CREATE TABLE [dbo].[mode_transport_code] (
    [mot]      INT            NULL,
    [mot_desc] NVARCHAR (128) NULL
);


GO
PRINT N'Creating [dbo].[NewAccountRequests]...';


GO
CREATE TABLE [dbo].[NewAccountRequests] (
    [ID]               DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [UserName]         NVARCHAR (MAX) NULL,
    [IsProcessed]      BIT            NOT NULL,
    [FirstName]        NVARCHAR (MAX) NULL,
    [LastName]         NVARCHAR (MAX) NULL,
    [Title]            NVARCHAR (MAX) NULL,
    [CompanyName]      NVARCHAR (MAX) NULL,
    [DBAName]          NVARCHAR (MAX) NULL,
    [Country]          NVARCHAR (MAX) NULL,
    [Address]          NVARCHAR (MAX) NULL,
    [City]             NVARCHAR (MAX) NULL,
    [State]            NVARCHAR (MAX) NULL,
    [Zip]              NVARCHAR (MAX) NULL,
    [Fax]              NVARCHAR (MAX) NULL,
    [Phone]            NVARCHAR (MAX) NULL,
    [DateRequested]    DATETIME       NOT NULL,
    [DateProcessed]    DATETIME       NOT NULL,
    [ProcessedBy]      NVARCHAR (MAX) NULL,
    [CheckDomestic]    BIT            NOT NULL,
    [CheckAirExport]   BIT            NOT NULL,
    [CheckAirImport]   BIT            NOT NULL,
    [CheckOceanExport] BIT            NOT NULL,
    [CheckOceanImport] BIT            NOT NULL,
    [CheckAccounting]  BIT            NOT NULL,
    [CheckWMS]         BIT            NOT NULL,
    [FederalTaxID]     NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_dbo.NewAccountRequests] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ocean_booking_number]...';


GO
CREATE TABLE [dbo].[ocean_booking_number] (
    [elt_account_number]   DECIMAL (8)    NULL,
    [booking_num]          NVARCHAR (32)  NULL,
    [mbol_num]             NVARCHAR (32)  NULL,
    [departure_date]       DATETIME       NULL,
    [arrival_date]         DATETIME       NULL,
    [receipt_place]        NVARCHAR (64)  NULL,
    [origin_port_id]       NVARCHAR (8)   NULL,
    [origin_port_aes_code] NVARCHAR (6)   NULL,
    [origin_port_location] NVARCHAR (64)  NULL,
    [origin_port_state]    NVARCHAR (8)   NULL,
    [origin_port_country]  NVARCHAR (64)  NULL,
    [dest_port_id]         NVARCHAR (8)   NULL,
    [dest_port_aes_code]   NVARCHAR (6)   NULL,
    [dest_port_location]   NVARCHAR (64)  NULL,
    [dest_port_country]    NVARCHAR (64)  NULL,
    [dest_country_code]    NVARCHAR (2)   NULL,
    [delivery_place]       NVARCHAR (64)  NULL,
    [carrier_desc]         NVARCHAR (64)  NULL,
    [carrier_code]         DECIMAL (5)    NULL,
    [scac]                 NVARCHAR (4)   NULL,
    [consolidator_name]    NVARCHAR (64)  NULL,
    [consolidator_code]    DECIMAL (7)    NULL,
    [voyage_no]            NVARCHAR (30)  NULL,
    [vsl_name]             NVARCHAR (64)  NULL,
    [move_type]            NVARCHAR (32)  NULL,
    [cutoff_time]          NVARCHAR (20)  NULL,
    [cutoff]               DATETIME       NULL,
    [fcl_lcl]              NVARCHAR (3)   NULL,
    [container_type]       NVARCHAR (32)  NULL,
    [file_no]              NVARCHAR (128) NULL,
    [status]               NCHAR (1)      NULL,
    [booking_date]         DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[ocean_booking_number].[PK_ocean_booking_number]...';


GO
CREATE CLUSTERED INDEX [PK_ocean_booking_number]
    ON [dbo].[ocean_booking_number]([elt_account_number] ASC, [booking_num] ASC, [file_no] ASC);


GO
PRINT N'Creating [dbo].[Ocean_sed_detail]...';


GO
CREATE TABLE [dbo].[Ocean_sed_detail] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [hbol_num]           NVARCHAR (32)   NOT NULL,
    [item_no]            INT             NOT NULL,
    [dfm]                NCHAR (1)       NULL,
    [b_number]           NVARCHAR (32)   NULL,
    [b_qty1]             INT             NULL,
    [unit1]              NVARCHAR (10)   NULL,
    [b_qty2]             INT             NULL,
    [unit2]              NVARCHAR (10)   NULL,
    [gross_weight]       DECIMAL (12, 2) NULL,
    [vin]                NVARCHAR (32)   NULL,
    [item_value]         DECIMAL (12)    NULL,
    [export_code]        NVARCHAR (10)   NULL,
    [license_type]       NVARCHAR (10)   NULL,
    [item_desc]          NVARCHAR (45)   NULL,
    [booking_num]        NVARCHAR (128)  NULL,
    [sed_id]             DECIMAL (18)    NULL
);


GO
PRINT N'Creating [dbo].[ocean_sed_master]...';


GO
CREATE TABLE [dbo].[ocean_sed_master] (
    [auto_uid]                DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number]      DECIMAL (8)    NOT NULL,
    [hbol_num]                NVARCHAR (32)  NOT NULL,
    [booking_num]             NVARCHAR (64)  NULL,
    [shipper_acct]            DECIMAL (6)    NULL,
    [USPPI]                   NVARCHAR (256) NULL,
    [USPPI_taxid]             NVARCHAR (16)  NULL,
    [usppi_contact_firstname] NVARCHAR (64)  NULL,
    [usppi_contact_lastname]  NVARCHAR (64)  NULL,
    [party_to_transaction]    NCHAR (1)      NULL,
    [zip_code]                NVARCHAR (5)   NULL,
    [export_date]             DATETIME       NULL,
    [tran_ref_no]             NVARCHAR (32)  NULL,
    [consignee_acct]          DECIMAL (6)    NULL,
    [ulti_consignee]          NVARCHAR (256) NULL,
    [inter_consignee]         NVARCHAR (256) NULL,
    [forward_agent]           NVARCHAR (256) NULL,
    [origin_state]            NVARCHAR (16)  NULL,
    [dest_country]            NVARCHAR (32)  NULL,
    [loading_pier]            NVARCHAR (32)  NULL,
    [tran_method]             INT            NULL,
    [export_carrier]          NVARCHAR (32)  NULL,
    [vessel_name]             NVARCHAR (64)  NULL,
    [export_port]             NVARCHAR (32)  NULL,
    [unloading_port]          NVARCHAR (32)  NULL,
    [containerized]           NCHAR (1)      NULL,
    [carrier_id_code]         NVARCHAR (16)  NULL,
    [shipment_ref_no]         NVARCHAR (16)  NULL,
    [entry_no]                NVARCHAR (16)  NULL,
    [hazardous_materials]     NCHAR (1)      NULL,
    [in_bond_code]            INT            NULL,
    [route_export_tran]       NCHAR (1)      NULL,
    [license_no]              NVARCHAR (32)  NULL,
    [ECCN]                    NVARCHAR (16)  NULL,
    [duly]                    NVARCHAR (32)  NULL,
    [title]                   NVARCHAR (64)  NULL,
    [phone]                   NVARCHAR (24)  NULL,
    [email]                   NVARCHAR (128) NULL,
    [tran_date]               DATETIME       NULL,
    [last_modified]           DATETIME       NULL,
    [is_org_merged]           NCHAR (1)      NULL,
    [aes_itn]                 NVARCHAR (32)  NULL,
    [aes_status]              NVARCHAR (32)  NULL
);


GO
PRINT N'Creating [dbo].[organization]...';


GO
CREATE TABLE [dbo].[organization] (
    [elt_account_number]       DECIMAL (8)     NOT NULL,
    [org_account_number]       DECIMAL (18)    NOT NULL,
    [dba_name]                 NVARCHAR (128)  NULL,
    [class_code]               NCHAR (32)      NULL,
    [isFrequently]             NCHAR (1)       NULL,
    [business_legal_name]      NTEXT           NULL,
    [business_fed_taxid]       NVARCHAR (16)   NULL,
    [business_address]         NTEXT           NULL,
    [business_address2]        NTEXT           NULL,
    [business_address3]        NTEXT           NULL,
    [business_city]            NVARCHAR (128)  NULL,
    [business_state]           NVARCHAR (64)   NULL,
    [business_zip]             NVARCHAR (32)   NULL,
    [business_country]         NVARCHAR (64)   NULL,
    [b_country_code]           NVARCHAR (2)    NULL,
    [business_phone]           NVARCHAR (32)   NULL,
    [business_phone_ext]       NVARCHAR (16)   NULL,
    [business_phone_mask]      NCHAR (2)       NULL,
    [business_phone2]          NVARCHAR (32)   NULL,
    [business_phone2_ext]      NVARCHAR (16)   NULL,
    [business_phone2_mask]     NCHAR (2)       NULL,
    [business_fax]             NVARCHAR (32)   NULL,
    [business_fax_mask]        NCHAR (2)       NULL,
    [business_url]             NVARCHAR (64)   NULL,
    [web_login_id]             NVARCHAR (32)   NULL,
    [web_login_pin]            NVARCHAR (32)   NULL,
    [owner_lname]              NVARCHAR (32)   NULL,
    [owner_fname]              NVARCHAR (32)   NULL,
    [owner_mname]              NVARCHAR (32)   NULL,
    [owner_title]              NTEXT           NULL,
    [owner_departm]            NTEXT           NULL,
    [owner_mail_address]       NTEXT           NULL,
    [owner_mail_address2]      NTEXT           NULL,
    [owner_mail_address3]      NTEXT           NULL,
    [owner_mail_city]          NVARCHAR (32)   NULL,
    [owner_mail_state]         NVARCHAR (32)   NULL,
    [owner_mail_zip]           NVARCHAR (32)   NULL,
    [owner_mail_country]       NVARCHAR (64)   NULL,
    [owner_phone]              NVARCHAR (32)   NULL,
    [owner_phone_mask]         NCHAR (2)       NULL,
    [owner_email]              NVARCHAR (1024) NULL,
    [attn_name]                NVARCHAR (64)   NULL,
    [notify_name]              NVARCHAR (64)   NULL,
    [agent_elt_acct]           NCHAR (8)       NULL,
    [edt]                      NCHAR (1)       NULL,
    [iata_code]                NVARCHAR (16)   NULL,
    [carrier_code]             NVARCHAR (16)   NULL,
    [carrier_id]               NVARCHAR (16)   NULL,
    [carrier_type]             NCHAR (1)       NULL,
    [account_status]           NVARCHAR (1)    NULL,
    [comment]                  NTEXT           NULL,
    [comment2]                 NTEXT           NULL,
    [credit_amt]               DECIMAL (12, 2) NULL,
    [bill_term]                INT             NULL,
    [coloader_elt_acct]        DECIMAL (8)     NULL,
    [colodee_elt_acct_name]    NTEXT           NULL,
    [z_bond_number]            DECIMAL (18)    NULL,
    [z_bond_exp_date]          DATETIME        NULL,
    [z_bond_amount]            DECIMAL (18)    NULL,
    [z_bond_surety]            NTEXT           NULL,
    [z_bank_name]              NTEXT           NULL,
    [z_bank_account_no]        NCHAR (20)      NULL,
    [z_chl_no]                 NVARCHAR (30)   NULL,
    [z_firm_code]              NVARCHAR (30)   NULL,
    [z_carrier_code]           NVARCHAR (30)   NULL,
    [z_carrier_prefix]         NCHAR (10)      NULL,
    [z_attn_txt]               NVARCHAR (64)   NULL,
    [SalesPerson]              NVARCHAR (32)   NULL,
    [c2FirstName]              NVARCHAR (32)   NULL,
    [c2MiddleName]             NVARCHAR (32)   NULL,
    [c2LastName]               NVARCHAR (32)   NULL,
    [c2Title]                  NTEXT           NULL,
    [c2Phone]                  NVARCHAR (32)   NULL,
    [c2Ext]                    NVARCHAR (16)   NULL,
    [c2Phone_mask]             NCHAR (2)       NULL,
    [c2Cell]                   NVARCHAR (32)   NULL,
    [c2Cell_mask]              NCHAR (2)       NULL,
    [c2Fax]                    NVARCHAR (32)   NULL,
    [c2Fax_mask]               NCHAR (2)       NULL,
    [c2Email]                  NTEXT           NULL,
    [c3FirstName]              NVARCHAR (32)   NULL,
    [c3MiddleName]             NVARCHAR (32)   NULL,
    [c3LastName]               NVARCHAR (32)   NULL,
    [c3Title]                  NTEXT           NULL,
    [c3Phone]                  NVARCHAR (32)   NULL,
    [c3Phone_mask]             NCHAR (2)       NULL,
    [c3Ext]                    NVARCHAR (16)   NULL,
    [c3Cell]                   NVARCHAR (32)   NULL,
    [c3Cell_mask]              NCHAR (2)       NULL,
    [c3Fax]                    NVARCHAR (32)   NULL,
    [c3Fax_mask]               NCHAR (2)       NULL,
    [c3Email]                  NTEXT           NULL,
    [is_shipper]               NCHAR (1)       NULL,
    [is_consignee]             NCHAR (1)       NULL,
    [is_agent]                 NCHAR (1)       NULL,
    [is_vendor]                NCHAR (1)       NULL,
    [is_carrier]               NCHAR (1)       NULL,
    [is_coloader]              NCHAR (1)       NULL,
    [z_is_trucker]             NCHAR (1)       NULL,
    [z_is_special]             NCHAR (1)       NULL,
    [z_is_broker]              NCHAR (1)       NULL,
    [z_is_warehousing]         NCHAR (1)       NULL,
    [z_is_cfs]                 NCHAR (1)       NULL,
    [z_is_govt]                NCHAR (1)       NULL,
    [SubConsignee]             NVARCHAR (32)   NULL,
    [SubShipper]               NVARCHAR (32)   NULL,
    [SubAgent]                 NVARCHAR (32)   NULL,
    [SubCarrier]               NVARCHAR (32)   NULL,
    [SubTrucker]               NVARCHAR (32)   NULL,
    [SubWarehousing]           NVARCHAR (32)   NULL,
    [SubCFS]                   NVARCHAR (32)   NULL,
    [SubBroker]                NVARCHAR (32)   NULL,
    [SubGovt]                  NVARCHAR (32)   NULL,
    [SubVendor]                NVARCHAR (32)   NULL,
    [SubSpecial]               NVARCHAR (32)   NULL,
    [defaultBroker]            NVARCHAR (20)   NULL,
    [defaultBrokerName]        NVARCHAR (128)  NULL,
    [broker_info]              NTEXT           NULL,
    [refferedBy]               NVARCHAR (64)   NULL,
    [date_opened]              DATETIME        NULL,
    [last_update]              DATETIME        NULL,
    [acct_name]                NVARCHAR (16)   NULL,
    [business_st_taxid]        NVARCHAR (16)   NULL,
    [owner_ssn]                NVARCHAR (10)   NULL,
    [business_phone_mask_exp]  NTEXT           NULL,
    [business_phone2_mask_exp] NTEXT           NULL,
    [business_fax_mask_exp]    NTEXT           NULL,
    [owner_phone_mask_exp]     NTEXT           NULL,
    [c2Phone_mask_exp]         NTEXT           NULL,
    [c2Cell_mask_exp]          NTEXT           NULL,
    [c2Fax_mask_exp]           NTEXT           NULL,
    [c3Phone_mask_exp]         NTEXT           NULL,
    [c3Cell_mask_exp]          NTEXT           NULL,
    [c3Fax_mask_exp]           NTEXT           NULL,
    [business_phone_mask_pre]  NCHAR (10)      NULL,
    [business_phone2_mask_pre] NCHAR (10)      NULL,
    [business_fax_mask_pre]    NCHAR (10)      NULL,
    [owner_phone_mask_pre]     NCHAR (10)      NULL,
    [c2Phone_mask_pre]         NCHAR (10)      NULL,
    [c2Cell_mask_pre]          NCHAR (10)      NULL,
    [c2Fax_mask_pre]           NCHAR (10)      NULL,
    [c3Phone_mask_pre]         NCHAR (10)      NULL,
    [c3Cell_mask_pre]          NCHAR (10)      NULL,
    [c3Fax_mask_pre]           NCHAR (10)      NULL,
    [print_check_as]           NTEXT           NULL,
    [print_check_as_info]      NTEXT           NULL,
    [known_shipper]            NCHAR (1)       NULL,
    [coloader_elt_acct_name]   NTEXT           NULL,
    [ICC_MC]                   NVARCHAR (64)   NULL,
    [FF_account_no]            NVARCHAR (64)   NULL,
    [is_customer]              NVARCHAR (1)    NULL,
    [subCustomer]              NVARCHAR (32)   NULL,
    [OrgId]                    INT             IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_organization] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [org_account_number] ASC)
);


GO
PRINT N'Creating [dbo].[organization].[org]...';


GO
CREATE NONCLUSTERED INDEX [org]
    ON [dbo].[organization]([elt_account_number] ASC, [org_account_number] ASC);


GO
PRINT N'Creating [dbo].[organization].[org_dba]...';


GO
CREATE NONCLUSTERED INDEX [org_dba]
    ON [dbo].[organization]([elt_account_number] ASC, [dba_name] ASC);


GO
PRINT N'Creating [dbo].[organization].[carrier_code]...';


GO
CREATE NONCLUSTERED INDEX [carrier_code]
    ON [dbo].[organization]([elt_account_number] ASC, [carrier_code] ASC, [dba_name] ASC);


GO
PRINT N'Creating [dbo].[page_user_access]...';


GO
CREATE TABLE [dbo].[page_user_access] (
    [elt_account_number] DECIMAL (18) NOT NULL,
    [user_id]            DECIMAL (18) NOT NULL,
    [page_id]            INT          NOT NULL,
    [is_bloked]          BIT          NOT NULL
);


GO
PRINT N'Creating [dbo].[payment_due]...';


GO
CREATE TABLE [dbo].[payment_due] (
    [auto_uid]           DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (18)    NULL,
    [create_date]        DATETIME        NULL,
    [pmt_amount]         DECIMAL (18, 2) NULL,
    [pmt_desc]           NVARCHAR (128)  NULL,
    [pmt_status]         NVARCHAR (1)    NULL,
    [tran_id]            NVARCHAR (64)   NULL,
    [resp_code]          DECIMAL (18)    NULL,
    [resp_res_code]      DECIMAL (18)    NULL,
    [resp_res_text]      NTEXT           NULL,
    [auth_code]          NVARCHAR (64)   NULL,
    [avs_code]           NVARCHAR (8)    NULL,
    [auth_date]          DATETIME        NULL
);


GO
PRINT N'Creating [dbo].[pickup_order]...';


GO
CREATE TABLE [dbo].[pickup_order] (
    [auto_uid]               DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number]     DECIMAL (18)   NULL,
    [Booking_NUM]            NVARCHAR (32)  NULL,
    [MAWB_NUM]               NVARCHAR (32)  NULL,
    [HAWB_NUM]               NVARCHAR (32)  NULL,
    [sub_hawb_no]            NVARCHAR (32)  NULL,
    [Shipper_Name]           NVARCHAR (128) NULL,
    [Shipper_Info]           NTEXT          NULL,
    [Shipper_account_number] DECIMAL (18)   NULL,
    [Pickup_Name]            NVARCHAR (128) NULL,
    [Pickup_Info]            NTEXT          NULL,
    [Pickup_account_number]  DECIMAL (18)   NULL,
    [ModifiedDate]           DATETIME       NULL,
    [ref_no_Our]             NVARCHAR (32)  NULL,
    [Carrier_Name]           NVARCHAR (128) NULL,
    [Carrier_Info]           NTEXT          NULL,
    [Carrier_account_number] DECIMAL (18)   NULL,
    [Carrier_Code]           NVARCHAR (64)  NULL,
    [eType]                  NVARCHAR (1)   NULL,
    [Origin_Port_Code]       NVARCHAR (8)   NULL,
    [Origin_Port_Location]   NVARCHAR (128) NULL,
    [Dest_Port_Code]         NVARCHAR (8)   NULL,
    [Dest_Port_Location]     NVARCHAR (128) NULL,
    [ETA_DATE1]              DATETIME       NULL,
    [ETD_DATE1]              DATETIME       NULL,
    [free_date]              DATETIME       NULL,
    [trucker_name]           NVARCHAR (128) NULL,
    [trucker_acct]           NVARCHAR (64)  NULL,
    [entry_billing_no]       NVARCHAR (32)  NULL,
    [customer_ref_no]        NVARCHAR (32)  NULL,
    [Total_Pieces]           NVARCHAR (64)  NULL,
    [Desc2]                  NTEXT          NULL,
    [Total_Gross_Weight]     FLOAT (53)     NULL,
    [Weight_Scale]           NVARCHAR (3)   NULL,
    [inland_charge]          FLOAT (53)     NULL,
    [inland_charge_type]     NVARCHAR (1)   NULL,
    [route]                  NTEXT          NULL,
    [sec_num]                NVARCHAR (32)  NULL,
    [Handling_Info]          NTEXT          NULL,
    [attention]              NTEXT          NULL,
    [contact]                NTEXT          NULL,
    [employee]               NTEXT          NULL,
    [anonymous]              NVARCHAR (1)   NULL,
    [file_name]              NVARCHAR (128) NULL,
    [session_id]             NVARCHAR (64)  NULL,
    [is_org_merged]          NCHAR (1)      NULL,
    [dimension]              NVARCHAR (128) NULL,
    [dimension_scale]        NVARCHAR (3)   NULL,
    [pickup_ref_num]         NVARCHAR (32)  NULL,
    [po_num]                 NVARCHAR (64)  NULL,
    [file_type]              NVARCHAR (2)   NULL,
    [is_hazard]              NVARCHAR (1)   NULL
);


GO
PRINT N'Creating [dbo].[port]...';


GO
CREATE TABLE [dbo].[port] (
    [elt_account_number] DECIMAL (8)   NOT NULL,
    [port_code]          NVARCHAR (8)  NOT NULL,
    [port_desc]          NVARCHAR (50) NULL,
    [port_id]            NVARCHAR (50) NULL,
    [port_city]          NVARCHAR (50) NULL,
    [port_state]         NVARCHAR (10) NULL,
    [port_country]       NVARCHAR (50) NULL,
    [port_country_code]  NVARCHAR (2)  NULL,
    CONSTRAINT [PK_port] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [port_code] ASC)
);


GO
PRINT N'Creating [dbo].[port_codes]...';


GO
CREATE TABLE [dbo].[port_codes] (
    [port_type]    NVARCHAR (16) NULL,
    [port_code]    NVARCHAR (8)  NULL,
    [port_desc]    NVARCHAR (50) NULL,
    [port_state]   NVARCHAR (50) NULL,
    [port_country] NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[rate_table]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[rate_table] (
    [id]                 DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [elt_account_number] INT             NOT NULL,
    [customer_no]        INT             NULL,
    [agent_no]           INT             NULL,
    [origin_port]        NVARCHAR (50)   NOT NULL,
    [dest_port]          NVARCHAR (50)   NOT NULL,
    [airline]            INT             NOT NULL,
    [kg_lb]              CHAR (1)        NOT NULL,
    [share]              DECIMAL (18, 2) NULL,
    [min]                DECIMAL (18, 2) NULL,
    [minPlus]            DECIMAL (18, 2) NULL,
    [breaks]             VARCHAR (1000)  NULL,
    [rates]              VARCHAR (1000)  NULL,
    [rate_type]          SMALLINT        NOT NULL,
    [enabled]            BIT             NULL,
    CONSTRAINT [PK_rate.ratetable] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[RateBlockDefinition]...';


GO
CREATE TABLE [dbo].[RateBlockDefinition] (
    [ID]             INT           IDENTITY (1, 1) NOT NULL,
    [RangeStart]     INT           NOT NULL,
    [Caption]        NVARCHAR (50) NOT NULL,
    [RateEntryRowID] INT           NOT NULL,
    [Value]          NVARCHAR (50) NULL,
    CONSTRAINT [PK_RateBlockDefinition] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[RateEntryRow]...';


GO
CREATE TABLE [dbo].[RateEntryRow] (
    [RouteID]     INT        NOT NULL,
    [ID]          INT        IDENTITY (1, 1) NOT NULL,
    [CarrierCode] INT        NOT NULL,
    [Share]       FLOAT (53) NULL,
    CONSTRAINT [PK_Rate] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[RateRoute]...';


GO
CREATE TABLE [dbo].[RateRoute] (
    [ID]                          INT            IDENTITY (1, 1) NOT NULL,
    [Origin]                      NVARCHAR (50)  NOT NULL,
    [Dest]                        NVARCHAR (50)  NOT NULL,
    [Unit]                        NVARCHAR (50)  NOT NULL,
    [UnitText]                    NVARCHAR (50)  NOT NULL,
    [CustomerOrgName]             NVARCHAR (500) NULL,
    [customer_org_account_number] INT            NULL,
    [AgentOrgName]                NVARCHAR (500) NULL,
    [agent_org_account_number]    INT            NULL,
    [elt_account_number]          INT            NOT NULL,
    [RateType]                    INT            NOT NULL,
    [Share]                       NVARCHAR (50)  NULL,
    CONSTRAINT [PK_RateRoute] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Recent_Work]...';


GO
CREATE TABLE [dbo].[Recent_Work] (
    [workid]             NUMERIC (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (8)    NULL,
    [user_id]            NCHAR (16)     NULL,
    [workdate]           NCHAR (20)     NULL,
    [docnum]             NVARCHAR (128) NULL,
    [title]              NVARCHAR (128) NULL,
    [surl]               NVARCHAR (128) NULL,
    [workdetail]         NVARCHAR (128) NULL,
    [remark]             NVARCHAR (128) NULL,
    [status]             NCHAR (1)      NULL,
    CONSTRAINT [PK_Recent_Wok] PRIMARY KEY CLUSTERED ([workid] ASC)
);


GO
PRINT N'Creating [dbo].[Recent_Work].[recent_work_date]...';


GO
CREATE NONCLUSTERED INDEX [recent_work_date]
    ON [dbo].[Recent_Work]([elt_account_number] ASC, [user_id] ASC, [workdate] ASC);


GO
PRINT N'Creating [dbo].[reconcile]...';


GO
CREATE TABLE [dbo].[reconcile] (
    [recon_id]                       DECIMAL (18) NOT NULL,
    [elt_account_number]             DECIMAL (18) NULL,
    [modified_date]                  DATETIME     NULL,
    [recon_state]                    NVARCHAR (1) NULL,
    [created_date]                   DATETIME     NULL,
    [statement_ending_date]          DATETIME     NULL,
    [opening_balance]                FLOAT (53)   NULL,
    [statement_ending_balance]       FLOAT (53)   NULL,
    [total_cleared]                  FLOAT (53)   NULL,
    [total_uncleared]                FLOAT (53)   NULL,
    [system_balance_asof_statement]  FLOAT (53)   NULL,
    [system_balance_asof_recon_date] FLOAT (53)   NULL,
    [total_unclear_after_statement]  FLOAT (53)   NULL,
    [service_charge_date]            DATETIME     NULL,
    [interested_earned_date]         DATETIME     NULL,
    [service_charge]                 FLOAT (53)   NULL,
    [interest_earned]                FLOAT (53)   NULL,
    [bank_account_number]            DECIMAL (7)  NOT NULL,
    [recon_beginning_date]           DATETIME     NULL,
    [gj_entry_no]                    DECIMAL (18) NULL,
    CONSTRAINT [PK_reconcile] PRIMARY KEY CLUSTERED ([recon_id] ASC)
);


GO
PRINT N'Creating [dbo].[reconcile_payment_detail]...';


GO
CREATE TABLE [dbo].[reconcile_payment_detail] (
    [recon_id]           DECIMAL (18)    NOT NULL,
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [tran_seq_num]       DECIMAL (8)     NOT NULL,
    [gl_account_number]  DECIMAL (5)     NULL,
    [gl_account_name]    NVARCHAR (128)  NULL,
    [tran_type]          NVARCHAR (16)   NULL,
    [tran_num]           NVARCHAR (16)   NULL,
    [tran_date]          DATETIME        NULL,
    [customer_name]      NVARCHAR (128)  NULL,
    [customer_number]    DECIMAL (9)     NULL,
    [credit_amount]      DECIMAL (12, 2) NULL,
    [ModifiedBy]         NCHAR (10)      NULL,
    [ModifiedDate]       DATETIME        NULL,
    [memo]               NVARCHAR (128)  NULL,
    [is_recon_cleared]   NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[reconcile_receivement_detail]...';


GO
CREATE TABLE [dbo].[reconcile_receivement_detail] (
    [recon_id]           DECIMAL (18)    NOT NULL,
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [tran_seq_num]       DECIMAL (8)     NOT NULL,
    [gl_account_number]  DECIMAL (5)     NULL,
    [gl_account_name]    NVARCHAR (128)  NULL,
    [tran_type]          NVARCHAR (16)   NULL,
    [tran_num]           NVARCHAR (16)   NULL,
    [tran_date]          DATETIME        NULL,
    [customer_name]      NVARCHAR (128)  NULL,
    [customer_number]    DECIMAL (9)     NULL,
    [debit_amount]       DECIMAL (12, 2) NULL,
    [ModifiedBy]         NCHAR (10)      NULL,
    [ModifiedDate]       DATETIME        NULL,
    [memo]               NVARCHAR (128)  NULL,
    [is_recon_cleared]   NCHAR (1)       NULL
);


GO
PRINT N'Creating [dbo].[RegionCode]...';


GO
CREATE TABLE [dbo].[RegionCode] (
    [CountryCode] NCHAR (10)    NOT NULL,
    [Type]        NCHAR (10)    NOT NULL,
    [Code]        NCHAR (10)    NOT NULL,
    [Name]        NVARCHAR (50) NOT NULL
);


GO
PRINT N'Creating [dbo].[registered_driver]...';


GO
CREATE TABLE [dbo].[registered_driver] (
    [elt_account_number] DECIMAL (18)   NULL,
    [driver_acct]        DECIMAL (18)   NULL,
    [driver_name]        NVARCHAR (128) NULL,
    [driver_id]          NVARCHAR (64)  NULL,
    [driver_pass]        NVARCHAR (64)  NULL
);


GO
PRINT N'Creating [dbo].[scheduleB]...';


GO
CREATE TABLE [dbo].[scheduleB] (
    [auto_uid]           DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [elt_account_number] DECIMAL (8)   NOT NULL,
    [sb]                 NVARCHAR (32) NOT NULL,
    [sb_unit1]           NVARCHAR (3)  NULL,
    [sb_unit2]           NVARCHAR (3)  NULL,
    [description]        NVARCHAR (45) NULL,
    [export_code]        NVARCHAR (2)  NULL,
    [license_type]       NVARCHAR (3)  NULL,
    [eccn]               NVARCHAR (5)  NULL
);


GO
PRINT N'Creating [dbo].[SE_Modules]...';


GO
CREATE TABLE [dbo].[SE_Modules] (
    [Module_Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Code]        NVARCHAR (20) NULL,
    [Description] NVARCHAR (40) NULL,
    [Deleted]     NVARCHAR (1)  NULL
);


GO
PRINT N'Creating [dbo].[SE_Pages]...';


GO
CREATE TABLE [dbo].[SE_Pages] (
    [Page_Id]      INT            NOT NULL,
    [Module_Id]    INT            NULL,
    [Name]         NVARCHAR (40)  NOT NULL,
    [Extention]    NVARCHAR (4)   NULL,
    [Description]  NVARCHAR (80)  NULL,
    [Type]         NVARCHAR (50)  NULL,
    [PhysicalPage] NVARCHAR (100) NULL,
    [Deleted]      NVARCHAR (1)   NULL,
    [morder]       INT            NULL
);


GO
PRINT N'Creating [dbo].[SE_User_Authority]...';


GO
CREATE TABLE [dbo].[SE_User_Authority] (
    [elt_account_number] DECIMAL (8) NOT NULL,
    [UserID]             DECIMAL (8) NOT NULL,
    [Page_Id]            INT         NOT NULL,
    [Authority_Id]       INT         NOT NULL,
    [Fav]                NCHAR (1)   NULL
);


GO
PRINT N'Creating [dbo].[sed_detail]...';


GO
CREATE TABLE [dbo].[sed_detail] (
    [elt_account_number] DECIMAL (8)     NOT NULL,
    [hawb_num]           NVARCHAR (32)   NOT NULL,
    [item_no]            INT             NOT NULL,
    [dfm]                NCHAR (1)       NULL,
    [b_number]           NVARCHAR (32)   NULL,
    [item_desc]          NVARCHAR (128)  NULL,
    [b_qty1]             INT             NULL,
    [unit1]              NVARCHAR (16)   NULL,
    [b_qty2]             INT             NULL,
    [unit2]              NVARCHAR (16)   NULL,
    [gross_weight]       DECIMAL (12, 2) NULL,
    [vin]                NVARCHAR (32)   NULL,
    [item_value]         DECIMAL (12)    NULL,
    [export_code]        NVARCHAR (32)   NULL,
    [license_type]       NVARCHAR (32)   NULL,
    [mawb_num]           NVARCHAR (32)   NULL,
    [sed_id]             DECIMAL (18)    NULL,
    [eccn]               NVARCHAR (5)    NULL,
    [license_number]     NVARCHAR (12)   NULL
);


GO
PRINT N'Creating [dbo].[sed_master]...';


GO
CREATE TABLE [dbo].[sed_master] (
    [auto_uid]                DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [elt_account_number]      DECIMAL (8)    NOT NULL,
    [HAWB_NUM]                NVARCHAR (32)  NOT NULL,
    [mawb_num]                NVARCHAR (32)  NULL,
    [flight_no]               NVARCHAR (12)  NULL,
    [shipper_acct]            DECIMAL (6)    NULL,
    [USPPI]                   NVARCHAR (256) NULL,
    [usppi_contact_lastname]  NVARCHAR (64)  NULL,
    [usppi_contact_firstname] NVARCHAR (64)  NULL,
    [USPPI_taxid]             NVARCHAR (16)  NULL,
    [party_to_transaction]    NCHAR (1)      NULL,
    [zip_code]                NVARCHAR (5)   NULL,
    [export_date]             DATETIME       NULL,
    [tran_ref_no]             NVARCHAR (32)  NULL,
    [consignee_acct]          DECIMAL (6)    NULL,
    [consignee_country_code]  NVARCHAR (2)   NULL,
    [ulti_consignee]          NVARCHAR (256) NULL,
    [inter_consignee]         NVARCHAR (256) NULL,
    [forward_agent]           NVARCHAR (256) NULL,
    [origin_state]            NVARCHAR (16)  NULL,
    [dest_country]            NVARCHAR (32)  NULL,
    [loading_pier]            NVARCHAR (32)  NULL,
    [tran_method]             NVARCHAR (32)  NULL,
    [export_carrier]          NVARCHAR (32)  NULL,
    [export_port]             NVARCHAR (32)  NULL,
    [unloading_port]          NVARCHAR (32)  NULL,
    [containerized]           NCHAR (1)      NULL,
    [carrier_id_code]         NVARCHAR (16)  NULL,
    [shipment_ref_no]         NVARCHAR (16)  NULL,
    [entry_no]                NVARCHAR (16)  NULL,
    [hazardous_materials]     NCHAR (1)      NULL,
    [in_bond_code]            NVARCHAR (16)  NULL,
    [route_export_tran]       NCHAR (1)      NULL,
    [license_no]              NVARCHAR (32)  NULL,
    [ECCN]                    NVARCHAR (16)  NULL,
    [duly]                    NVARCHAR (32)  NULL,
    [title]                   NVARCHAR (64)  NULL,
    [phone]                   NVARCHAR (24)  NULL,
    [email]                   NVARCHAR (128) NULL,
    [tran_date]               DATETIME       NULL,
    [last_modified]           DATETIME       NULL,
    [is_org_merged]           NCHAR (1)      NULL,
    [aes_itn]                 NVARCHAR (32)  NULL,
    [aes_status]              NVARCHAR (32)  NULL,
    [inter_consignee_acct]    DECIMAL (18)   NULL
);


GO
PRINT N'Creating [dbo].[setup_master]...';


GO
CREATE TABLE [dbo].[setup_master] (
    [page_id]    DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [seq_id]     DECIMAL (18)   NULL,
    [title]      NVARCHAR (32)  NULL,
    [setup_type] NVARCHAR (32)  NULL,
    [setup_url]  NVARCHAR (128) NULL,
    [valid_url]  NVARCHAR (128) NULL,
    [remark]     NTEXT          NULL
);


GO
PRINT N'Creating [dbo].[setup_session]...';


GO
CREATE TABLE [dbo].[setup_session] (
    [sid]                NVARCHAR (128) NULL,
    [email]              NVARCHAR (128) NULL,
    [password]           NVARCHAR (16)  NULL,
    [page_id]            DECIMAL (18)   NULL,
    [created_date]       DATETIME       NULL,
    [updated_date]       DATETIME       NULL,
    [elt_account_number] DECIMAL (18)   NULL,
    [application_log]    NTEXT          NULL,
    [support_ask]        NTEXT          NULL,
    [support_answer]     NTEXT          NULL,
    [payment_id]         DECIMAL (18)   NULL
);


GO
PRINT N'Creating [dbo].[statistic]...';


GO
CREATE TABLE [dbo].[statistic] (
    [s_date]       DATETIME       NULL,
    [s_week]       NVARCHAR (250) NULL,
    [s_user_agent] NVARCHAR (250) NULL,
    [s_referer]    NVARCHAR (250) NULL
);


GO
PRINT N'Creating [dbo].[subscription_freighteasy]...';


GO
CREATE TABLE [dbo].[subscription_freighteasy] (
    [elt_account_number] DECIMAL (18) NULL,
    [subscription_code]  VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[Subscription_Tab_Ref]...';


GO
CREATE TABLE [dbo].[Subscription_Tab_Ref] (
    [ID]            DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [Code_Segmenet] NVARCHAR (50) NOT NULL,
    [page_id]       INT           NOT NULL
);


GO
PRINT N'Creating [dbo].[SubscriptionDefinition]...';


GO
CREATE TABLE [dbo].[SubscriptionDefinition] (
    [ID]         INT            IDENTITY (1, 1) NOT NULL,
    [Code]       NVARCHAR (50)  NOT NULL,
    [Descripton] NVARCHAR (200) NOT NULL,
    [is_product] BIT            NULL
);


GO
PRINT N'Creating [dbo].[tab_master]...';


GO
CREATE TABLE [dbo].[tab_master] (
    [elt_account_number] DECIMAL (18)   NULL,
    [user_id]            DECIMAL (18)   NULL,
    [page_label]         NVARCHAR (64)  NULL,
    [page_url]           NVARCHAR (256) NULL,
    [top_module]         NVARCHAR (64)  NULL,
    [sub_module]         NVARCHAR (64)  NULL,
    [page_status]        NVARCHAR (1)   NULL,
    [access_level]       NVARCHAR (16)  NULL,
    [page_seq_id]        DECIMAL (18)   NULL,
    [sub_seq_id]         DECIMAL (18)   NULL,
    [top_seq_id]         DECIMAL (18)   NULL,
    [page_id]            DECIMAL (18)   IDENTITY (1, 1) NOT NULL,
    [is_obsolete]        BIT            NULL,
    [master_url]         NVARCHAR (256) NULL
);


GO
PRINT N'Creating [dbo].[tab_user]...';


GO
CREATE TABLE [dbo].[tab_user] (
    [elt_account_number] DECIMAL (18) NULL,
    [user_id]            DECIMAL (18) NULL,
    [page_id]            DECIMAL (18) NULL,
    [is_denied]          NVARCHAR (1) NULL,
    [is_faved]           NVARCHAR (1) NULL
);


GO
PRINT N'Creating [dbo].[test_table]...';


GO
CREATE TABLE [dbo].[test_table] (
    [value1] NVARCHAR (10) NULL,
    [value2] NTEXT         NULL
);


GO
PRINT N'Creating [dbo].[tmp_org]...';


GO
CREATE TABLE [dbo].[tmp_org] (
    [elt_account_number] DECIMAL (18)   NULL,
    [org_account_number] DECIMAL (7)    NOT NULL,
    [dba_name]           NVARCHAR (128) NULL,
    [class_code]         NCHAR (20)     NULL,
    [isFrequently]       NCHAR (1)      NULL,
    [business_address]   NVARCHAR (128) NULL,
    [business_address2]  NVARCHAR (128) NULL,
    [business_city]      NVARCHAR (32)  NULL,
    [business_state]     NVARCHAR (2)   NULL,
    [business_zip]       NVARCHAR (32)  NULL,
    [business_country]   NVARCHAR (64)  NULL,
    [b_country_code]     NCHAR (2)      NULL,
    [owner_fname]        NVARCHAR (32)  NULL,
    [owner_title]        NVARCHAR (128) NULL,
    [business_phone]     NVARCHAR (32)  NULL,
    [business_fax]       NVARCHAR (32)  NULL,
    [business_url]       NVARCHAR (64)  NULL,
    [owner_email]        NVARCHAR (64)  NULL,
    [c2FirstName]        NVARCHAR (32)  NULL,
    [c2Phone]            NVARCHAR (32)  NULL,
    [c2Fax]              NVARCHAR (32)  NULL,
    [c2Email]            NVARCHAR (64)  NULL,
    [business_fed_taxid] NVARCHAR (16)  NULL,
    [comment]            NVARCHAR (512) NULL,
    [comment2]           NVARCHAR (512) NULL,
    [is_shipper]         NCHAR (1)      NULL,
    [is_agent]           NCHAR (1)      NULL,
    [is_consignee]       NCHAR (1)      NULL,
    [z_is_trucker]       NCHAR (1)      NULL,
    [z_is_special]       NCHAR (1)      NULL,
    [owner_mail_address] NVARCHAR (256) NULL,
    [refferedBy]         NVARCHAR (64)  NULL,
    [date_opened]        DATETIME       NULL,
    [last_update]        DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[unit_code]...';


GO
CREATE TABLE [dbo].[unit_code] (
    [unit_code] NVARCHAR (50)  NOT NULL,
    [unit_desc] NVARCHAR (512) NULL
);


GO
PRINT N'Creating [dbo].[USCounties]...';


GO
CREATE TABLE [dbo].[USCounties] (
    [ID]                INT            IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (MAX) NULL,
    [StateAbbreviation] NVARCHAR (MAX) NULL,
    [StateName]         NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_dbo.USCounties] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[user_files]...';


GO
CREATE TABLE [dbo].[user_files] (
    [elt_account_number] DECIMAL (8)    NOT NULL,
    [org_no]             DECIMAL (8)    NOT NULL,
    [file_name]          NVARCHAR (256) NOT NULL,
    [file_size]          DECIMAL (8)    NULL,
    [file_type]          NVARCHAR (128) NULL,
    [file_content]       IMAGE          NULL,
    [file_checked]       NCHAR (1)      NULL,
    [in_dt]              DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[user_prefix]...';


GO
CREATE TABLE [dbo].[user_prefix] (
    [elt_account_number] DECIMAL (8)   NULL,
    [branch]             INT           NULL,
    [seq_num]            INT           NULL,
    [prefix]             NVARCHAR (16) NULL,
    [type]               NVARCHAR (16) NULL,
    [next_no]            DECIMAL (9)   NULL,
    [desc]               NVARCHAR (64) NULL
);


GO
PRINT N'Creating [dbo].[user_profile]...';


GO
CREATE TABLE [dbo].[user_profile] (
    [elt_account_number]           DECIMAL (8)   NULL,
    [branch]                       INT           NULL,
    [invoice_prefix]               NVARCHAR (16) NULL,
    [next_invoice_no]              DECIMAL (9)   NULL,
    [default_invoice_date]         NVARCHAR (16) NULL,
    [next_check_no]                DECIMAL (9)   NULL,
    [uom]                          NVARCHAR (8)  NULL,
    [currency]                     NVARCHAR (4)  NULL,
    [default_cgs]                  DECIMAL (5)   NULL,
    [invoiceAttn]                  NVARCHAR (50) NULL,
    [default_asset]                DECIMAL (5)   NULL,
    [fiscalEndMonth]               NCHAR (2)     NULL,
    [default_air_charge_item]      DECIMAL (5)   NULL,
    [default_ocean_charge_item]    DECIMAL (5)   NULL,
    [default_air_cost_item]        DECIMAL (5)   NULL,
    [default_ocean_cost_item]      DECIMAL (5)   NULL,
    [default_domestic_charge_item] DECIMAL (5)   NULL,
    [uom_qty]                      NVARCHAR (16) NULL,
    [international_pdf]            NVARCHAR (1)  NULL,
    [default_invoice_term]         DECIMAL (18)  NULL,
    [sed_statement]                NTEXT         NULL
);


GO
PRINT N'Creating [dbo].[user_right]...';


GO
CREATE TABLE [dbo].[user_right] (
    [object_name] NVARCHAR (256) NULL,
    [user_right]  INT            NULL,
    [view_right]  INT            NULL
);


GO
PRINT N'Creating [dbo].[user_type]...';


GO
CREATE TABLE [dbo].[user_type] (
    [user_type] INT           NULL,
    [type_desc] NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[UserProfile]...';


GO
CREATE TABLE [dbo].[UserProfile] (
    [UserId]             INT           IDENTITY (1, 1) NOT NULL,
    [UserName]           NVARCHAR (56) NOT NULL,
    [elt_account_number] VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC),
    UNIQUE NONCLUSTERED ([UserName] ASC)
);


GO
PRINT N'Creating [dbo].[users]...';


GO
CREATE TABLE [dbo].[users] (
    [elt_account_number]      DECIMAL (8)    NOT NULL,
    [userid]                  DECIMAL (8)    NOT NULL,
    [user_type]               INT            NULL,
    [user_right]              INT            NULL,
    [login_name]              NVARCHAR (100) NOT NULL,
    [password]                NVARCHAR (16)  NULL,
    [org_acct]                DECIMAL (8)    NULL,
    [user_lname]              NVARCHAR (32)  NULL,
    [user_fname]              NVARCHAR (32)  NULL,
    [user_title]              NVARCHAR (32)  NULL,
    [user_address]            NVARCHAR (64)  NULL,
    [user_city]               NVARCHAR (32)  NULL,
    [user_state]              NVARCHAR (128) NULL,
    [user_zip]                NVARCHAR (32)  NULL,
    [user_country]            NVARCHAR (16)  NULL,
    [user_phone]              NVARCHAR (32)  NULL,
    [user_email]              NVARCHAR (64)  NULL,
    [create_date]             DATETIME       NULL,
    [pw_change_date]          DATETIME       NULL,
    [last_modified]           DATETIME       NULL,
    [last_login_date]         DATETIME       NULL,
    [default_warehouse]       INT            NULL,
    [awb_port]                NVARCHAR (32)  NULL,
    [bol_port]                NVARCHAR (32)  NULL,
    [sed_port]                NVARCHAR (32)  NULL,
    [invoice_port]            NVARCHAR (32)  NULL,
    [check_port]              NVARCHAR (32)  NULL,
    [shipping_label_port]     NVARCHAR (32)  NULL,
    [awb_queue]               NVARCHAR (128) NULL,
    [bol_queue]               NVARCHAR (128) NULL,
    [sed_queue]               NVARCHAR (128) NULL,
    [invoice_queue]           NVARCHAR (128) NULL,
    [check_queue]             NVARCHAR (128) NULL,
    [shipping_label_queue]    NVARCHAR (128) NULL,
    [ig_user_ssn]             NCHAR (9)      NULL,
    [ig_user_dob]             NCHAR (10)     NULL,
    [ig_user_cell]            NVARCHAR (32)  NULL,
    [ig_recent_work]          INT            NULL,
    [page_id]                 INT            NULL,
    [label_type]              DECIMAL (2)    NULL,
    [add_to_label]            NCHAR (1)      NULL,
    [awb_prn_name]            NVARCHAR (64)  NULL,
    [bol_prn_name]            NVARCHAR (64)  NULL,
    [sed_prn_name]            NVARCHAR (64)  NULL,
    [invoice_prn_name]        NVARCHAR (64)  NULL,
    [check_prn_name]          NVARCHAR (64)  NULL,
    [shipping_label_prn_name] NVARCHAR (64)  NULL,
    [is_org_merged]           NCHAR (1)      NULL,
    [page_tab_id]             DECIMAL (18)   NULL,
    CONSTRAINT [PK_users] PRIMARY KEY CLUSTERED ([elt_account_number] ASC, [login_name] ASC)
);


GO
PRINT N'Creating [dbo].[UserSession]...';


GO
CREATE TABLE [dbo].[UserSession] (
    [session_id]         NVARCHAR (50)  NULL,
    [elt_account_number] DECIMAL (8)    NULL,
    [ip]                 NVARCHAR (50)  NULL,
    [login_time]         DATETIME       NULL,
    [Requested_page]     NVARCHAR (100) NULL,
    [alive]              BIT            NULL,
    [login_name]         NVARCHAR (50)  NULL,
    [last_updated]       DATETIME       NULL,
    [kick_out_reason]    NVARCHAR (500) NULL
);


GO
PRINT N'Creating [dbo].[UserType_Tab_Ref]...';


GO
CREATE TABLE [dbo].[UserType_Tab_Ref] (
    [ID]        DECIMAL (18) IDENTITY (1, 1) NOT NULL,
    [User_type] INT          NOT NULL,
    [page_id]   INT          NOT NULL
);


GO
PRINT N'Creating [dbo].[view_login]...';


GO
CREATE TABLE [dbo].[view_login] (
    [session_id]              NVARCHAR (50)  NULL,
    [elt_account_number]      DECIMAL (8)    NULL,
    [user_id]                 NVARCHAR (50)  NULL,
    [user_name]               NVARCHAR (50)  NULL,
    [ip]                      NVARCHAR (50)  NULL,
    [server_name]             NVARCHAR (50)  NULL,
    [login_time]              NVARCHAR (50)  NULL,
    [u_time]                  NVARCHAR (50)  NULL,
    [logout]                  INT            NULL,
    [Requested_page]          NVARCHAR (100) NULL,
    [alive]                   INT            NULL,
    [user_type]               INT            NULL,
    [user_right]              INT            NULL,
    [login_name]              NVARCHAR (16)  NULL,
    [password]                NVARCHAR (16)  NULL,
    [org_acct]                DECIMAL (8)    NULL,
    [user_lname]              NVARCHAR (32)  NULL,
    [user_fname]              NVARCHAR (32)  NULL,
    [user_title]              NVARCHAR (32)  NULL,
    [user_address]            NVARCHAR (64)  NULL,
    [user_city]               NVARCHAR (32)  NULL,
    [user_state]              NVARCHAR (128) NULL,
    [user_zip]                NVARCHAR (32)  NULL,
    [user_country]            NVARCHAR (32)  NULL,
    [user_phone]              NVARCHAR (32)  NULL,
    [user_email]              NVARCHAR (64)  NULL,
    [create_date]             DATETIME       NULL,
    [pw_change_date]          DATETIME       NULL,
    [last_modified]           DATETIME       NULL,
    [last_login_date]         DATETIME       NULL,
    [default_warehouse]       INT            NULL,
    [awb_port]                NVARCHAR (32)  NULL,
    [bol_port]                NVARCHAR (32)  NULL,
    [sed_port]                NVARCHAR (32)  NULL,
    [invoice_port]            NVARCHAR (32)  NULL,
    [check_port]              NVARCHAR (32)  NULL,
    [shipping_label_port]     NVARCHAR (32)  NULL,
    [awb_queue]               NVARCHAR (128) NULL,
    [bol_queue]               NVARCHAR (128) NULL,
    [sed_queue]               NVARCHAR (128) NULL,
    [invoice_queue]           NVARCHAR (128) NULL,
    [check_queue]             NVARCHAR (128) NULL,
    [shipping_label_queue]    NVARCHAR (128) NULL,
    [ig_user_ssn]             NCHAR (9)      NULL,
    [ig_user_dob]             NCHAR (10)     NULL,
    [ig_user_cell]            NVARCHAR (16)  NULL,
    [ig_recent_work]          INT            NULL,
    [intIP]                   NVARCHAR (64)  NULL,
    [awb_prn_name]            NVARCHAR (64)  NULL,
    [bol_prn_name]            NVARCHAR (64)  NULL,
    [sed_prn_name]            NVARCHAR (64)  NULL,
    [invoice_prn_name]        NVARCHAR (64)  NULL,
    [check_prn_name]          NVARCHAR (64)  NULL,
    [shipping_label_prn_name] NVARCHAR (64)  NULL,
    [kick_out_reason]         NVARCHAR (500) NULL
);


GO
PRINT N'Creating [dbo].[warehouse_history]...';


GO
CREATE TABLE [dbo].[warehouse_history] (
    [auto_uid]           DECIMAL (18)  IDENTITY (1, 1) NOT NULL,
    [wr_num]             NVARCHAR (64) NULL,
    [so_num]             NVARCHAR (64) NULL,
    [elt_account_number] DECIMAL (18)  NULL,
    [history_type]       NVARCHAR (32) NULL,
    [history_date]       DATETIME      NULL,
    [item_piece_remain]  DECIMAL (18)  NULL,
    [item_piece_origin]  DECIMAL (18)  NULL,
    [item_piece_shipout] DECIMAL (18)  NULL
);


GO
PRINT N'Creating [dbo].[warehouse_receipt]...';


GO
CREATE TABLE [dbo].[warehouse_receipt] (
    [auto_uid]             DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [wr_num]               NVARCHAR (64)   NULL,
    [elt_account_number]   DECIMAL (18)    NULL,
    [carrier_ref_no]       NVARCHAR (64)   NULL,
    [customer_ref_no]      NVARCHAR (64)   NULL,
    [system_date]          DATETIME        NULL,
    [created_date]         DATETIME        NULL,
    [received_date]        DATETIME        NULL,
    [pickup_date]          DATETIME        NULL,
    [storage_date]         DATETIME        NULL,
    [shipper_acct]         DECIMAL (18)    NULL,
    [shipper_contact]      NVARCHAR (128)  NULL,
    [customer_acct]        DECIMAL (18)    NULL,
    [customer_contact]     NVARCHAR (128)  NULL,
    [trucker_acct]         DECIMAL (18)    NULL,
    [inland_amount]        DECIMAL (16, 2) NULL,
    [inland_type]          NVARCHAR (1)    NULL,
    [danger_good]          NVARCHAR (1)    NULL,
    [handling_info]        NTEXT           NULL,
    [item_piece_origin]    DECIMAL (18)    NULL,
    [item_piece_remain]    DECIMAL (18)    NULL,
    [item_desc]            NTEXT           NULL,
    [item_weight]          DECIMAL (16, 2) NULL,
    [item_weight_scale]    NVARCHAR (3)    NULL,
    [item_dimension]       NVARCHAR (128)  NULL,
    [item_dimension_scale] NVARCHAR (3)    NULL,
    [item_remark]          NTEXT           NULL,
    [job_status]           NVARCHAR (64)   NULL,
    [PO_NO]                NVARCHAR (64)   NULL
);


GO
PRINT N'Creating [dbo].[warehouse_shipout]...';


GO
CREATE TABLE [dbo].[warehouse_shipout] (
    [auto_uid]             DECIMAL (18)    IDENTITY (1, 1) NOT NULL,
    [so_num]               NVARCHAR (64)   NULL,
    [wr_num]               NVARCHAR (64)   NULL,
    [elt_account_number]   DECIMAL (18)    NULL,
    [carrier_ref_no]       NVARCHAR (64)   NULL,
    [customer_ref_no]      NVARCHAR (64)   NULL,
    [system_date]          DATETIME        NULL,
    [created_date]         DATETIME        NULL,
    [received_date]        DATETIME        NULL,
    [shipout_date]         DATETIME        NULL,
    [consignee_acct]       DECIMAL (18)    NULL,
    [customer_acct]        DECIMAL (18)    NULL,
    [consignee_contact]    NVARCHAR (128)  NULL,
    [customer_contact]     NVARCHAR (128)  NULL,
    [trucker_acct]         DECIMAL (18)    NULL,
    [inland_amount]        DECIMAL (16, 2) NULL,
    [inland_type]          NVARCHAR (1)    NULL,
    [danger_good]          NVARCHAR (1)    NULL,
    [other_info]           NTEXT           NULL,
    [item_piece_shipout]   DECIMAL (18)    NULL,
    [item_desc]            NTEXT           NULL,
    [item_weight]          DECIMAL (16, 2) NULL,
    [item_weight_scale]    NVARCHAR (3)    NULL,
    [item_dimension]       NVARCHAR (128)  NULL,
    [item_dimension_scale] NVARCHAR (3)    NULL,
    [item_remark]          NTEXT           NULL,
    [shipout_status]       NVARCHAR (32)   NULL,
    [PO_NO]                NVARCHAR (64)   NULL,
    [file_type]            NVARCHAR (2)    NULL,
    [house_num]            NVARCHAR (128)  NULL,
    [master_num]           NVARCHAR (128)  NULL,
    [shipper_info]         NVARCHAR (500)  NULL
);


GO
PRINT N'Creating [dbo].[webpages_Membership]...';


GO
CREATE TABLE [dbo].[webpages_Membership] (
    [UserId]                                  INT            NOT NULL,
    [CreateDate]                              DATETIME       NULL,
    [ConfirmationToken]                       NVARCHAR (128) NULL,
    [IsConfirmed]                             BIT            NULL,
    [LastPasswordFailureDate]                 DATETIME       NULL,
    [PasswordFailuresSinceLastSuccess]        INT            NOT NULL,
    [Password]                                NVARCHAR (128) NOT NULL,
    [PasswordChangedDate]                     DATETIME       NULL,
    [PasswordSalt]                            NVARCHAR (128) NOT NULL,
    [PasswordVerificationToken]               NVARCHAR (128) NULL,
    [PasswordVerificationTokenExpirationDate] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[webpages_OAuthMembership]...';


GO
CREATE TABLE [dbo].[webpages_OAuthMembership] (
    [Provider]       NVARCHAR (30)  NOT NULL,
    [ProviderUserId] NVARCHAR (100) NOT NULL,
    [UserId]         INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Provider] ASC, [ProviderUserId] ASC)
);


GO
PRINT N'Creating [dbo].[webpages_Roles]...';


GO
CREATE TABLE [dbo].[webpages_Roles] (
    [RoleId]   INT            IDENTITY (1, 1) NOT NULL,
    [RoleName] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC),
    UNIQUE NONCLUSTERED ([RoleName] ASC)
);


GO
PRINT N'Creating [dbo].[webpages_UsersInRoles]...';


GO
CREATE TABLE [dbo].[webpages_UsersInRoles] (
    [UserId] INT NOT NULL,
    [RoleId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[DF__agent__is_dome__27E3DFFF]...';


GO
ALTER TABLE [dbo].[agent]
    ADD CONSTRAINT [DF__agent__is_dome__27E3DFFF] DEFAULT ('N') FOR [is_dome];


GO
PRINT N'Creating [dbo].[DF__agent__is_intl__28D80438]...';


GO
ALTER TABLE [dbo].[agent]
    ADD CONSTRAINT [DF__agent__is_intl__28D80438] DEFAULT ('Y') FOR [is_intl];


GO
PRINT N'Creating [dbo].[DF__agent__is_cartag__5B638405]...';


GO
ALTER TABLE [dbo].[agent]
    ADD CONSTRAINT [DF__agent__is_cartag__5B638405] DEFAULT ('N') FOR [is_cartage];


GO
PRINT N'Creating [dbo].[DF__agent__is_AES__477199F1]...';


GO
ALTER TABLE [dbo].[agent]
    ADD CONSTRAINT [DF__agent__is_AES__477199F1] DEFAULT ('N') FOR [is_exporter];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_tran_date]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_tran_date] DEFAULT (getdate()) FOR [tran_date];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_customer_number]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_customer_number] DEFAULT (0) FOR [customer_number];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_check_no]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_check_no] DEFAULT (0) FOR [check_no];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_debit_amount]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_debit_amount] DEFAULT (0) FOR [debit_amount];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_credit_amount]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_credit_amount] DEFAULT (0) FOR [credit_amount];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_balance]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_balance] DEFAULT (0) FOR [balance];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_previous_balance]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_previous_balance] DEFAULT (0) FOR [previous_balance];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_gl_balance]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_gl_balance] DEFAULT (0) FOR [gl_balance];


GO
PRINT N'Creating [dbo].[DF_all_accounts_journal_gl_previous_balance]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF_all_accounts_journal_gl_previous_balance] DEFAULT (0) FOR [gl_previous_balance];


GO
PRINT N'Creating [dbo].[DF__all_accou__adjus__4D7F7902]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF__all_accou__adjus__4D7F7902] DEFAULT (0) FOR [adjust_amount];


GO
PRINT N'Creating [dbo].[DF__all_accou__debit__4E739D3B]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF__all_accou__debit__4E739D3B] DEFAULT (0) FOR [debit_memo];


GO
PRINT N'Creating [dbo].[DF__all_accou__credi__4F67C174]...';


GO
ALTER TABLE [dbo].[all_accounts_journal]
    ADD CONSTRAINT [DF__all_accou__credi__4F67C174] DEFAULT (0) FOR [credit_memo];


GO
PRINT N'Creating [dbo].[DF_all_rate_table_rate_table_id]...';


GO
ALTER TABLE [dbo].[all_rate_table]
    ADD CONSTRAINT [DF_all_rate_table_rate_table_id] DEFAULT ((1)) FOR [rate_table_id];


GO
PRINT N'Creating [dbo].[DF_bill_bill_amt]...';


GO
ALTER TABLE [dbo].[bill]
    ADD CONSTRAINT [DF_bill_bill_amt] DEFAULT (0) FOR [bill_amt];


GO
PRINT N'Creating [dbo].[DF_bill_bill_amt_paid]...';


GO
ALTER TABLE [dbo].[bill]
    ADD CONSTRAINT [DF_bill_bill_amt_paid] DEFAULT (0) FOR [bill_amt_paid];


GO
PRINT N'Creating [dbo].[DF_bill_bill_amt_due]...';


GO
ALTER TABLE [dbo].[bill]
    ADD CONSTRAINT [DF_bill_bill_amt_due] DEFAULT (0) FOR [bill_amt_due];


GO
PRINT N'Creating [dbo].[DF_bill_lock]...';


GO
ALTER TABLE [dbo].[bill]
    ADD CONSTRAINT [DF_bill_lock] DEFAULT ('N') FOR [lock];


GO
PRINT N'Creating [dbo].[DF_bill_detail_invoice_no]...';


GO
ALTER TABLE [dbo].[bill_detail]
    ADD CONSTRAINT [DF_bill_detail_invoice_no] DEFAULT (0) FOR [invoice_no];


GO
PRINT N'Creating [dbo].[DF_bill_detail_is_manual]...';


GO
ALTER TABLE [dbo].[bill_detail]
    ADD CONSTRAINT [DF_bill_detail_is_manual] DEFAULT ('N') FOR [is_manual];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_elt_account_number]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_request_id]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_request_id] DEFAULT (0) FOR [request_id];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_import_agent_elt_acct]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_import_agent_elt_acct] DEFAULT (0) FOR [import_agent_elt_acct];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_shipper_acct]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_shipper_acct] DEFAULT (0) FOR [shipper_acct];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_consignee_import_acct]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_consignee_import_acct] DEFAULT (0) FOR [consignee_import_acct];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_pieces]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_pieces] DEFAULT (0) FOR [pieces];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_chg_wt]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_chg_wt] DEFAULT (0) FOR [chg_wt];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_gross_wt]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_gross_wt] DEFAULT (0) FOR [gross_wt];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_dims]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_dims] DEFAULT (0) FOR [dims];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_invoice_no]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_invoice_no] DEFAULT (0) FOR [invoice_no];


GO
PRINT N'Creating [dbo].[DF_cargo_tracking_it_number]...';


GO
ALTER TABLE [dbo].[cargo_tracking]
    ADD CONSTRAINT [DF_cargo_tracking_it_number] DEFAULT (0) FOR [it_number];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_air_anonymous]...';


GO
ALTER TABLE [dbo].[certificate_origin_air]
    ADD CONSTRAINT [DF_certificate_origin_air_anonymous] DEFAULT ('N') FOR [anonymous];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_air_items_gross_weight]...';


GO
ALTER TABLE [dbo].[certificate_origin_air_items]
    ADD CONSTRAINT [DF_certificate_origin_air_items_gross_weight] DEFAULT (0) FOR [gross_weight];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_air_items_measurement]...';


GO
ALTER TABLE [dbo].[certificate_origin_air_items]
    ADD CONSTRAINT [DF_certificate_origin_air_items_measurement] DEFAULT (0) FOR [measurement];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_ocean_anonymous]...';


GO
ALTER TABLE [dbo].[certificate_origin_ocean]
    ADD CONSTRAINT [DF_certificate_origin_ocean_anonymous] DEFAULT ('N') FOR [anonymous];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_items_gross_weight]...';


GO
ALTER TABLE [dbo].[certificate_origin_ocean_items]
    ADD CONSTRAINT [DF_certificate_origin_items_gross_weight] DEFAULT ((0)) FOR [gross_weight];


GO
PRINT N'Creating [dbo].[DF_certificate_origin_items_measurement]...';


GO
ALTER TABLE [dbo].[certificate_origin_ocean_items]
    ADD CONSTRAINT [DF_certificate_origin_items_measurement] DEFAULT ((0)) FOR [measurement];


GO
PRINT N'Creating [dbo].[DF_check_detail_elt_account_number]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_check_detail_print_id]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_print_id] DEFAULT (0) FOR [print_id];


GO
PRINT N'Creating [dbo].[DF_check_detail_bill_number]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_bill_number] DEFAULT (0) FOR [bill_number];


GO
PRINT N'Creating [dbo].[DF_check_detail_bill_amt]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_bill_amt] DEFAULT (0) FOR [bill_amt];


GO
PRINT N'Creating [dbo].[DF_check_detail_amt_due]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_amt_due] DEFAULT (0) FOR [amt_due];


GO
PRINT N'Creating [dbo].[DF_check_detail_amt_paid]...';


GO
ALTER TABLE [dbo].[check_detail]
    ADD CONSTRAINT [DF_check_detail_amt_paid] DEFAULT (0) FOR [amt_paid];


GO
PRINT N'Creating [dbo].[DF_check_queue_check_type]...';


GO
ALTER TABLE [dbo].[check_queue]
    ADD CONSTRAINT [DF_check_queue_check_type] DEFAULT ('BP') FOR [check_type];


GO
PRINT N'Creating [dbo].[DF_check_queue_ap]...';


GO
ALTER TABLE [dbo].[check_queue]
    ADD CONSTRAINT [DF_check_queue_ap] DEFAULT (0) FOR [ap];


GO
PRINT N'Creating [dbo].[check_queue_bill_due_date]...';


GO
ALTER TABLE [dbo].[check_queue]
    ADD CONSTRAINT [check_queue_bill_due_date] DEFAULT (getdate()) FOR [bill_due_date];


GO
PRINT N'Creating [dbo].[DF_customer_credits_elt_account_number]...';


GO
ALTER TABLE [dbo].[customer_credits]
    ADD CONSTRAINT [DF_customer_credits_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_customer_credits_credit]...';


GO
ALTER TABLE [dbo].[customer_credits]
    ADD CONSTRAINT [DF_customer_credits_credit] DEFAULT (0) FOR [credit];


GO
PRINT N'Creating [dbo].[DF_customer_payment_elt_account_number]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_customer_payment_branch]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_branch] DEFAULT (0) FOR [branch];


GO
PRINT N'Creating [dbo].[DF_customer_payment_payment_no]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_payment_no] DEFAULT (0) FOR [payment_no];


GO
PRINT N'Creating [dbo].[DF_customer_payment_customer_number]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_customer_number] DEFAULT (0) FOR [customer_number];


GO
PRINT N'Creating [dbo].[DF_customer_payment_third_party_number]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_third_party_number] DEFAULT (0) FOR [third_party_number];


GO
PRINT N'Creating [dbo].[DF_customer_payment_accounts_receivable]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_accounts_receivable] DEFAULT (0) FOR [accounts_receivable];


GO
PRINT N'Creating [dbo].[DF_customer_payment_deposit_to]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_deposit_to] DEFAULT (0) FOR [deposit_to];


GO
PRINT N'Creating [dbo].[DF_customer_payment_received_amt]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_received_amt] DEFAULT (0) FOR [received_amt];


GO
PRINT N'Creating [dbo].[DF_customer_payment_balance]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_balance] DEFAULT (0) FOR [balance];


GO
PRINT N'Creating [dbo].[DF_customer_payment_existing_credits]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_existing_credits] DEFAULT (0) FOR [existing_credits];


GO
PRINT N'Creating [dbo].[DF_customer_payment_unapplied_amt]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_unapplied_amt] DEFAULT (0) FOR [unapplied_amt];


GO
PRINT N'Creating [dbo].[DF_customer_payment_added_amt]...';


GO
ALTER TABLE [dbo].[customer_payment]
    ADD CONSTRAINT [DF_customer_payment_added_amt] DEFAULT (0) FOR [added_amt];


GO
PRINT N'Creating [dbo].[DF_delivery_order_anonymous]...';


GO
ALTER TABLE [dbo].[delivery_order]
    ADD CONSTRAINT [DF_delivery_order_anonymous] DEFAULT ('N') FOR [anonymous];


GO
PRINT N'Creating [dbo].[DF_eli_back_is_colodee]...';


GO
ALTER TABLE [dbo].[eli_back]
    ADD CONSTRAINT [DF_eli_back_is_colodee] DEFAULT ('N') FOR [is_colodee];


GO
PRINT N'Creating [dbo].[DF_flight_no_elt_account_number]...';


GO
ALTER TABLE [dbo].[flight_no]
    ADD CONSTRAINT [DF_flight_no_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_flight_no_airline_code]...';


GO
ALTER TABLE [dbo].[flight_no]
    ADD CONSTRAINT [DF_flight_no_airline_code] DEFAULT (0) FOR [airline_code];


GO
PRINT N'Creating [dbo].[DF_gl_gl_begin_balance]...';


GO
ALTER TABLE [dbo].[gl]
    ADD CONSTRAINT [DF_gl_gl_begin_balance] DEFAULT (0) FOR [gl_begin_balance];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_af_cost]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_af_cost] DEFAULT (0) FOR [af_cost];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_agent_profit]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_agent_profit] DEFAULT (0) FOR [agent_profit];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_agent_profit_share]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_agent_profit_share] DEFAULT (0) FOR [agent_profit_share];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_other_agent_profit_carrier]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_other_agent_profit_carrier] DEFAULT (0) FOR [other_agent_profit_carrier];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_other_agent_profit_agent]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_other_agent_profit_agent] DEFAULT (0) FOR [other_agent_profit_agent];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_colo]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF_HAWB_master_colo] DEFAULT ('N') FOR [colo];


GO
PRINT N'Creating [dbo].[DF__hawb_mast__is_do__25077354]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF__hawb_mast__is_do__25077354] DEFAULT ('N') FOR [is_dome];


GO
PRINT N'Creating [dbo].[DF__HAWB_mast__show___5792F321]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF__HAWB_mast__show___5792F321] DEFAULT ('Y') FOR [show_weight_charge_rate];


GO
PRINT N'Creating [dbo].[DF__HAWB_mast__show___5887175A]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF__HAWB_mast__show___5887175A] DEFAULT ('Y') FOR [show_other_charge_rate];


GO
PRINT N'Creating [dbo].[DF__hawb_mast__is_ag__5C57A83E]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF__hawb_mast__is_ag__5C57A83E] DEFAULT ('N') FOR [is_agent_house];


GO
PRINT N'Creating [dbo].[DF__hawb_mast__is_in__67C95AEA]...';


GO
ALTER TABLE [dbo].[HAWB_master]
    ADD CONSTRAINT [DF__hawb_mast__is_in__67C95AEA] DEFAULT ('N') FOR [is_inbound];


GO
PRINT N'Creating [dbo].[DF_HAWB_master_add_is_agent_house]...';


GO
ALTER TABLE [dbo].[HAWB_master_add]
    ADD CONSTRAINT [DF_HAWB_master_add_is_agent_house] DEFAULT ('N') FOR [is_agent_house];


GO
PRINT N'Creating [dbo].[DF__hawb_othe__invoi__5F3414E9]...';


GO
ALTER TABLE [dbo].[hawb_Other_Charge]
    ADD CONSTRAINT [DF__hawb_othe__invoi__5F3414E9] DEFAULT ('N') FOR [invoice_only];


GO
PRINT N'Creating [dbo].[DF__hawb_weig__invoi__66D536B1]...';


GO
ALTER TABLE [dbo].[hawb_weight_charge]
    ADD CONSTRAINT [DF__hawb_weig__invoi__66D536B1] DEFAULT ('N') FOR [invoice_only];


GO
PRINT N'Creating [dbo].[DF_iHAWB_master_agent_bbk]...';


GO
ALTER TABLE [dbo].[iHAWB_master]
    ADD CONSTRAINT [DF_iHAWB_master_agent_bbk] DEFAULT (0) FOR [agent_bbk];


GO
PRINT N'Creating [dbo].[DF_iHAWB_master_agent_profit_share]...';


GO
ALTER TABLE [dbo].[iHAWB_master]
    ADD CONSTRAINT [DF_iHAWB_master_agent_profit_share] DEFAULT (0) FOR [agent_profit_share];


GO
PRINT N'Creating [dbo].[DF_iHAWB_master_agent_others]...';


GO
ALTER TABLE [dbo].[iHAWB_master]
    ADD CONSTRAINT [DF_iHAWB_master_agent_others] DEFAULT (0) FOR [agent_others];


GO
PRINT N'Creating [dbo].[DF_ihbol_master_agent_bbk]...';


GO
ALTER TABLE [dbo].[ihbol_master]
    ADD CONSTRAINT [DF_ihbol_master_agent_bbk] DEFAULT (0) FOR [agent_bbk];


GO
PRINT N'Creating [dbo].[DF_ihbol_master_agent_profit_share]...';


GO
ALTER TABLE [dbo].[ihbol_master]
    ADD CONSTRAINT [DF_ihbol_master_agent_profit_share] DEFAULT (0) FOR [agent_profit_share];


GO
PRINT N'Creating [dbo].[DF_ihbol_master_agent_others]...';


GO
ALTER TABLE [dbo].[ihbol_master]
    ADD CONSTRAINT [DF_ihbol_master_agent_others] DEFAULT (0) FOR [agent_others];


GO
PRINT N'Creating [dbo].[DF_ihbol_master_prepaid_invoiced]...';


GO
ALTER TABLE [dbo].[ihbol_master]
    ADD CONSTRAINT [DF_ihbol_master_prepaid_invoiced] DEFAULT ('N') FOR [prepaid_invoiced];


GO
PRINT N'Creating [dbo].[DF_ihbol_master_collect_invoiced]...';


GO
ALTER TABLE [dbo].[ihbol_master]
    ADD CONSTRAINT [DF_ihbol_master_collect_invoiced] DEFAULT ('N') FOR [collect_invoiced];


GO
PRINT N'Creating [dbo].[DF_import_hawb_invoice_no]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_invoice_no] DEFAULT (0) FOR [invoice_no];


GO
PRINT N'Creating [dbo].[DF_import_hawb_shipper_acct]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_shipper_acct] DEFAULT (0) FOR [shipper_acct];


GO
PRINT N'Creating [dbo].[DF_import_hawb_consignee_acct]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_consignee_acct] DEFAULT (0) FOR [consignee_acct];


GO
PRINT N'Creating [dbo].[DF_import_hawb_notify_acct]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_notify_acct] DEFAULT (0) FOR [notify_acct];


GO
PRINT N'Creating [dbo].[DF_import_hawb_broker_acct]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_broker_acct] DEFAULT (0) FOR [broker_acct];


GO
PRINT N'Creating [dbo].[DF_import_hawb_pieces]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_pieces] DEFAULT (0) FOR [pieces];


GO
PRINT N'Creating [dbo].[DF_import_hawb_gross_wt]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_gross_wt] DEFAULT (0) FOR [gross_wt];


GO
PRINT N'Creating [dbo].[DF_import_hawb_chg_wt]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_chg_wt] DEFAULT (0) FOR [chg_wt];


GO
PRINT N'Creating [dbo].[DF_import_hawb_freight_collect]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_freight_collect] DEFAULT (0) FOR [freight_collect];


GO
PRINT N'Creating [dbo].[DF_import_hawb_oc_collect]...';


GO
ALTER TABLE [dbo].[import_hawb]
    ADD CONSTRAINT [DF_import_hawb_oc_collect] DEFAULT (0) FOR [oc_collect];


GO
PRINT N'Creating [dbo].[DF_import_mawb_agent_org_acct]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_agent_org_acct] DEFAULT (0) FOR [agent_org_acct];


GO
PRINT N'Creating [dbo].[DF_import_mawb_processed]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_processed] DEFAULT ('N') FOR [processed];


GO
PRINT N'Creating [dbo].[DF_import_mawb_pieces]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_pieces] DEFAULT (0) FOR [pieces];


GO
PRINT N'Creating [dbo].[DF_import_mawb_gross_wt]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_gross_wt] DEFAULT (0) FOR [gross_wt];


GO
PRINT N'Creating [dbo].[DF_import_mawb_chg_wt]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_chg_wt] DEFAULT (0) FOR [chg_wt];


GO
PRINT N'Creating [dbo].[DF_import_mawb_agent_debit_amt]...';


GO
ALTER TABLE [dbo].[import_mawb]
    ADD CONSTRAINT [DF_import_mawb_agent_debit_amt] DEFAULT (0) FOR [agent_debit_amt];


GO
PRINT N'Creating [dbo].[DF_invoice_pay_status]...';


GO
ALTER TABLE [dbo].[invoice]
    ADD CONSTRAINT [DF_invoice_pay_status] DEFAULT ('A') FOR [pay_status];


GO
PRINT N'Creating [dbo].[DF_invoice_lock_ar]...';


GO
ALTER TABLE [dbo].[invoice]
    ADD CONSTRAINT [DF_invoice_lock_ar] DEFAULT ('N') FOR [lock_ar];


GO
PRINT N'Creating [dbo].[DF_invoice_lock_ap]...';


GO
ALTER TABLE [dbo].[invoice]
    ADD CONSTRAINT [DF_invoice_lock_ap] DEFAULT ('N') FOR [lock_ap];


GO
PRINT N'Creating [dbo].[DF_invoice_queue_elt_account_number]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF_invoice_queue_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_invoice_queue_queue_id]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF_invoice_queue_queue_id] DEFAULT (0) FOR [queue_id];


GO
PRINT N'Creating [dbo].[DF_invoice_queue_bill_to_org_acct]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF_invoice_queue_bill_to_org_acct] DEFAULT (0) FOR [bill_to_org_acct];


GO
PRINT N'Creating [dbo].[DF_invoice_queue_agent_org_acct]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF_invoice_queue_agent_org_acct] DEFAULT (0) FOR [agent_org_acct];


GO
PRINT N'Creating [dbo].[DF_invoice_queue_master_only]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF_invoice_queue_master_only] DEFAULT ('N') FOR [master_only];


GO
PRINT N'Creating [dbo].[DF__invoice_q__is_do__475C8B58]...';


GO
ALTER TABLE [dbo].[invoice_queue]
    ADD CONSTRAINT [DF__invoice_q__is_do__475C8B58] DEFAULT ('N') FOR [is_dome];


GO
PRINT N'Creating [dbo].[DF_invoice_tmp_lock_ar]...';


GO
ALTER TABLE [dbo].[invoice_tmp]
    ADD CONSTRAINT [DF_invoice_tmp_lock_ar] DEFAULT ('N') FOR [lock_ar];


GO
PRINT N'Creating [dbo].[DF_invoice_tmp_lock_ap]...';


GO
ALTER TABLE [dbo].[invoice_tmp]
    ADD CONSTRAINT [DF_invoice_tmp_lock_ap] DEFAULT ('N') FOR [lock_ap];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_total_chargeable_weight]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_total_chargeable_weight] DEFAULT (0) FOR [total_chargeable_weight];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Weight_Charge_Shipper]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Weight_Charge_Shipper] DEFAULT ('Y') FOR [Show_Weight_Charge_Shipper];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Weight_Charge_Consignee]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Weight_Charge_Consignee] DEFAULT ('Y') FOR [Show_Weight_Charge_Consignee];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Prepaid_Other_Charge_Shipper]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Prepaid_Other_Charge_Shipper] DEFAULT ('Y') FOR [Show_Prepaid_Other_Charge_Shipper];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Collect_Other_Charge_Shipper]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Collect_Other_Charge_Shipper] DEFAULT ('Y') FOR [Show_Collect_Other_Charge_Shipper];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Prepaid_Other_Charge_Consignee]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Prepaid_Other_Charge_Consignee] DEFAULT ('Y') FOR [Show_Prepaid_Other_Charge_Consignee];


GO
PRINT N'Creating [dbo].[DF_MAWB_MASTER_Show_Collect_Other_Charge_Consignee]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF_MAWB_MASTER_Show_Collect_Other_Charge_Consignee] DEFAULT ('Y') FOR [Show_Collect_Other_Charge_Consignee];


GO
PRINT N'Creating [dbo].[DF__mawb_mast__is_do__25FB978D]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF__mawb_mast__is_do__25FB978D] DEFAULT ('N') FOR [is_dome];


GO
PRINT N'Creating [dbo].[DF__mawb_mast__is_in__597B3B93]...';


GO
ALTER TABLE [dbo].[MAWB_MASTER]
    ADD CONSTRAINT [DF__mawb_mast__is_in__597B3B93] DEFAULT ('N') FOR [is_inbound];


GO
PRINT N'Creating [dbo].[DF_MAWB_NUMBER_Status]...';


GO
ALTER TABLE [dbo].[MAWB_NUMBER]
    ADD CONSTRAINT [DF_MAWB_NUMBER_Status] DEFAULT ('A') FOR [Status];


GO
PRINT N'Creating [dbo].[DF_MAWB_NUMBER_used]...';


GO
ALTER TABLE [dbo].[MAWB_NUMBER]
    ADD CONSTRAINT [DF_MAWB_NUMBER_used] DEFAULT ('N') FOR [used];


GO
PRINT N'Creating [dbo].[DF__mawb_numb__is_do__26EFBBC6]...';


GO
ALTER TABLE [dbo].[MAWB_NUMBER]
    ADD CONSTRAINT [DF__mawb_numb__is_do__26EFBBC6] DEFAULT ('N') FOR [is_dome];


GO
PRINT N'Creating [dbo].[DF__mawb_numb__is_in__5A6F5FCC]...';


GO
ALTER TABLE [dbo].[MAWB_NUMBER]
    ADD CONSTRAINT [DF__mawb_numb__is_in__5A6F5FCC] DEFAULT ('N') FOR [is_inbound];


GO
PRINT N'Creating [dbo].[DF_ocean_booking_number_carrier_code]...';


GO
ALTER TABLE [dbo].[ocean_booking_number]
    ADD CONSTRAINT [DF_ocean_booking_number_carrier_code] DEFAULT (0) FOR [carrier_code];


GO
PRINT N'Creating [dbo].[DF_organization_is_colodee]...';


GO
ALTER TABLE [dbo].[organization]
    ADD CONSTRAINT [DF_organization_is_colodee] DEFAULT ('N') FOR [is_coloader];


GO
PRINT N'Creating [dbo].[DF_PageUserAccess_is_bloked]...';


GO
ALTER TABLE [dbo].[page_user_access]
    ADD CONSTRAINT [DF_PageUserAccess_is_bloked] DEFAULT ((0)) FOR [is_bloked];


GO
PRINT N'Creating [dbo].[DF_payment_due_create_date]...';


GO
ALTER TABLE [dbo].[payment_due]
    ADD CONSTRAINT [DF_payment_due_create_date] DEFAULT (getdate()) FOR [create_date];


GO
PRINT N'Creating [dbo].[DF_payment_due_auth_date]...';


GO
ALTER TABLE [dbo].[payment_due]
    ADD CONSTRAINT [DF_payment_due_auth_date] DEFAULT (getdate()) FOR [auth_date];


GO
PRINT N'Creating [dbo].[DF_pickup_order_anonymous]...';


GO
ALTER TABLE [dbo].[pickup_order]
    ADD CONSTRAINT [DF_pickup_order_anonymous] DEFAULT ('N') FOR [anonymous];


GO
PRINT N'Creating [dbo].[DF_tab_master_page_status]...';


GO
ALTER TABLE [dbo].[tab_master]
    ADD CONSTRAINT [DF_tab_master_page_status] DEFAULT ('N') FOR [page_status];


GO
PRINT N'Creating [dbo].[DF_tab_master_access_level]...';


GO
ALTER TABLE [dbo].[tab_master]
    ADD CONSTRAINT [DF_tab_master_access_level] DEFAULT ('ALL') FOR [access_level];


GO
PRINT N'Creating [dbo].[DF_user_prefix_next_no]...';


GO
ALTER TABLE [dbo].[user_prefix]
    ADD CONSTRAINT [DF_user_prefix_next_no] DEFAULT (1) FOR [next_no];


GO
PRINT N'Creating [dbo].[DF_user_profile_elt_account_number]...';


GO
ALTER TABLE [dbo].[user_profile]
    ADD CONSTRAINT [DF_user_profile_elt_account_number] DEFAULT (0) FOR [elt_account_number];


GO
PRINT N'Creating [dbo].[DF_user_profile_branch]...';


GO
ALTER TABLE [dbo].[user_profile]
    ADD CONSTRAINT [DF_user_profile_branch] DEFAULT (0) FOR [branch];


GO
PRINT N'Creating [dbo].[DF_user_profile_next_invoice_no]...';


GO
ALTER TABLE [dbo].[user_profile]
    ADD CONSTRAINT [DF_user_profile_next_invoice_no] DEFAULT (1) FOR [next_invoice_no];


GO
PRINT N'Creating [dbo].[DF_user_profile_next_check_no]...';


GO
ALTER TABLE [dbo].[user_profile]
    ADD CONSTRAINT [DF_user_profile_next_check_no] DEFAULT (1) FOR [next_check_no];


GO
PRINT N'Creating [dbo].[DF__user_prof__inter__5B837F96]...';


GO
ALTER TABLE [dbo].[user_profile]
    ADD CONSTRAINT [DF__user_prof__inter__5B837F96] DEFAULT ('N') FOR [international_pdf];


GO
PRINT N'Creating [dbo].[DF_user_right_user_right]...';


GO
ALTER TABLE [dbo].[user_right]
    ADD CONSTRAINT [DF_user_right_user_right] DEFAULT (0) FOR [user_right];


GO
PRINT N'Creating [dbo].[DF_users_org_acct]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_org_acct] DEFAULT (0) FOR [org_acct];


GO
PRINT N'Creating [dbo].[DF_users_default_warehouse]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_default_warehouse] DEFAULT (0) FOR [default_warehouse];


GO
PRINT N'Creating [dbo].[DF_users_awb_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_awb_port] DEFAULT ('LPT1') FOR [awb_port];


GO
PRINT N'Creating [dbo].[DF_users_bol_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_bol_port] DEFAULT ('LPT1') FOR [bol_port];


GO
PRINT N'Creating [dbo].[DF_users_sed_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_sed_port] DEFAULT ('LPT1') FOR [sed_port];


GO
PRINT N'Creating [dbo].[DF_users_invoice_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_invoice_port] DEFAULT ('LPT1') FOR [invoice_port];


GO
PRINT N'Creating [dbo].[DF_users_check_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_check_port] DEFAULT ('LPT1') FOR [check_port];


GO
PRINT N'Creating [dbo].[DF_users_shipping_label_port]...';


GO
ALTER TABLE [dbo].[users]
    ADD CONSTRAINT [DF_users_shipping_label_port] DEFAULT ('LPT1') FOR [shipping_label_port];


GO
PRINT N'Creating [dbo].[DF_view_login_org_acct]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_org_acct] DEFAULT (0) FOR [org_acct];


GO
PRINT N'Creating [dbo].[DF_view_login_default_warehouse]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_default_warehouse] DEFAULT (0) FOR [default_warehouse];


GO
PRINT N'Creating [dbo].[DF_view_login_awb_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_awb_port] DEFAULT ('LPT1') FOR [awb_port];


GO
PRINT N'Creating [dbo].[DF_view_login_bol_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_bol_port] DEFAULT ('LPT1') FOR [bol_port];


GO
PRINT N'Creating [dbo].[DF_view_login_sed_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_sed_port] DEFAULT ('LPT1') FOR [sed_port];


GO
PRINT N'Creating [dbo].[DF_view_login_invoice_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_invoice_port] DEFAULT ('LPT1') FOR [invoice_port];


GO
PRINT N'Creating [dbo].[DF_view_login_check_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_check_port] DEFAULT ('LPT1') FOR [check_port];


GO
PRINT N'Creating [dbo].[DF_view_login_shipping_label_port]...';


GO
ALTER TABLE [dbo].[view_login]
    ADD CONSTRAINT [DF_view_login_shipping_label_port] DEFAULT ('LPT1') FOR [shipping_label_port];


GO
PRINT N'Creating [dbo].[DF_warehouse_history_history_date]...';


GO
ALTER TABLE [dbo].[warehouse_history]
    ADD CONSTRAINT [DF_warehouse_history_history_date] DEFAULT (getdate()) FOR [history_date];


GO
PRINT N'Creating [dbo].[DF__warehouse__item___66EA454A]...';


GO
ALTER TABLE [dbo].[warehouse_history]
    ADD CONSTRAINT [DF__warehouse__item___66EA454A] DEFAULT (0) FOR [item_piece_remain];


GO
PRINT N'Creating [dbo].[DF__warehouse__item___67DE6983]...';


GO
ALTER TABLE [dbo].[warehouse_history]
    ADD CONSTRAINT [DF__warehouse__item___67DE6983] DEFAULT (0) FOR [item_piece_origin];


GO
PRINT N'Creating [dbo].[DF__warehouse__item___68D28DBC]...';


GO
ALTER TABLE [dbo].[warehouse_history]
    ADD CONSTRAINT [DF__warehouse__item___68D28DBC] DEFAULT (0) FOR [item_piece_shipout];


GO
PRINT N'Creating [dbo].[DF_warehouse_receipt_system_date]...';


GO
ALTER TABLE [dbo].[warehouse_receipt]
    ADD CONSTRAINT [DF_warehouse_receipt_system_date] DEFAULT (getdate()) FOR [system_date];


GO
PRINT N'Creating [dbo].[DF_warehouse_shipout_system_date]...';


GO
ALTER TABLE [dbo].[warehouse_shipout]
    ADD CONSTRAINT [DF_warehouse_shipout_system_date] DEFAULT (getdate()) FOR [system_date];


GO
PRINT N'Creating unnamed constraint on [dbo].[webpages_Membership]...';


GO
ALTER TABLE [dbo].[webpages_Membership]
    ADD DEFAULT ((0)) FOR [IsConfirmed];


GO
PRINT N'Creating unnamed constraint on [dbo].[webpages_Membership]...';


GO
ALTER TABLE [dbo].[webpages_Membership]
    ADD DEFAULT ((0)) FOR [PasswordFailuresSinceLastSuccess];


GO
PRINT N'Creating [dbo].[FK_all_rate_table_rate_table]...';


GO
ALTER TABLE [dbo].[all_rate_table] WITH NOCHECK
    ADD CONSTRAINT [FK_all_rate_table_rate_table] FOREIGN KEY ([rate_table_id]) REFERENCES [dbo].[rate_table] ([id]);


GO
PRINT N'Creating [dbo].[FK_dbo.AspNetUserClaims_dbo.AspNetUsers_User_Id]...';


GO
ALTER TABLE [dbo].[AspNetUserClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_User_Id] FOREIGN KEY ([User_Id]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserLogins] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_RateBlockDefinition_RateEntryRow]...';


GO
ALTER TABLE [dbo].[RateBlockDefinition] WITH NOCHECK
    ADD CONSTRAINT [FK_RateBlockDefinition_RateEntryRow] FOREIGN KEY ([RateEntryRowID]) REFERENCES [dbo].[RateEntryRow] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Row_Route]...';


GO
ALTER TABLE [dbo].[RateEntryRow] WITH NOCHECK
    ADD CONSTRAINT [FK_Row_Route] FOREIGN KEY ([RouteID]) REFERENCES [dbo].[RateRoute] ([ID]);


GO
PRINT N'Creating [dbo].[fk_RoleId]...';


GO
ALTER TABLE [dbo].[webpages_UsersInRoles] WITH NOCHECK
    ADD CONSTRAINT [fk_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[webpages_Roles] ([RoleId]);


GO
PRINT N'Creating [dbo].[fk_UserId]...';


GO
ALTER TABLE [dbo].[webpages_UsersInRoles] WITH NOCHECK
    ADD CONSTRAINT [fk_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[UserProfile] ([UserId]);


GO
PRINT N'Creating [dbo].[DeleteAllTableRowsByELT]...';


GO

/****** Object:  User Defined Function dbo.DeleteAllTableRowsByELT    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  User Defined Function dbo.DeleteAllTableRowsByELT    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  User Defined Function dbo.DeleteAllTableRowsByELT    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  User Defined Function dbo.DeleteAllTableRowsByELT    Script Date: 5/5/2008 2:24:42 PM ******/

CREATE FUNCTION dbo.DeleteAllTableRowsByELT
(
	@elt_account_number nvarchar(32)
)
RETURNS INT
AS
BEGIN

IF @elt_account_number IS NULL 
RETURN 0

ELSE

DECLARE my_cursor CURSOR FOR 
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME LIKE 'elt_account_number' 
DECLARE @table_name nvarchar(128)

BEGIN 

OPEN my_cursor
FETCH NEXT FROM my_cursor INTO @table_name

WHILE @@FETCH_STATUS=0
BEGIN
DECLARE @statement nVARCHAR(1024)

SET @statement = 'DELETE FROM  '+@table_name+' WHERE CAST(elt_account_number AS nvarchar(32))=@elt_account_number'
exec sp_executesql @statement,N'@elt_account_number nvarchar(32)', @elt_account_number

FETCH NEXT FROM my_cursor INTO @table_name
END

SET @statement = 'DELETE FROM greetMessage  WHERE CAST(AgentID AS nvarchar(32))=@elt_account_number'
exec sp_executesql @statement,N'@elt_account_number nvarchar(32)', @elt_account_number

CLOSE my_cursor
DEALLOCATE my_cursor

END 

RETURN 1
END
GO
PRINT N'Creating [dbo].[GetFileNumbersByBill]...';


GO

/****** Object:  User Defined Function dbo.GetFileNumbersByBill    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  User Defined Function dbo.GetFileNumbersByBill    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  User Defined Function dbo.GetFileNumbersByBill    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  User Defined Function dbo.GetFileNumbersByBill    Script Date: 5/5/2008 2:24:42 PM ******/

CREATE FUNCTION dbo.GetFileNumbersByBill
(
	@elt_account_number decimal,
	@bill_number decimal
)
RETURNS nvarchar(1024) 
AS 
BEGIN 
	DECLARE @r nvarchar(1024)

	SELECT @r = ISNULL(@r+',', '') + ref_no_Our FROM invoice x LEFT OUTER JOIN bill_detail y 
		ON (x.elt_account_number=y.elt_account_number AND x.invoice_no=y.invoice_no) 
		WHERE y.elt_account_number=@elt_account_number and y.bill_number=@bill_number
		GROUP BY ref_no_Our
	RETURN @r 
END
GO
PRINT N'Creating [dbo].[GetFreightCost]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[GetFreightCost]
(
	@AirLineCode int,
	@Weight Decimal,
	@Unit NCHAR(1),
	@elt_account_number int
)
RETURNS Decimal
AS
BEGIN
	Declare @Rate decimal=0
	Declare @Amount decimal =0
	Declare @Count int =0
	SELECT @Count= COUNT(a.rate) from all_rate_table a where airline =@AirLineCode and a.rate_type=3 and weight_break > = @Weight AND kg_lb=@Unit and elt_account_number=elt_account_number
	IF @Count >0 
	SELECT  top 1 @Rate= a.rate from all_rate_table a where airline =@AirLineCode and a.rate_type=3 and weight_break > = @Weight AND kg_lb=@Unit and elt_account_number=elt_account_number
	order by weight_break desc
	ELSE
	return 0
	

	return @Weight * @Rate

END
GO
PRINT N'Creating [dbo].[GetInvoiceNumbersByBill]...';


GO
CREATE FUNCTION dbo.GetInvoiceNumbersByBill
(
	@elt_account_number decimal,
	@bill_number decimal
)
RETURNS nvarchar(1024) 
AS 

BEGIN
	DECLARE @r nvarchar(1024)
	SELECT @r=ISNULL(@r+',', '') + CAST(invoice_no AS VARCHAR) FROM  bill_detail 
		WHERE elt_account_number=@elt_account_number and bill_number=@bill_number
		GROUP BY invoice_no

	RETURN @r 

END
GO
PRINT N'Creating [dbo].[Split]...';


GO
CREATE FUNCTION [dbo].[Split]
(
    @String NVARCHAR(4000),
    @Delimiter NCHAR(1)
)
RETURNS TABLE 
AS
RETURN 
(
    WITH Split(stpos,endpos) 
    AS(
        SELECT 0 AS stpos, CHARINDEX(@Delimiter,@String) AS endpos
        UNION ALL
        SELECT endpos+1, CHARINDEX(@Delimiter,@String,endpos+1)
            FROM Split
            WHERE endpos > 0
    )
    SELECT 'Id' = ROW_NUMBER() OVER (ORDER BY (SELECT 1)),
        'Data' = SUBSTRING(@String,stpos,COALESCE(NULLIF(endpos,0),LEN(@String)+1)-stpos)
    FROM Split
)
GO
PRINT N'Creating [dbo].[View_pay_bill]...';


GO
CREATE VIEW dbo.View_pay_bill
AS
SELECT     cd.bill_number, cd.print_id, cd.elt_account_number, cq.vendor_number, cq.vendor_name, cq.bill_date, cq.bill_due_date, cq.print_date, gl.chk_void, gl.chk_complete, 
                      cd.amt_due, cd.amt_paid
FROM         dbo.check_detail AS cd LEFT OUTER JOIN
                      dbo.check_queue AS cq ON cq.elt_account_number = cd.elt_account_number AND cq.print_id = cd.print_id LEFT OUTER JOIN
                      dbo.all_accounts_journal AS gl ON gl.elt_account_number = cd.elt_account_number AND cd.print_id = gl.tran_num AND cq.vendor_number = gl.customer_number AND 
                      gl.gl_account_name <> 'Account Payable' AND cq.memo = gl.memo
GO
PRINT N'Creating [dbo].[VW_ArrivalNotice]...';


GO


CREATE VIEW [dbo].[VW_ArrivalNotice]
AS
SELECT TOP (100) PERCENT IV.invoice_no, IV.Customer_Number, IV.elt_account_number, IV.mawb_num, IV.hawb_num, IV.invoice_date, IV.air_ocean, IV.import_export, MB.dep_code AS Origin, MB.arr_code AS Dest
FROM     (SELECT DISTINCT tran_num, elt_account_number
                  FROM      dbo.all_accounts_journal AS a with(nolock) 
                  WHERE   (tran_type = 'ARN')) AS ARN INNER JOIN
                  dbo.invoice AS IV with(nolock)  ON ARN.tran_num = IV.invoice_no AND ARN.elt_account_number = IV.elt_account_number AND IV.import_export = 'I' LEFT OUTER JOIN
                  dbo.import_mawb AS MB with(nolock)  ON IV.mawb_num = MB.mawb_num AND IV.elt_account_number = MB.elt_account_number
ORDER BY IV.invoice_date DESC
GO
PRINT N'Creating [dbo].[VW_CustomerInfo]...';


GO

CREATE VIEW [dbo].[VW_CustomerInfo]
AS
SELECT elt_account_number, org_account_number, CASE WHEN isnull(class_code, '') = '' THEN dba_name ELSE dba_name + ' [' + RTRIM(LTRIM(isnull(class_code, ''))) + ']' END AS Customer_Name
FROM     dbo.organization with(nolock)
GO
PRINT N'Creating [dbo].[vw_ocean_master]...';


GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW dbo.vw_ocean_master
AS
SELECT     a.elt_account_number, a.booking_num, a.mbol_num, a.agent_name, a.agent_info, a.agent_acct_num, a.Shipper_Name, a.Shipper_Info, a.Shipper_acct_num, 
                      a.Consignee_Name, a.Consignee_Info, a.Consignee_acct_num, a.export_ref, a.origin_country, a.export_instr, a.loading_pier, a.move_type, a.containerized, 
                      a.pre_carriage, a.pre_receipt_place, a.export_carrier, a.loading_port, a.unloading_port, a.departure_date, a.delivery_place, a.desc1, a.desc2, a.desc3, a.desc4, 
                      a.desc5, a.pieces, a.gross_weight, a.measurement, a.tran_date, a.last_modified, a.Notify_Name, a.Notify_Info, a.Notify_acct_num, a.dest_country, a.vessel_name, 
                      a.manifest_desc, a.weight_cp, a.prepaid_other_charge, a.collect_other_charge, a.scale, a.width, a.length, a.height, a.dem_detail, a.charge_rate, a.total_weight_charge,
                       a.declared_value, a.tran_by, a.tran_place, a.prepaid_invoiced, a.collect_invoiced, a.ci, a.unit_qty, a.SalesPerson, a.CreatedBy, a.CreatedDate, a.ModifiedBy, 
                      a.ModifiedDate, a.total_other_charge, a.total_other_cost, a.is_org_merged, a.dimtext, a.of_cost, a.agent_profit, a.agent_profit_share, a.other_agent_profit_carrier, 
                      a.other_agent_profit_agent, a.Total_Freight_Cost, a.aes_xtn, a.sed_stmt, b.departure_date AS Expr4, b.arrival_date, b.receipt_place, b.origin_port_id, 
                      b.origin_port_aes_code, b.origin_port_location, b.origin_port_state, b.origin_port_country, b.dest_port_id, b.dest_port_aes_code, b.dest_port_location, 
                      b.dest_port_country, b.dest_country_code, b.carrier_desc, b.carrier_code, b.scac, b.consolidator_name, b.consolidator_code, b.voyage_no, b.vsl_name, b.cutoff_time, 
                      b.cutoff, b.fcl_lcl, b.container_type, b.file_no, b.status, b.booking_date
FROM         dbo.mbol_master AS a INNER JOIN
                      dbo.ocean_booking_number AS b ON a.booking_num = b.booking_num
WHERE     (a.elt_account_number = 20005000)
GO
PRINT N'Creating [dbo].[VW_OperationalCharge]...';


GO




CREATE VIEW [dbo].[VW_OperationalCharge]
AS
/*Direct Shippment Other Charge*/ 


SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'M' AS Master_House, MC.[elt_account_number], MC.[MAWB_NUM] AS MBL_NUM, '' AS HBL_NUM, CONVERT(int, MC.[charge_code]) AS Item_Code, [Charge_Desc], 
                  CASE WHEN MC.[Coll_Prepaid] = 'C' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.[Shipper_account_number]) END AS Bill_To, CONVERT(decimal, [Amt_MAWB]) AS Amount
				
      ,MM.DEP_AIRPORT_CODE AS ORIGIN
      ,MM.to_1 AS DEST
	  ,c.ETD_DATE1 AS [Date]
FROM     [MAWB_Other_Charge] MC  with(nolock)  INNER JOIN
                  mawb_master MM with(nolock)  ON MM.MAWB_NUM = MC.MAWB_NUM AND MM.elt_account_number = MC.elt_account_number
				  inner join [MAWB_NUMBER] c  with(nolock)  on MM.MAWB_NUM=c.mawb_no and MM.elt_account_number=c.elt_account_number
WHERE  MC.CHARGE_CODE <> 0 AND MM.MAWB_NUM NOT IN
                      (SELECT DISTINCT MAWB_NUM
                       FROM      HAWB_Master with(nolock) 
                       WHERE   MAWB_NUM IS NOT NULL)
UNION
/*Direct Shippment Freight Charge*/ 

SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'M' AS Master_House , a.elt_account_number, a.mawb_num AS MBL_NUM, '' AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(MM.COLL_1, '') = 'Y' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.[Shipper_account_number]) END AS Bill_To, CONVERT(decimal, a.total_charge) AS Amount
			,MM.DEP_AIRPORT_CODE AS ORIGIN
			,MM.to_1 AS DEST
			,c.ETD_DATE1 AS [Date]
FROM     mawb_weight_charge a with(nolock)  INNER JOIN
                  mawb_master MM with(nolock)  ON MM.MAWB_NUM = a.MAWB_NUM AND a.elt_account_number = MM.elt_account_number 
				  inner join [MAWB_NUMBER] c with(nolock)  on MM.MAWB_NUM=c.mawb_no and MM.elt_account_number=c.elt_account_number
				  
				
WHERE          MM.MAWB_NUM NOT IN
                      (SELECT DISTINCT MAWB_NUM
                       FROM      HAWB_Master with(nolock) 
                       WHERE   MAWB_NUM IS NOT NULL)
UNION
/*House Bound Other Charge - ignore in Master*/ 

SELECT 'E' AS ImportExport,'A' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mawb_num AS MBL_NUM, a.hawb_num AS HBL_NUM, a.charge_code AS item_Code, 
                  charge_desc AS Charge_Desc, CASE WHEN a.Coll_Prepaid = 'C' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_account_number) END AS Bill_To, CONVERT(decimal, a.amt_hawb) AS Amount
				,b.DEP_AIRPORT_CODE AS ORIGIN
				,b.to_1 AS DEST
				,c.ETD_DATE1 AS [Date]
FROM     hawb_other_charge a  with(nolock)  INNER JOIN
                  hawb_master b with(nolock)  ON (a.elt_account_number = b.elt_account_number AND a.hawb_num = b.hawb_num)
				  inner join [MAWB_NUMBER] c  with(nolock)  on b.MAWB_NUM=c.mawb_no and b.elt_account_number=c.elt_account_number
WHERE  ISNULL(b.mawb_num, '') <> '' 
UNION
/*House Bound Fright Charge*/


 SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mawb_num AS MBL_NUM, a.hawb_num AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(b.COLL_1, '') = 'Y' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_account_number) END AS Bill_To, CONVERT(decimal, a.total_charge) AS Amount
				,b.DEP_AIRPORT_CODE AS ORIGIN
				,b.to_1 AS DEST
				,d.ETD_DATE1 AS [Date]
FROM     hawb_weight_charge a with(nolock)  inner JOIN
                  hawb_master b with(nolock)  ON (a.elt_account_number = b.elt_account_number AND a.hawb_num = b.hawb_num)
		inner join MAWB_MASTER c with(nolock)  on (b.elt_account_number=c.elt_account_number AND b.MAWB_NUM=c.MAWB_NUM)
		inner join [MAWB_NUMBER] d with(nolock)  on b.MAWB_NUM=d.mawb_no and b.elt_account_number=d.elt_account_number
WHERE  ISNULL(b.mawb_num, '') <> '' 

UNION
--------------------------OCEAN EXPORT------------------------------------------------------------------

/*Direct Shippment Freight Charge*/ 

SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'M' AS Master_House, a.elt_account_number, a.mbol_num AS MBL_NUM, '' AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(a.weight_cp, '') = 'C' THEN CONVERT(int, a.Consignee_acct_num) ELSE CONVERT(int, a.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.total_weight_charge) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,a.departure_date as [Date]
FROM    mbol_master a with(nolock)  inner join ocean_booking_number c with(nolock)  on a.booking_num=c.booking_num
WHERE    a.mbol_num NOT IN
                      (SELECT DISTINCT mbol_num
                       FROM      hbol_master  with(nolock) 
                       WHERE   mbol_num IS NOT NULL) 

UNION
/*Direct Shippment Other Charge*/ 
SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'M' AS Master_House, MC.[elt_account_number], MC.mbol_num AS MBL_NUM, '' AS HBL_NUM, CONVERT(int, MC.[charge_code]) AS Item_Code, [Charge_Desc], 
                  CASE WHEN MC.[Coll_Prepaid] = 'C' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, MC.charge_amt) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,MM.departure_date as [Date]
FROM     mbol_other_charge MC with(nolock)  INNER JOIN
                  mbol_master MM with(nolock)  ON MM.mbol_num = MC.mbol_num AND MM.elt_account_number = MC.elt_account_number
				  INNER JOIN  ocean_booking_number c with(nolock)  on MM.booking_num=c.booking_num
WHERE  MC.CHARGE_CODE <> 0  AND MM.mbol_num NOT IN
                      (SELECT DISTINCT mbol_num
                       FROM      hbol_master with(nolock) 
                       WHERE   mbol_num IS NOT NULL)


UNION

/*House Bound Other Charge - ignore in Master*/ 

SELECT 'E' AS ImportExport,'O' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mbol_num AS MBL_NUM, a.hbol_num AS HBL_NUM, a.charge_code AS item_Code, 
                  charge_desc AS Charge_Desc, CASE WHEN a.Coll_Prepaid = 'C' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.charge_amt) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,b.departure_date AS [Date]
FROM     hbol_other_charge a with(nolock)  INNER JOIN
                  hbol_master b with(nolock)  ON (a.elt_account_number = b.elt_account_number AND a.hbol_num = b.hbol_num) 
				  inner join  mbol_master MM  with(nolock)  ON MM.mbol_num = b.mbol_num 
				  inner join 				  
				  ocean_booking_number c with(nolock)  on MM.booking_num=c.booking_num
WHERE  ISNULL(b.mbol_num, '') <> '' 


UNION
/*House Bound Fright Charge*/

 SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'H' AS Master_House, a.elt_account_number, a.mbol_num AS MBL_NUM, a.hbol_num AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(a.weight_cp, '') = 'C' THEN CONVERT(int, a.agent_no) ELSE CONVERT(int, a.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.total_weight_charge) AS Amount
					,c.origin_port_id AS ORIGIN
					,c.dest_port_id AS DEST
					,a.departure_date AS [Date]
FROM     
                  hbol_master a with(nolock) 
				    inner join  mbol_master MM  with(nolock) ON MM.mbol_num = a.mbol_num 
				  inner join 				  
				  ocean_booking_number c with(nolock)  on MM.booking_num=c.booking_num
WHERE  ISNULL(a.mbol_num, '') <> '' 

UNION


SELECT  
      B.[import_export] AS ImportExport,
       B.[air_ocean] AS AirOcean,      
	   case when isnull(B.hawb_num,'')='' then 'M' else 'H' end as Master_House,
	    A.[elt_account_number],
		B.[mawb_num] AS MBL_NUM, B.[mawb_num] AS HBL_NUM,   
		[item_no] as Item_Code,
		[item_desc]  as Charge_Desc,
		[Customer_Number]   AS Bill_To,
		[charge_amount] as Amount,
        [Origin],
        [Dest],			
		B.[invoice_date] as [Date]
  FROM [invoice_charge_item] A with(nolock)  INNER JOIN [VW_ArrivalNotice] B with(nolock)  ON A.elt_account_number = B.elt_account_number AND A.INVOICE_NO =B.INVOICE_NO
GO
PRINT N'Creating [dbo].[VW_OperationalCost]...';


GO



/* Shippment Freight Cost from MASTER doens't matter whether it is House attached or not*/
CREATE VIEW [dbo].[VW_OperationalCost]
AS
SELECT 'E' AS ImportExport, Induced, AirOcean, Master_House, elt_account_number, MBL_NUM, HBL_NUM, item_Code, Cost_Desc, Bill_From, Amount,ORIGIN,DEST,[Date]


FROM     (SELECT 'Y' AS Induced, 'A' AS AirOcean, 'M' AS Master_House, a.elt_account_number, a.MAWB_NUM AS MBL_NUM, '' AS HBL_NUM, 0 AS item_Code, 'Freight Cost' AS Cost_Desc, MM.airline_vendor_num AS Bill_From, 
                                    MM.total_chargeable_weight * ISNULL
                                        ((SELECT TOP (1) rate
                                          FROM      dbo.all_rate_table AS b with(nolock) 
                                          WHERE   (airline = MM.airline_vendor_num) AND (rate_type = 3) AND (weight_break >= MM.total_chargeable_weight) AND (kg_lb = a.Kg_Lb) AND (elt_account_number = a.elt_account_number)
                                          ORDER BY weight_break DESC), 0) AS Amount
										,MM.DEP_AIRPORT_CODE AS ORIGIN
										,MM.to_1 AS DEST
										 ,c.ETD_DATE1 AS [Date]
                  FROM      dbo.MAWB_Weight_Charge AS a with(nolock)  INNER JOIN
                                    dbo.MAWB_MASTER AS MM with(nolock)  ON MM.MAWB_NUM = a.MAWB_NUM AND a.elt_account_number = MM.elt_account_number
									inner join [MAWB_NUMBER] c  with(nolock)  on MM.MAWB_NUM=c.mawb_no and MM.elt_account_number=c.elt_account_number
                ) AS A_1
WHERE  (Amount <> 0)


UNION

/*Airline MAWB Other Cost  doens't matter whether it is House attached or not*/ 
SELECT 'E' AS ImportExport,'Y' AS Induced, 'A' AS AirOcean, 'M' AS Master_House, MC.[elt_account_number], MC.[MAWB_NUM] AS MBL_NUM, '' AS HBL_NUM, CONVERT(int, MC.[charge_code]) AS Item_Code, [Charge_Desc] AS Cost_Desc, 
MM.airline_vendor_num as Bill_FROM, CONVERT(decimal, [Amt_MAWB]) AS Amount
,MM.DEP_AIRPORT_CODE AS ORIGIN
,MM.to_1 AS DEST
,c.ETA_DATE1 AS [Date]
FROM     [MAWB_Other_Charge] MC with(nolock)  INNER JOIN
                  mawb_master MM with(nolock)  ON MM.MAWB_NUM = MC.MAWB_NUM AND MM.elt_account_number = MC.elt_account_number
				  inner join [MAWB_NUMBER] c with(nolock)  on MM.MAWB_NUM=c.mawb_no and MM.elt_account_number=c.elt_account_number
WHERE  MC.CHARGE_CODE <> 0 and MC.Carrier_Agent='C' and MM.airline_vendor_num <> 0 and [Amt_MAWB] > 0


UNION
/*HOUSE OTHER COST*/
  SELECT 'E' AS ImportExport, 'N'as Induced, 'A' as AirOcean, 'H' as MasterHouse, a.elt_account_number,b.mawb_num as MBL_NUM,a.hawb_num as HBL_NUM,
                a.item_no as item_Code,a.cost_desc ,
                a.vendor_no AS Bill_FROM, a.cost_amt AS Amount 
				,b.DEP_AIRPORT_CODE AS ORIGIN
				,b.to_1 AS DEST
				,c.ETD_DATE1 AS [Date]
				FROM hawb_other_cost a INNER JOIN hawb_master b with(nolock) 
                ON (a.elt_account_number=b.elt_account_number AND a.hawb_num=b.hawb_num) 
				inner join [MAWB_NUMBER] c with(nolock)  on b.MAWB_NUM=c.mawb_no and b.elt_account_number=c.elt_account_number
                WHERE ISNULL(b.mawb_num,'')<>'' 


UNION
/*MASTER OTHER COST - IT IS ONLY AFFECTD WHEN DIRECT SHIPMENT */
SELECT 'E' AS ImportExport, 'N'as Induced, 'A' as AirOcean, 'M' as MasterHouse, a.elt_account_number,a.mawb_num AS MBL_NUM,'' as HBL_NUM,
	a.item_no as item_Code, a.cost_desc ,
	a.vendor_no AS Bill_FROM, a.cost_amt AS Amount
	,MM.DEP_AIRPORT_CODE AS ORIGIN
				,MM.to_1 AS DEST
				,c.ETD_DATE1 AS [Date]
	 FROM mawb_other_cost a with(nolock)   INNER JOIN
                  mawb_master MM with(nolock)  ON MM.MAWB_NUM = a.MAWB_NUM AND MM.elt_account_number = MM.elt_account_number
				  inner join [MAWB_NUMBER] c with(nolock)  on MM.MAWB_NUM=c.mawb_no and MM.elt_account_number=c.elt_account_number
	WHERE a.mawb_num NOT IN 
	(SELECT DISTINCT MAWB_NUM
	FROM      HAWB_Master with(nolock) 
	WHERE   MAWB_NUM IS NOT NULL)

UNION
	---------------import
	--ARN
SELECT  
       B.[import_export] AS ImportExport,
	   'N'as Induced,
       B.[air_ocean] AS AirOcean,      
	   case when isnull(B.hawb_num,'')='' then 'M' else 'H' end as Master_House,
	    A.[elt_account_number],
		B.[mawb_num] AS MBL_NUM, B.[mawb_num] AS HBL_NUM,   
		[item_no] as Item_Code,
		[item_desc]  as Cost_Desc,
		[Customer_Number]   AS Bill_From,
		[cost_amount] as Amount,
        [Origin],
        [Dest],	
		B.[invoice_date] as [Date]
  FROM [invoice_cost_item] A with(nolock)  INNER JOIN [VW_ArrivalNotice] B with(nolock)  ON A.elt_account_number = B.elt_account_number AND A.INVOICE_NO =B.INVOICE_NO

  ---AGENT DEBIT ON MASTER
UNION
  SELECT   
  'I' as import_export, 
  'N' as Induced,    
  iType as air_ocean,
  'M' as    Master_House,
   elt_account_number,  
   mawb_num AS MBL_NUM,    
   '' AS HBL_NUM,                        
'-1' as Item_Code,
'Agent Debit' as Cost_Desc,                                 
agent_org_acct as Bill_From, 
agent_debit_amt as Amount,
dep_code as [Origin], 
arr_code as [Dest],  
process_dt as [Date]
FROM import_mawb with(nolock)  WHERE agent_debit_amt > 0
GO
PRINT N'Creating [dbo].[VW_OperationCharge]...';


GO
CREATE VIEW dbo.VW_OperationCharge
AS

SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'M' AS Master_House, MC.[elt_account_number], MC.[MAWB_NUM] AS MBL_NUM, '' AS HBL_NUM, CONVERT(int, MC.[charge_code]) AS Item_Code, [Charge_Desc], 
                  CASE WHEN MC.[Coll_Prepaid] = 'C' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.[Shipper_account_number]) END AS Bill_To, CONVERT(decimal, [Amt_MAWB]) AS Amount
				
      ,MM.DEP_AIRPORT_CODE AS ORIGIN
      ,MM.to_1 AS DEST
	  ,MM.Date_Last_Modified AS [Date]
FROM     [MAWB_Other_Charge] MC INNER JOIN
                  mawb_master MM ON MM.MAWB_NUM = MC.MAWB_NUM AND MM.elt_account_number = MC.elt_account_number
WHERE  MC.CHARGE_CODE <> 0 AND MM.MAWB_NUM NOT IN
                      (SELECT DISTINCT MAWB_NUM
                       FROM      HAWB_Master
                       WHERE   MAWB_NUM IS NOT NULL)
UNION
/*Direct Shippment Freight Charge*/ 

SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'M' AS Master_House, a.elt_account_number, a.mawb_num AS MBL_NUM, '' AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(MM.COLL_1, '') = 'Y' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.[Shipper_account_number]) END AS Bill_To, CONVERT(decimal, a.total_charge) AS Amount
			,MM.DEP_AIRPORT_CODE AS ORIGIN
			,MM.to_1 AS DEST
			,MM.Date_Last_Modified AS [Date]
FROM     mawb_weight_charge a INNER JOIN
                  mawb_master MM ON MM.MAWB_NUM = a.MAWB_NUM AND a.elt_account_number = MM.elt_account_number
WHERE  MM.MAWB_NUM NOT IN
                      (SELECT DISTINCT MAWB_NUM
                       FROM      HAWB_Master
                       WHERE   MAWB_NUM IS NOT NULL)
UNION
/*House Bound Other Charge - ignore in Master*/ 

SELECT 'E' AS ImportExport,'A' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mawb_num AS MBL_NUM, a.hawb_num AS HBL_NUM, a.charge_code AS item_Code, 
                  charge_desc AS Charge_Desc, CASE WHEN a.Coll_Prepaid = 'C' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_account_number) END AS Bill_To, CONVERT(decimal, a.amt_hawb) AS Amount
				,b.DEP_AIRPORT_CODE AS ORIGIN
				,b.to_1 AS DEST
				,b.Date_Last_Modified AS [Date]
FROM     hawb_other_charge a INNER JOIN
                  hawb_master b ON (a.elt_account_number = b.elt_account_number AND a.hawb_num = b.hawb_num)
WHERE  ISNULL(b.mawb_num, '') <> ''
UNION
/*House Bound Fright Charge*/


 SELECT 'E' AS ImportExport, 'A' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mawb_num AS MBL_NUM, a.hawb_num AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(b.COLL_1, '') = 'Y' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_account_number) END AS Bill_To, CONVERT(decimal, a.total_charge) AS Amount
				,b.DEP_AIRPORT_CODE AS ORIGIN
				,b.to_1 AS DEST
				,b.Date_Last_Modified AS [Date]
FROM     hawb_weight_charge a inner JOIN
                  hawb_master b ON (a.elt_account_number = b.elt_account_number AND a.hawb_num = b.hawb_num)
WHERE  ISNULL(b.mawb_num, '') <> ''

UNION
--------------------------OCEAN EXPORT------------------------------------------------------------------

/*Direct Shippment Freight Charge*/ 

SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'M' AS Master_House, a.elt_account_number, a.mbol_num AS MBL_NUM, '' AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(a.weight_cp, '') = 'C' THEN CONVERT(int, a.Consignee_acct_num) ELSE CONVERT(int, a.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.total_weight_charge) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,a.ModifiedDate as [Date]
FROM    mbol_master a inner join ocean_booking_number c on a.booking_num=c.booking_num
WHERE  a.mbol_num NOT IN
                      (SELECT DISTINCT mbol_num
                       FROM      hbol_master 
                       WHERE   mbol_num IS NOT NULL)

UNION
/*Direct Shippment Other Charge*/ 
SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'M' AS Master_House, MC.[elt_account_number], MC.mbol_num AS MBL_NUM, '' AS HBL_NUM, CONVERT(int, MC.[charge_code]) AS Item_Code, [Charge_Desc], 
                  CASE WHEN MC.[Coll_Prepaid] = 'C' THEN CONVERT(int, MM.Consignee_acct_num) ELSE CONVERT(int, MM.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, MC.charge_amt) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,MM.ModifiedDate as [Date]
FROM     mbol_other_charge MC INNER JOIN
                  mbol_master MM ON MM.mbol_num = MC.mbol_num AND MM.elt_account_number = MC.elt_account_number
				  INNER JOIN  ocean_booking_number c on MM.booking_num=c.booking_num
WHERE  MC.CHARGE_CODE <> 0 AND MM.mbol_num NOT IN
                      (SELECT DISTINCT mbol_num
                       FROM      hbol_master
                       WHERE   mbol_num IS NOT NULL)


UNION

/*House Bound Other Charge - ignore in Master*/ 

SELECT 'E' AS ImportExport,'O' AS AirOcean, 'H' AS Master_House, a.elt_account_number, b.mbol_num AS MBL_NUM, a.hbol_num AS HBL_NUM, a.charge_code AS item_Code, 
                  charge_desc AS Charge_Desc, CASE WHEN a.Coll_Prepaid = 'C' THEN CONVERT(int, b.Agent_No) ELSE CONVERT(int, b.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.charge_amt) AS Amount
				,c.origin_port_id AS ORIGIN
				,c.dest_port_id AS DEST
				,b.ModifiedDate AS [Date]
FROM     hbol_other_charge a INNER JOIN
                  hbol_master b ON (a.elt_account_number = b.elt_account_number AND a.hbol_num = b.hbol_num) 
				  inner join  mbol_master MM ON MM.mbol_num = b.mbol_num 
				  inner join 				  
				  ocean_booking_number c on MM.booking_num=c.booking_num
WHERE  ISNULL(b.mbol_num, '') <> ''


UNION
/*House Bound Fright Charge*/

 SELECT 'E' AS ImportExport, 'O' AS AirOcean, 'H' AS Master_House, a.elt_account_number, a.mbol_num AS MBL_NUM, a.hbol_num AS HBL_NUM, 0 AS item_Code, 'Freight Charge' AS Charge_Desc, 
                  CASE WHEN ISNULL(a.weight_cp, '') = 'C' THEN CONVERT(int, a.agent_no) ELSE CONVERT(int, a.Shipper_acct_num) END AS Bill_To, CONVERT(decimal, a.total_weight_charge) AS Amount
					,c.origin_port_id AS ORIGIN
					,c.dest_port_id AS DEST
					,a.ModifiedDate AS [Date]
FROM     
                  hbol_master a
				    inner join  mbol_master MM ON MM.mbol_num = a.mbol_num 
				  inner join 				  
				  ocean_booking_number c on MM.booking_num=c.booking_num
WHERE  ISNULL(a.mbol_num, '') <> ''
GO
PRINT N'Creating [DataList].[GetImportFileNumbers]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetImportFileNumbers]
	@ELT_account_number int,
	@iType char(1)
AS
BEGIN
	SELECT file_no
    FROM [dbo].[import_mawb]
    where [elt_account_number]=@ELT_account_number and ISNULL(file_no,'')<>'' and iType=@iType

END
GO
PRINT N'Creating [DataList].[GetMAWBNos]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetMAWBNos]
	@ELT_account_number int,
	@PortDirection VARCHAR(10)
AS
BEGIN

IF @PortDirection='Export'
	SELECT MAWB_NUM
    FROM [dbo].MAWB_MASTER where [elt_account_number]=@ELT_account_number

IF @PortDirection='Import'
		SELECT [mawb_num]
		FROM [dbo].[import_mawb]
		where [elt_account_number]=@ELT_account_number and iType='A'
END
GO
PRINT N'Creating [DataList].[GetMBOLNos]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetMBOLNos]
	@ELT_account_number int,
    @PortDirection VARCHAR(10)
AS
BEGIN


IF @PortDirection='Export'
	SELECT MBOL_NUM
    FROM [dbo].MBOL_MASTER where [elt_account_number]=@ELT_account_number
    
    
IF @PortDirection='Import'
		SELECT [mawb_num] as MBOL_NUM
		FROM [dbo].[import_mawb]
		where [elt_account_number]=@ELT_account_number and iType='O'

END
GO
PRINT N'Creating [DataList].[GetOceanExportFileNumbers]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetOceanExportFileNumbers]
	@ELT_account_number int
AS
BEGIN
	SELECT file_no
    FROM [dbo].ocean_booking_number 
    where [elt_account_number]=@ELT_account_number and ISNULL(file_no,'')<>''

END
GO
PRINT N'Creating [DataList].[GetHAWBNos]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetHAWBNos]
	@ELT_account_number int,
	@PortDirection varchar(10)
AS
BEGIN
    IF @PortDirection='Export'
		SELECT [HAWB_NUM]
		FROM [dbo].[HAWB_master] 
		where [elt_account_number]=@ELT_account_number
    
    IF @PortDirection='Import'
		SELECT [hawb_num]
		FROM [dbo].[import_hawb]
		where [elt_account_number]=@ELT_account_number AND iType='A'
END
GO
PRINT N'Creating [DataList].[GetHBOLNos]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetHBOLNos]
	@ELT_account_number int,
    @PortDirection varchar(10)
AS
BEGIN
IF @PortDirection='Export'		
	SELECT [HBOL_NUM]
    FROM [dbo].[HBOL_master] where [elt_account_number]=@ELT_account_number
IF @PortDirection='Import'
		SELECT [hawb_num] AS HBOL_NUM 
		FROM [dbo].[import_hawb]
		where [elt_account_number]=@ELT_account_number AND iType='O'
END
GO
PRINT N'Creating [DataList].[GetAirExportFileNumbers]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DataList].[GetAirExportFileNumbers]
	@ELT_account_number int
AS
BEGIN
	SELECT FILE#
    FROM [dbo].MAWB_NUMBER 
    where [elt_account_number]=@ELT_account_number and ISNULL(FILE#,'')<>''

END
GO
PRINT N'Creating [DeveloperUtil].[CopyUser]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE DeveloperUtil.CopyUser
	@FromAccount nvarchar(100),
	@ToAccount nvarchar(100)
AS
BEGIN


INSERT INTO [dbo].[users]
           ([elt_account_number]
           ,[userid]
           ,[user_type]
           ,[user_right]
           ,[login_name]
           ,[password]
           ,[org_acct]
           ,[user_lname]
           ,[user_fname]
           ,[user_title]
           ,[user_address]
           ,[user_city]
           ,[user_state]
           ,[user_zip]
           ,[user_country]
           ,[user_phone]
           ,[user_email]
           ,[create_date]
           ,[pw_change_date]
           ,[last_modified]
           ,[last_login_date]
           ,[default_warehouse]
           ,[awb_port]
           ,[bol_port]
           ,[sed_port]
           ,[invoice_port]
           ,[check_port]
           ,[shipping_label_port]
           ,[awb_queue]
           ,[bol_queue]
           ,[sed_queue]
           ,[invoice_queue]
           ,[check_queue]
           ,[shipping_label_queue]
           ,[ig_user_ssn]
           ,[ig_user_dob]
           ,[ig_user_cell]
           ,[ig_recent_work]
           ,[page_id]
           ,[label_type]
           ,[add_to_label]
           ,[awb_prn_name]
           ,[bol_prn_name]
           ,[sed_prn_name]
           ,[invoice_prn_name]
           ,[check_prn_name]
           ,[shipping_label_prn_name]
           ,[is_org_merged]
           ,[page_tab_id])
     


SELECT [elt_account_number]
      ,[userid]
      ,[user_type]
      ,[user_right]
      ,[login_name]
      ,[password]
      ,[org_acct]
      ,[user_lname]
      ,[user_fname]
      ,[user_title]
      ,[user_address]
      ,[user_city]
      ,[user_state]
      ,[user_zip]
      ,[user_country]
      ,[user_phone]
      ,[user_email]
      ,[create_date]
      ,[pw_change_date]
      ,[last_modified]
      ,[last_login_date]
      ,[default_warehouse]
      ,[awb_port]
      ,[bol_port]
      ,[sed_port]
      ,[invoice_port]
      ,[check_port]
      ,[shipping_label_port]
      ,[awb_queue]
      ,[bol_queue]
      ,[sed_queue]
      ,[invoice_queue]
      ,[check_queue]
      ,[shipping_label_queue]
      ,[ig_user_ssn]
      ,[ig_user_dob]
      ,[ig_user_cell]
      ,[ig_recent_work]
      ,[page_id]
      ,[label_type]
      ,[add_to_label]
      ,[awb_prn_name]
      ,[bol_prn_name]
      ,[sed_prn_name]
      ,[invoice_prn_name]
      ,[check_prn_name]
      ,[shipping_label_prn_name]
      ,[is_org_merged]
      ,[page_tab_id]
  FROM [dbo].[users]





END
GO
PRINT N'Creating [DeveloperUtil].[CreateSystemUser]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DeveloperUtil].[CreateSystemUser]
	
AS
BEGIN

IF (SELECT COUNT(*) FROM [dbo].[users] WHERE [login_name] ='system')=0
BEGIN

	INSERT INTO [dbo].[users]
			   ([elt_account_number]
			   ,[userid]
			   ,[user_type]
			   ,[user_right]
			   ,[login_name]          
			   ,[user_fname]
			   )
		 VALUES
			   (80002000
			   ,9999
			   ,9
			   ,9
			   ,'system'
			   ,'system')
 END     


update [dbo].[UserProfile] set [elt_account_number]=80002000 where UserName = 'system'
   

END
GO
PRINT N'Creating [DeveloperUtil].[ViewUserAccessPages]...';


GO


CREATE PROCEDURE [DeveloperUtil].[ViewUserAccessPages]
	@elt_account_number decimal,
	@user_id decimal	
AS
BEGIN
--1000
--60281000
	
    
	SELECT a.*, b.master_url from [dbo].[page_user_access] a inner join tab_master b on a.page_id=b.page_id WHERE isnull(A.is_bloked,0)=0 and a.elt_account_number=@elt_account_number and a.user_id=@user_id
END
GO
PRINT N'Creating [Reporting].[TrialBalanceReport]...';


GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[TrialBalanceReport]

	@EndDate datetime,	
	@EltAccountNumber int 
AS
DECLARE @FirstDateOfThisYear datetime
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SET @FirstDateOfThisYear = ( select DateAdd(dd, DAY(0)-1, DateAdd(mm, MONTH(0)-1, DateAdd(yy, YEAR(@EndDate)-2000, '20000101'))))
		SELECT a.gl_account_number                                 AS gl_account_number,
			   a.gl_account_name                                   AS gl_account_name,
			   Sum(a.debit_amount + Isnull(a.debit_memo, 0))       AS Debit,
			   Sum(a.credit_amount + Isnull(a.credit_memo, 0))     AS Credit,
			   ( Sum(a.debit_amount+Isnull(a.debit_memo, 0))
				 + Sum(a.credit_amount+Isnull(a.credit_memo, 0)) ) AS Balance
		FROM   all_accounts_journal a,
			   gl b
		WHERE  a.elt_account_number = b.elt_account_number
			   AND a.elt_account_number = @EltAccountNumber
			   AND a.gl_account_number = b.gl_account_number
			   AND ( a.tran_date >= @FirstDateOfThisYear
					 AND a.tran_date < Dateadd(day, 1, @EndDate) )
			   AND Isnull(a.tran_type, '') <> 'INIT'
		GROUP  BY a.gl_account_number,
				  a.gl_account_name
		ORDER  BY a.gl_account_number  
						      
	END          
END
GO
PRINT N'Creating [Reporting].[RefreshPNL]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE Reporting.RefreshPNL
	@elt_account_number int
AS
BEGIN
	BEGIN TRANSACTION
		BEGIN TRY	
			DELETE FROM [Reporting].[PNL] WHERE elt_account_number =@elt_account_number
																																				INSERT INTO [Reporting].[PNL]
		([Type]
		,[ImportExport]
		,[AirOcean]
		,[Master_House]
		,[elt_account_number]
		,[MBL_NUM]
		,[HBL_NUM]
		,[Item_Code]
		,[Description]
		,[Customer_ID]
		,[Amount]
		,[ORIGIN]
		,[DEST]
		,[Customer_Name]
		,[Date])

		SELECT 
		'Revenue'
		,[ImportExport]
		,[AirOcean]
		,[Master_House]
		,R.[elt_account_number]
		,[MBL_NUM]
		,[HBL_NUM]
		,[Item_Code]
		,[Charge_Desc]
		,[Bill_To]
		,[Amount]
		,[ORIGIN]
		,[DEST]
		,CI.Customer_Name
		,[Date]
		FROM [dbo].[VW_OperationalCharge] R inner join VW_CustomerInfo CI on R.Bill_To = CI.org_account_number and R.elt_account_number = CI.elt_account_number
		WHERE R.elt_account_number =@elt_account_number 
																																				INSERT INTO [Reporting].[PNL]
		([Type]
		,[ImportExport]
		,[AirOcean]
		,[Master_House]
		,[elt_account_number]
		,[MBL_NUM]
		,[HBL_NUM]
		,[Item_Code]
		,[Description]
		,[Customer_ID]
		,[Amount]
		,[ORIGIN]
		,[DEST]
		,[Customer_Name]
		,[Date]) 

		SELECT 
		'Expense'
		,[ImportExport]
		,[AirOcean]
		,[Master_House]
		,R.[elt_account_number]
		,[MBL_NUM]
		,[HBL_NUM]
		,[Item_Code]
		,[Cost_Desc]
		,[Bill_From]
		,[Amount]
		,[ORIGIN]
		,[DEST]
		,CI.Customer_Name
		,[Date]
		FROM [dbo].[VW_OperationalCost] R inner join VW_CustomerInfo CI on R.Bill_From = CI.org_account_number and R.elt_account_number = CI.elt_account_number

		WHERE R.elt_account_number =@elt_account_number 
		COMMIT TRANSACTION ;
	END TRY
	BEGIN CATCH 
		ROLLBACK;
	END CATCH
END
GO
PRINT N'Creating [Reporting].[GetPNL]...';


GO

CREATE PROCEDURE [Reporting].[GetPNL]
	@elt_account_number int,
	@MBL_NUM NVARCHAR(100),
	@Begin DateTime,
	@End DateTime
AS
BEGIN

IF ISNULL(@MBL_NUM,'')=''


SELECT 
       [Type]
      ,[ImportExport]
      ,[AirOcean]
      ,[Master_House]
      ,[elt_account_number]
      ,[MBL_NUM]
      ,[HBL_NUM]
      ,[Item_Code]
      ,[Description]
      ,[Customer_ID]
      ,[Amount]
      ,[ORIGIN]
      ,[DEST]
      ,[Customer_Name]
      ,[Date]
  FROM  [Reporting].[PNL]  p WHERE p.[elt_account_number] =@elt_account_number 
  AND [Date] > =@Begin AND [Date] <=@End order by [Customer_Name]
  
  
  ELSE 
  
  SELECT 
       [Type]
      ,[ImportExport]
      ,[AirOcean]
      ,[Master_House]
      ,[elt_account_number]
      ,[MBL_NUM]
      ,[HBL_NUM]
      ,[Item_Code]
      ,[Description]
      ,[Customer_ID]
      ,[Amount]
      ,[ORIGIN]
      ,[DEST]
      ,[Customer_Name]
      ,[Date]
  FROM  [Reporting].[PNL]  p WHERE p.[elt_account_number] =@elt_account_number and ( MBL_NUM =@MBL_NUM )
  order by [Customer_Name]
  
  
  
  


END
GO
PRINT N'Creating [Reporting].[OEOperationReport]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[OEOperationReport]
	@Unit VARCHAR(10),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN

	SET NOCOUNT ON;
IF @Unit='LB'
	BEGIN
		SELECT 
					newId() AS KeyField,
	                isnull(a.file_no,'') as [File#],
	                b.MBOL_NUM AS [Master],
	                b.HBOL_NUM AS [House],
                	
	                Upper(isnull(b.Shipper_Name,'')) AS [Shipper],
	                 Upper(isnull(b.Consignee_Name,'')) AS [Consignee],
	                 Upper(isnull(b.Agent_Name,'')) AS [Agent],
	                 Upper(isnull(b.Export_carrier,'')) AS [Carrier],	
	                Upper(isnull(b.Loading_port,''))  AS [Origin],
	                 Upper(isnull(b.Unloading_port,'')) AS [Destination],	
	                convert(varchar(10), a.departure_date, 101) AS [Date],	
                	
	                Upper( isnull(b.SalesPerson,'')) AS [Sales Rep.],
	                Upper(isnull(b.CreatedBy,''))  AS [Processed By],
                    isnull(b.pieces,0) AS [Quantity], Case when (isnull(b.scale,'K')<>'L') then (isnull(b.Gross_weight,0)* 2.20462262 )ELSE isnull(b.Gross_weight,0) END AS [Gross Wt.],isnull(b.measurement,0) AS [Chargeable Wt.],isnull(b.Total_weight_charge,0) AS [Freight Charge],
                    isnull(b.Total_other_charge,0) AS [Other Charge]
                    
                     
                    FROM ocean_booking_number a 
                    inner JOIN HBOL_MASTER b 

                    ON a.booking_num = b.booking_num and a.elt_account_number=b.elt_account_number where a.elt_account_number =@EltAccountNumber AND (a.departure_date  >= @StartDate AND a.departure_date < DATEADD(day, 1,@EndDate)) 
                    
                    UNION SELECT
                    newId() AS KeyField,
	                isnull(a.file_no,'') as [File#],
	                a.MBOL_NUM AS [Master],
	                '' AS [House],
                	
	                 Upper(isnull(b.Shipper_Name,'')) AS [Shipper],
	                 Upper(isnull(b.Consignee_Name,'')) AS [Consignee],
	                 Upper(isnull(b.Agent_Name,'') )AS [Agent],
	                 Upper(isnull(b.Export_carrier,'')) AS [Export],
                	
	                 Upper(isnull(b.Loading_port,'') ) AS [Origin],
	                 Upper(isnull(b.Unloading_port,''))  AS [Destination],
                	
	                convert(varchar(10), a.departure_date, 101) AS [Date],
                    
                     Upper(isnull(b.SalesPerson,'') )AS [Sales Rep.],
	                Upper(isnull(b.CreatedBy,'') ) AS [Processed By],
                    isnull(b.pieces,0) AS [Quantity], Case when (isnull(b.scale,'K')<>'L') then (isnull(b.Gross_weight,0) * 2.20462262 )ELSE isnull(b.Gross_weight,0) END AS [Gross Wt.],isnull(b.measurement,0) AS [Chargeable Wt.],isnull(b.Total_weight_charge,0) AS [Freight Charge],
                    isnull(b.Total_other_charge,0) AS [Other Charge]      
                    FROM ocean_booking_number a inner JOIN MBOL_MASTER b 
                    ON a.BOOKING_NUM = b.BOOKING_NUM and a.elt_account_number=b.elt_account_number where a.elt_account_number =@EltAccountNumber AND (a.departure_date  >= @StartDate AND a.departure_date < DATEADD(day, 1,@EndDate)) AND (select COUNT(hbol_num) from hbol_master WHERE elt_account_number=@EltAccountNumber AND booking_num=b.booking_num)=0 
	END       
  ELSE 
	BEGIN 
		SELECT 
					newId() AS KeyField,
	                isnull(a.file_no,'') as [File#],
	                b.MBOL_NUM AS [Master],
	                b.HBOL_NUM AS [House],
                	
	                Upper(isnull(b.Shipper_Name,'')) AS [Shipper],
	                 Upper(isnull(b.Consignee_Name,'')) AS [Consignee],
	                 Upper(isnull(b.Agent_Name,'')) AS [Agent],
	                 Upper(isnull(b.Export_carrier,'')) AS [Carrier],	
	                Upper(isnull(b.Loading_port,''))  AS [Origin],
	                 Upper(isnull(b.Unloading_port,'')) AS [Destination],	
	                convert(varchar(10), a.departure_date, 101) AS [Date],	
                	
	                Upper( isnull(b.SalesPerson,'')) AS [Sales Rep.],
	                Upper(isnull(b.CreatedBy,''))  AS [Processed By],
                    isnull(b.pieces,0) AS [Quantity], Case when (isnull(b.scale,'K')='L') then (isnull(b.Gross_weight,0) * 0.45359237 )ELSE isnull(b.Gross_weight,0) END AS [Gross Wt.],isnull(b.measurement,0) AS [Chargeable Wt.],isnull(b.Total_weight_charge,0) AS [Freight Charge],
                    isnull(b.Total_other_charge,0) AS [Other Charge]
                    
                     
                    FROM ocean_booking_number a 
                    inner JOIN HBOL_MASTER b 

                    ON a.booking_num = b.booking_num and a.elt_account_number=b.elt_account_number where a.elt_account_number =@EltAccountNumber AND (a.departure_date  >= @StartDate AND a.departure_date < DATEADD(day, 1,@EndDate))
                     UNION SELECT
                     newId() AS KeyField,
	                isnull(a.file_no,'') as [File#],
	                a.MBOL_NUM AS [Master],
	                '' AS [House],
                	
	                 Upper(isnull(b.Shipper_Name,'')) AS [Shipper],
	                 Upper(isnull(b.Consignee_Name,'')) AS [Consignee],
	                 Upper(isnull(b.Agent_Name,'') )AS [Agent],
	                 Upper(isnull(b.Export_carrier,'')) AS [Export],
                	
	                 Upper(isnull(b.Loading_port,'') ) AS [Origin],
	                 Upper(isnull(b.Unloading_port,''))  AS [Destination],
                	
	                convert(varchar(10), a.departure_date, 101) AS [Date],
                    
                     Upper(isnull(b.SalesPerson,'') )AS [Sales Rep.],
	                Upper(isnull(b.CreatedBy,'') ) AS [Processed By],
                    isnull(b.pieces,0) AS [Quantity], Case when (isnull(b.scale,'K')='L') then (isnull(b.Gross_weight,0) * 0.45359237 )ELSE isnull(b.Gross_weight,0) END AS [Gross Wt.],isnull(b.measurement,0) AS [Chargeable Wt.],isnull(b.Total_weight_charge,0) AS [Freight Charge],
                    isnull(b.Total_other_charge,0) AS [Other Charge]  

  
    
                    FROM ocean_booking_number a inner JOIN MBOL_MASTER b 
                    ON a.BOOKING_NUM = b.BOOKING_NUM and a.elt_account_number=b.elt_account_number where a.elt_account_number =@EltAccountNumber AND (a.departure_date  >= @StartDate AND a.departure_date < DATEADD(day, 1,@EndDate)) AND (select COUNT(hbol_num) from hbol_master WHERE elt_account_number=@EltAccountNumber AND booking_num=b.booking_num)=0 
	END          
            
END
GO
PRINT N'Creating [Reporting].[OIOperationReport]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[OIOperationReport]
	@Unit VARCHAR(10),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN

	SET NOCOUNT ON;
IF @Unit='LB'
	BEGIN
		SELECT newId() AS KeyField,
                isnull(b.File_No,'') as [File#],

                a.MAWB_NUM as [Master], 
                isnull(a.HAWB_NUM,'') as [House], 
                 
                Upper(isnull(a.Shipper_name,'')) as [Shipper], 
                Upper(isnull(a.consignee_name,'')) as [Consignee], 
                Upper(isnull( b.export_agent_name,'') )as[Agent],
                Upper(isnull( b.carrier,'')) as [Carrier],


                Upper(isnull( a.dep_port,'')) as [Origin], 
                Upper(isnull(a.arr_port,'') )as [Destination],

                convert(varchar(10), a.eta , 101) as[Date], 


                Upper(isnull( a.SalesPerson,'')) as [Sales Rep.],
                Upper(isnull(a.CreatedBy,'') )as [Processed By],
                isnull(a.pieces,0) as [Quantity], case when (isnull(a.scale1,'KG') <> 'LB') then (isnull(a.gross_wt,0)*2.20462262) Else isnull(a.gross_wt,0) End as [Gross Wt.], case when(isnull(a.scale2,'CBM')='CFT') then (isnull(a.chg_wt,0)/40) Else isnull(a.chg_wt,0) End as [Chargeable Wt.],isnull(a.freight_collect,0) as [Freight Charge],
                isnull(a.oc_collect,0) as[Other Charge],
                isnull(a.sec,1) as[sec]

                from import_hawb a 

                left outer join import_mawb b
                on a.mawb_num=b.mawb_num
                where a.itype='O'and a.elt_account_number = @EltAccountNumber and a.elt_account_number = b.elt_account_number  and ( a.eta >= @StartDate and  a.eta  < DATEADD(day, 1,@EndDate))  
	END       
  ELSE 
	BEGIN 
		SELECT newId() AS KeyField,
                isnull(b.File_No,'') as [File#],

                a.MAWB_NUM as [Master], 
                isnull(a.HAWB_NUM,'') as [House], 
                 
                Upper(isnull(a.Shipper_name,'')) as [Shipper], 
                Upper(isnull(a.consignee_name,'')) as [Consignee], 
                Upper(isnull( b.export_agent_name,'') )as[Agent],
                Upper(isnull( b.carrier,'')) as [Carrier],


                Upper(isnull( a.dep_port,'')) as [Origin], 
                Upper(isnull(a.arr_port,'') )as [Destination],

                convert(varchar(10), a.eta , 101) as[Date], 


                Upper(isnull( a.SalesPerson,'')) as [Sales Rep.],
                Upper(isnull(a.CreatedBy,'') )as [Processed By],
                isnull(a.pieces,0) as [Quantity], case when (isnull(a.scale1,'KG')='LB') then (isnull(a.gross_wt,0)*0.45359237) Else isnull(a.gross_wt,0) End as [Gross Wt.], case when(isnull(a.scale2,'CBM')='CFT') then (isnull(a.chg_wt,0)/40) Else isnull(a.chg_wt,0) End as [Chargeable Wt.],isnull(a.freight_collect,0) as [Freight Charge],
                isnull(a.oc_collect,0) as[Other Charge],
                isnull(a.sec,1) as[sec]

                from import_hawb a 

                left outer join import_mawb b
                on a.mawb_num=b.mawb_num
                where a.itype='O'and a.elt_account_number = @EltAccountNumber and a.elt_account_number = b.elt_account_number  and ( a.eta >= @StartDate and  a.eta  < DATEADD(day, 1,@EndDate)) 
	END          
            
END
GO
PRINT N'Creating [Reporting].[AIOperationReport]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[AIOperationReport]
	@Unit VARCHAR(10),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN

	SET NOCOUNT ON;
IF @Unit='LB'
	BEGIN
		SELECT 
				newId() AS KeyField,
                isnull(b.File_No,'') as [File#],

                a.MAWB_NUM as [Master], 
                isnull(a.HAWB_NUM,'') as [House], 
                 
                Upper(isnull(a.Shipper_name,'')) as [Shipper], 
                Upper(isnull(a.consignee_name,'')) as [Consignee], 
                Upper(isnull( b.export_agent_name,'') )as[Agent],
                Upper(isnull( b.carrier,'') )as [Carrier],


                Upper(isnull( a.dep_port,'')) as [Origin], 
                Upper(isnull(a.arr_port,'')) as [Destination],

                convert(varchar(10), a.eta , 101) as[Date], 


                Upper(isnull( a.SalesPerson,'')) as [Sales Rep.],
                Upper(isnull(a.CreatedBy,'')) as [Processed By],
                isnull(a.pieces,0) as [Quantity], case when (isnull(a.scale1,'LB')='KG') then (isnull(a.gross_wt,0)*2.20462262) Else isnull(a.gross_wt,0) End as [Gross Wt.], case when(isnull(a.scale1,'LB')='KG') then (isnull(a.chg_wt,0)*2.20462262) Else isnull(a.chg_wt,0) End as [Chargeable Wt.],isnull(a.freight_collect,0) as [Freight Charge],
                isnull(a.oc_collect,0) as[Other Charge],
                isnull(a.sec,1) as[sec]
                
                from import_hawb a 

                left outer join import_mawb b
                on a.mawb_num=b.mawb_num
                where a.itype='A'and a.elt_account_number = @EltAccountNumber and a.elt_account_number = b.elt_account_number  AND (CAST(CASE WHEN ISDATE(a.eta)=1 THEN a.eta END AS DATETIME)>=CONVERT(DATETIME,@StartDate)AND CAST(CASE WHEN ISDATE(a.eta)=1 THEN a.eta END AS DATETIME)<CONVERT(DATETIME,@EndDate)) ORDER BY [Agent]
	END       
  ELSE 
	BEGIN 
		SELECT 
				newId() AS KeyField,
                isnull(b.File_No,'') as [File#],

                a.MAWB_NUM as [Master], 
                isnull(a.HAWB_NUM,'') as [House], 
                 
                Upper(isnull(a.Shipper_name,'')) as [Shipper], 
                Upper(isnull(a.consignee_name,'')) as [Consignee], 
                Upper(isnull( b.export_agent_name,'') )as[Agent],
                Upper(isnull( b.carrier,'') )as [Carrier],


                Upper(isnull( a.dep_port,'')) as [Origin], 
                Upper(isnull(a.arr_port,'')) as [Destination],

                convert(varchar(10), a.eta , 101) as[Date], 


                Upper(isnull( a.SalesPerson,'')) as [Sales Rep.],
                Upper(isnull(a.CreatedBy,'')) as [Processed By],
                isnull(a.pieces,0) as [Quantity], case when (isnull(a.scale1,'LB')<>'KG') then (isnull(a.gross_wt,0)*0.45359237) Else isnull(a.gross_wt,0) End as [Gross Wt.], case when(isnull(a.scale2,'LB')<>'KG') then (isnull(a.chg_wt,0)*0.45359237) Else isnull(a.chg_wt,0) End as [Chargeable Wt.],isnull(a.freight_collect,0) as [Freight Charge],
                isnull(a.oc_collect,0) as[Other Charge],
                isnull(a.sec,1) as[sec]
                
                from import_hawb a 

                left outer join import_mawb b
                on a.mawb_num=b.mawb_num
                where a.itype='A'and a.elt_account_number = @EltAccountNumber and a.elt_account_number = b.elt_account_number  AND (CAST(CASE WHEN ISDATE(a.eta)=1 THEN a.eta END AS DATETIME)>=CONVERT(DATETIME,@StartDate)AND CAST(CASE WHEN ISDATE(a.eta)=1 THEN a.eta END AS DATETIME)<CONVERT(DATETIME,@EndDate)) ORDER BY [Agent]
	END          
            
END
GO
PRINT N'Creating [Reporting].[AEOperationReport]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[AEOperationReport]
	@Unit VARCHAR(10),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN

	SET NOCOUNT ON;
IF @Unit='LB'
	BEGIN
		SELECT 
			newId() AS KeyField,
			isnull(b.file#,'') as [File#], 
			a.MAWB_NUM AS [Master], 
			a.HAWB_NUM AS [House], 
			Upper(isnull(a.Shipper_Name,''))  AS [Shipper],
			Upper(isnull(a.Consignee_Name,''))  AS [Consignee],
			Upper(isnull(a.Agent_Name,''))  AS [Agent],
			Upper(isnull(a.by_1,'') ) AS [Carrier],
			Upper(isnull(a.Departure_Airport,''))  AS [Origin],
			Upper(isnull(a.Dest_Airport,''))  AS [Destination],
			convert(varchar(10), a.export_date, 101) AS [Date],
			Upper(isnull(a.SalesPerson,'')) As [Sales Rep.],
			Upper(isnull(a.CreatedBy,'')) As [Processed By],		    
			isnull(a.Total_Pieces,0) AS [Quantity],		    
			CASE WHEN ( isnull(g.kg_lb,'L') = 'K' ) then ( isnull(a.Total_Gross_Weight,0) * 2.20462262 )  ELSE  isnull(a.Total_Gross_Weight,0) END AS [Gross Wt.]
		    
			,CASE WHEN ( isnull(g.kg_lb,'L') = 'K' ) then ( isnull(a.Total_Chargeable_Weight,0) * 2.20462262 )  ELSE  isnull(a.Total_Chargeable_Weight,0)END AS [Chargeable Wt.]
			,isnull(a.Total_Weight_Charge_HAWB,0) AS [Freight Charge], 
			isnull(a.Total_Other_Charges,0) AS [Other Charge] 
			FROM HAWB_master a left outer join mawb_number b 
			on a.elt_account_number = b.elt_account_number and a.mawb_num = b.mawb_no 
		   
			INNER JOIN hawb_weight_charge g
			On a.elt_account_number=g.elt_account_number and a.HAWB_NUM =g.HAWB_NUM where a.elt_account_number =@EltAccountNumber AND (a.export_date >= @StartDate AND a.export_date < DATEADD(day, 1,@EndDate)) and a.is_dome='N'
			
			UNION SELECT
			newId() AS KeyField,
			isnull(d.file#,'') as [File#],
			c.MAWB_NUM AS [Master],
			'' AS [House],
			Upper(isnull(c.Shipper_Name,''))  AS [Shipper],
			Upper(isnull(c.Consignee_Name,''))  AS [Consignee], 
			Upper(isnull(e.dba_name,''))  AS [Agent],
			Upper(isnull(c.by_1,''))  AS [Carrier],
			Upper(isnull(c.Departure_Airport,''))  AS [Origin], 
			Upper(isnull(c.Dest_Airport,''))  AS [Destination], 
			convert(varchar(10), d.ETD_DATE1, 101) AS [Date],
			Upper(isnull(c.SalesPerson,'')) As [Sales Rep.],
			Upper(isnull(c.CreatedBy,'')) As [Processed By],
			isnull(c.Total_Pieces,0) AS [Quantity], CASE WHEN ( isnull(f.kg_lb,'L') = 'K' ) then ( isnull(c.Total_Gross_Weight,0) * 2.20462262 )  ELSE  isnull(c.Total_Gross_Weight,0) END AS [Gross Wt.],CASE WHEN ( isnull(f.kg_lb,'L') = 'K' ) then ( isnull(c.Total_Chargeable_Weight,0) * 2.20462262 )  ELSE  isnull(c.Total_Chargeable_Weight,0)END AS [Chargeable Wt.],isnull(c.Total_Weight_Charge_HAWB,0) AS [Freight Charge],
			isnull(c.Total_Other_Charges,0) AS [Other Charge]
			FROM MAWB_master c left outer JOIN MAWB_NUMBER d 
			ON c.elt_account_number=d.elt_account_number and c.MAWB_NUM = d.MAWB_NO 
		   
			INNER JOIN organization e 
			ON e.elt_account_number=d.elt_account_number and e.org_account_number=c.master_agent 
		  
			INNER JOIN mawb_weight_charge f
			On e.elt_account_number=f.elt_account_number and c.MAWB_NUM =f.MAWB_NUM 
			WHERE d.elt_account_number =@EltAccountNumber AND ( d.ETD_DATE1 >= @StartDate AND  d.ETD_DATE1 < DATEADD(day, 1,@EndDate)) and (select COUNT(hawb_num) from hawb_master WHERE elt_account_number=@EltAccountNumber AND mawb_num=c.mawb_num)=0 and c.is_dome='N' 
	END       
  ELSE 
	BEGIN 
		SELECT 
		newId() AS KeyField,
		isnull(b.file#,'') as [File#], 
		a.MAWB_NUM AS [Master], 
		a.HAWB_NUM AS [House], 
		Upper(isnull(a.Shipper_Name,''))  AS [Shipper],
		Upper(isnull(a.Consignee_Name,''))  AS [Consignee],
		Upper(isnull(a.Agent_Name,''))  AS [Agent],
		Upper(isnull(a.by_1,'') ) AS [Carrier],
		Upper(isnull(a.Departure_Airport,''))  AS [Origin],
		Upper(isnull(a.Dest_Airport,''))  AS [Destination],
		convert(varchar(10), a.export_date, 101) AS [Date],
		Upper(isnull(a.SalesPerson,'')) As [Sales Rep.],
		Upper(isnull(a.CreatedBy,'')) As [Processed By],
		isnull(a.Total_Pieces,0) AS [Quantity],CASE WHEN ( isnull(g.kg_lb,'L') <>'K' ) then ( isnull(a.Total_Gross_Weight,0) * 0.45359237 )  ELSE  isnull(a.Total_Gross_Weight,0) END AS [Gross Wt.],CASE WHEN (isnull(g.kg_lb,'L')<> 'K' ) then ( isnull(a.Total_Chargeable_Weight,0) * 0.45359237 )  ELSE  isnull(a.Total_Chargeable_Weight,0)END AS [Chargeable Wt.],isnull(a.Total_Weight_Charge_HAWB,0) AS [Freight Charge], 
		isnull(a.Total_Other_Charges,0) AS [Other Charge] 
		FROM HAWB_master a left outer join mawb_number b 
		on a.elt_account_number = b.elt_account_number and a.mawb_num = b.mawb_no 

		INNER JOIN hawb_weight_charge g
		On a.elt_account_number=g.elt_account_number and a.HAWB_NUM =g.HAWB_NUM where a.elt_account_number =@EltAccountNumber AND (a.export_date >= @StartDate AND a.export_date < DATEADD(day, 1,@EndDate)) and a.is_dome='N'
		
		UNION SELECT
		newId() AS KeyField,
		isnull(d.file#,'') as [File#],
		c.MAWB_NUM AS [Master],
		'' AS [House],
		Upper(isnull(c.Shipper_Name,''))  AS [Shipper],
		Upper(isnull(c.Consignee_Name,''))  AS [Consignee], 
		Upper(isnull(e.dba_name,''))  AS [Agent],
		Upper(isnull(c.by_1,''))  AS [Carrier],
		Upper(isnull(c.Departure_Airport,''))  AS [Origin], 
		Upper(isnull(c.Dest_Airport,''))  AS [Destination], 
		convert(varchar(10), d.ETD_DATE1, 101) AS [Date],
		Upper(isnull(c.SalesPerson,'')) As [Sales Rep.],
		Upper(isnull(c.CreatedBy,'')) As [Processed By],
		isnull(c.Total_Pieces,0) AS [Quantity], CASE WHEN ( isnull(f.kg_lb,'L') <> 'K' ) then ( isnull(c.Total_Gross_Weight,0) * 0.45359237 )  ELSE  isnull(c.Total_Gross_Weight,0) END AS [Gross Wt.],CASE WHEN ( isnull(f.kg_lb,'L') <>'K' ) then ( isnull(c.Total_Chargeable_Weight,0) * 0.45359237 )  ELSE  isnull(c.Total_Chargeable_Weight,0)END AS [Chargeable Wt.],isnull(c.Total_Weight_Charge_HAWB,0) AS [Freight Charge],
		isnull(c.Total_Other_Charges,0) AS [Other Charge]
		FROM MAWB_master c left outer JOIN MAWB_NUMBER d 
		ON c.elt_account_number=d.elt_account_number and c.MAWB_NUM = d.MAWB_NO 

		INNER JOIN organization e 
		ON e.elt_account_number=d.elt_account_number and e.org_account_number=c.master_agent 

		INNER JOIN mawb_weight_charge f
		On e.elt_account_number=f.elt_account_number and c.MAWB_NUM =f.MAWB_NUM 
		WHERE d.elt_account_number =@EltAccountNumber AND ( d.ETD_DATE1 >= @StartDate AND  d.ETD_DATE1 < DATEADD(day, 1,@EndDate)) and (select COUNT(hawb_num) from hawb_master WHERE elt_account_number=@EltAccountNumber AND mawb_num=c.mawb_num)=0 and c.is_dome='N' 

	END          
            
END
GO
PRINT N'Creating [Reporting].[APDetail]...';


GO


-- =============================================
CREATE PROCEDURE [Reporting].[APDetail]
	@GLAccountType VARCHAR(128), --@GLAccountType
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	IF LEN(CAST(@EltAccountNumber AS varchar(20))) >5
		BEGIN
				 (SELECT c.elt_account_number,
					c.customer_name,
					c.customer_number,
					c.date,
					c.type,
					c.air_ocean,
					c.num,
					c.check_no,
					c.memo,
					Sum(c.debit_amount)  AS debit_amount,
					Sum(c.credit_amount) AS credit_amount,
					Sum(0)               AS balance
			 FROM   (SELECT a.elt_account_number,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN
							  '_Fiscal Closing of 2006'
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN (
							  CASE
							  WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
							  ELSE o.dba_name + ' ['
								   + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
							  END )
							END                                         AS Customer_Name,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN '300000'
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  customer_number
							END                                         AS Customer_Number,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN ''
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  tran_type
							END                                         AS Type,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN ''
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  tran_date
							END                                         AS Date,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN ''
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  air_ocean
							END                                         AS Air_Ocean,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN ''
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  tran_num
							END                                         AS Num,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN 0
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  check_no
							END                                         AS Check_No,
							CASE
							  WHEN ( tran_date = @StartDate
									 AND Isnull(flag_close, '') = 'Y' ) THEN ''
							  WHEN ( tran_date >= @StartDate
									 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
							  memo
							END                                         AS Memo,
							Sum(debit_amount + Isnull(debit_memo, 0))   AS debit_amount,
							Sum(credit_amount + Isnull(credit_memo, 0)) AS credit_amount
					 FROM   gl b,
							all_accounts_journal a
							LEFT OUTER JOIN organization o
										 ON a.elt_account_number = o.elt_account_number
											AND a.customer_number = o.org_account_number
					 WHERE  a.elt_account_number = b.elt_account_number
							AND a.elt_account_number = @EltAccountNumber
							AND a.gl_account_number = b.gl_account_number
							AND b.gl_account_type = @GLAccountType
							AND ( tran_date >= @StartDate
								  AND tran_date < Dateadd(day, 1, @EndDate)
								   OR tran_type = 'INIT' )
					 GROUP  BY a.elt_account_number,
							   o.dba_name,
							   o.class_code,
							   customer_number,
							   tran_type,
							   tran_date,
							   flag_close,
							   air_ocean,
							   tran_num,
							   check_no,
							   memo)c
			 WHERE  Isnull(c.customer_name, '') <> ''
			 GROUP  BY c.elt_account_number,
					   c.customer_name,
					   c.customer_number,
					   c.type,
					   c.date,
					   c.air_ocean,
					   c.num,
					   c.check_no,
					   c.memo)
			UNION
			(SELECT a.elt_account_number,
					CASE
					  WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
					  ELSE o.dba_name + ' ['
						   + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
					END                                         AS Customer_Name,
					customer_number,
					NULL                                        AS Date,
					'Start Balance'                                       AS Type,
					''                                          AS air_ocean,
					''                                          AS Num,
					NULL                                        AS Check_No,
					''                                          AS memo,
					0                                           AS debit_amount,
					0                                           AS credit_amount,
					Sum(debit_amount+Isnull(debit_memo, 0))
					+ Sum(credit_amount+Isnull(credit_memo, 0)) AS balance
			 FROM   gl b,
					all_accounts_journal a
					LEFT OUTER JOIN organization o
								 ON a.elt_account_number = o.elt_account_number
									AND a.customer_number = o.org_account_number
			 WHERE  a.elt_account_number = b.elt_account_number
					AND a.elt_account_number = @EltAccountNumber
					AND a.gl_account_number = b.gl_account_number
					AND b.gl_account_type = @GLAccountType
					AND tran_date < @StartDate
					AND Isnull(customer_name, '') <> ''
					AND Isnull(flag_close, '') = ''
			 GROUP  BY a.elt_account_number,
					   o.dba_name,
					   o.class_code,
					   customer_number
			 HAVING ( Sum(debit_amount+Isnull(debit_memo, 0))
					  + Sum(credit_amount+Isnull(credit_memo, 0)) ) <> 0)
			ORDER  BY elt_account_number,
					  customer_name,
					  customer_number,
					  date,
					  type,
					  air_ocean,
					  num,
					  memo  
		END          
	ELSE
		BEGIN
			 (SELECT c.elt_account_number,
				c.customer_name,
				c.customer_number,
				c.date,
				c.type,
				c.air_ocean,
				c.num,
				c.check_no,
				c.memo,
				Sum(c.debit_amount)  AS debit_amount,
				Sum(c.credit_amount) AS credit_amount,
				Sum(0)               AS balance
		 FROM   (SELECT a.elt_account_number,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN
						  '_Fiscal Closing of 2006'
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN (
						  CASE
						  WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
						  ELSE o.dba_name + ' ['
							   + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
						  END )
						END                                         AS Customer_Name,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN '300000'
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  customer_number
						END                                         AS Customer_Number,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_type
						END                                         AS Type,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_date
						END                                         AS Date,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  air_ocean
						END                                         AS Air_Ocean,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_num
						END                                         AS Num,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN 0
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  check_no
						END                                         AS Check_No,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  memo
						END                                         AS Memo,
						Sum(debit_amount + Isnull(debit_memo, 0))   AS debit_amount,
						Sum(credit_amount + Isnull(credit_memo, 0)) AS credit_amount
				 FROM   gl b,
						all_accounts_journal a
						LEFT OUTER JOIN organization o
									 ON a.elt_account_number = o.elt_account_number
										AND a.customer_number = o.org_account_number
				 WHERE  a.elt_account_number = b.elt_account_number
						AND LEFT(a.elt_account_number, 5) = @EltAccountNumber
						AND a.gl_account_number = b.gl_account_number
						AND b.gl_account_type = @GLAccountType
						AND ( tran_date >= @StartDate
							  AND tran_date < Dateadd(day, 1, @EndDate)
							   OR tran_type = 'INIT' )
				 GROUP  BY a.elt_account_number,
						   o.dba_name,
						   o.class_code,
						   customer_number,
						   tran_type,
						   tran_date,
						   flag_close,
						   air_ocean,
						   tran_num,
						   check_no,
						   memo)c
		 WHERE  Isnull(c.customer_name, '') <> ''
		 GROUP  BY c.elt_account_number,
				   c.customer_name,
				   c.customer_number,
				   c.type,
				   c.date,
				   c.air_ocean,
				   c.num,
				   c.check_no,
				   c.memo)
		UNION
		(SELECT a.elt_account_number,
				CASE
				  WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
				  ELSE o.dba_name + ' ['
					   + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
				END                                         AS Customer_Name,
				customer_number,
				NULL                                        AS Date,
				'Start Balance'                                       AS Type,
				''                                          AS air_ocean,
				''                                          AS Num,
				NULL                                        AS Check_No,
				''                                          AS memo,
				0                                           AS debit_amount,
				0                                           AS credit_amount,
				Sum(debit_amount+Isnull(debit_memo, 0))
				+ Sum(credit_amount+Isnull(credit_memo, 0)) AS balance
		 FROM   gl b,
				all_accounts_journal a
				LEFT OUTER JOIN organization o
							 ON a.elt_account_number = o.elt_account_number
								AND a.customer_number = o.org_account_number
		 WHERE  a.elt_account_number = b.elt_account_number
				AND LEFT(a.elt_account_number, 5) = @EltAccountNumber
				AND a.gl_account_number = b.gl_account_number
				AND b.gl_account_type = @GLAccountType
				AND tran_date < @StartDate
				AND Isnull(customer_name, '') <> ''
				AND Isnull(flag_close, '') = ''
		 GROUP  BY a.elt_account_number,
				   o.dba_name,
				   o.class_code,
				   customer_number
		 HAVING ( Sum(debit_amount+Isnull(debit_memo, 0))
				  + Sum(credit_amount+Isnull(credit_memo, 0)) ) <> 0)
		ORDER  BY elt_account_number,
				  customer_name,
				  customer_number,
				  date,
				  type,
				  air_ocean,
				  num,
				  memo  



	END
END
GO
PRINT N'Creating [Reporting].[ARDetail]...';


GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[ARDetail]
	@GLAccountType VARCHAR(128),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN

	SET NOCOUNT ON;

	IF LEN(CAST(@EltAccountNumber AS varchar(20))) >5
			BEGIN
				
				 (SELECT c.elt_account_number,
				c.customer_name,
				c.customer_number,
				c.date,
				c.type,
				c.air_ocean,
				c.num,
				CASE
				  WHEN c.type = 'PMT' THEN c.memo
				  WHEN ( c.type = 'INV'
						  OR c.type = 'ARN' ) THEN (SELECT ref_no
													FROM   invoice
													WHERE
				  elt_account_number = c.elt_account_number
				  AND invoice_no = c.num)
				  ELSE ''
				END                  AS memo,
				CASE
				  WHEN c.type = 'PMT' THEN (SELECT TOP 1 ref_no_our
											FROM   invoice x
				  LEFT OUTER JOIN customer_payment_detail y
							   ON
				  x.elt_account_number = y.elt_account_number
				  AND x.invoice_no = y.invoice_no
											WHERE
				  y.elt_account_number = c.elt_account_number
				  AND y.payment_no = c.num)
				  WHEN ( c.type = 'INV'
						  OR c.type = 'ARN' ) THEN (SELECT ref_no_our
													FROM   invoice
													WHERE
				  elt_account_number = c.elt_account_number
				  AND invoice_no = c.num)
				  ELSE ''
				END                  AS file_no,
				Sum(c.debit_amount)  AS debit_amount,
				Sum(c.credit_amount) AS credit_amount,
				Sum(0)               AS balance,
				c.email,
				c.status,
				c.auto_uid
		 FROM   (SELECT a.elt_account_number,
						CASE
						 -- WHEN ( tran_date = @StartDate
						  --       AND Isnull(flag_close, '') = 'Y' ) THEN
						 -- '_Fiscal Closing of '+tran_date
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN (
						  CASE
						  WHEN Isnull(d.class_code, '') = '' THEN d.dba_name
						  ELSE d.dba_name 
						  --+ ' ['  + Rtrim(Ltrim(Isnull(d.class_code, ''))) + ']'
						  END )
						END                                         AS Customer_Name,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN '300000'
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  customer_number
						END                                         AS Customer_Number,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_type
						END                                         AS Type,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_date
						END                                         AS Date,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  air_ocean
						END                                         AS Air_Ocean,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_num
						END                                         AS Num,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  memo
						END                                         AS Memo,
						Sum(debit_amount + Isnull(debit_memo, 0))   AS debit_amount,
						Sum(credit_amount + Isnull(credit_memo, 0)) AS credit_amount,
						d.owner_email                               AS email,
						e.status                                    AS status,
						e.auto_uid
				 FROM   gl b
						INNER JOIN all_accounts_journal a
								ON b.elt_account_number = a.elt_account_number
								   AND a.gl_account_number = b.gl_account_number
						LEFT OUTER JOIN organization d
									 ON a.elt_account_number = d.elt_account_number
										AND a.customer_number = d.org_account_number
						LEFT OUTER JOIN email_report e
									 ON d.elt_account_number = e.elt_account_number
										AND d.org_account_number = e.company
				 WHERE  a.elt_account_number = @EltAccountNumber
						AND b.gl_account_type = @GLAccountType
						AND ( tran_date >= @StartDate
							  AND tran_date < Dateadd(day, 1, @EndDate)
							   OR tran_type = 'INIT' )
						AND ( e.auto_uid IN (SELECT Max(auto_uid)
											 FROM   email_report
											 GROUP  BY elt_account_number,
													   company)
							   OR Isnull(e.auto_uid, '') = '' )
				 GROUP  BY a.elt_account_number,
						   d.dba_name,
						   d.class_code,
						   customer_number,
						   tran_type,
						   tran_date,
						   flag_close,
						   air_ocean,
						   tran_num,
						   memo,
						   owner_email,
						   status,
						   auto_uid) c
		 WHERE  Isnull(c.customer_name, '') <> ''
		 GROUP  BY c.elt_account_number,
				   c.customer_name,
				   c.customer_number,
				   c.type,
				   c.date,
				   c.air_ocean,
				   c.num,
				   c.memo,
				   c.email,
				   c.status,
				   c.auto_uid)
		UNION
		(SELECT a.elt_account_number,
				customer_name,
				customer_number,
				NULL                                        AS Date,
				'Start Balance'                                       AS Type,
				''                                          AS air_ocean,
				''                                          AS Num,
				''                                          AS memo,
				''                                          AS file_no,
				null                                           AS debit_amount,
				null                                           AS credit_amount,
				Sum(debit_amount+Isnull(debit_memo, 0))
				+ Sum(credit_amount+Isnull(credit_memo, 0)) AS balance,
				d.owner_email                               AS email,
				e.status,
				e.auto_uid
		 FROM   gl b
				INNER JOIN all_accounts_journal a
						ON b.elt_account_number = a.elt_account_number
						   AND a.gl_account_number = b.gl_account_number
				LEFT OUTER JOIN organization d
							 ON a.elt_account_number = d.elt_account_number
								AND a.customer_number = d.org_account_number
				LEFT OUTER JOIN email_report e
							 ON d.elt_account_number = e.elt_account_number
								AND d.org_account_number = e.company
		 WHERE  a.elt_account_number = @EltAccountNumber
				AND b.gl_account_type = @GLAccountType
				AND tran_date < @StartDate
				AND Isnull(customer_name, '') <> ''
				AND Isnull(flag_close, '') = ''
				AND ( e.auto_uid IN (SELECT Max(auto_uid)
									 FROM   email_report
									 GROUP  BY elt_account_number,
											   company)
					   OR Isnull(e.auto_uid, '') = '' )
		 GROUP  BY a.elt_account_number,
				   customer_name,
				   customer_number,
				   d.owner_email,
				   e.status,
				   e.auto_uid
		 HAVING ( Sum(debit_amount+Isnull(debit_memo, 0))
				  + Sum(credit_amount+Isnull(credit_memo, 0)) ) <> 0)
		ORDER  BY elt_account_number,
				  customer_name,
				  customer_number,
				  date,
				  type,
				  air_ocean,
				  num,
				  memo  


			END       
     ELSE
		BEGIN
			 (SELECT c.elt_account_number,
				c.customer_name,
				c.customer_number,
				c.date,
				c.type,
				c.air_ocean,
				c.num,
				CASE
				  WHEN c.type = 'PMT' THEN c.memo
				  WHEN ( c.type = 'INV'
						  OR c.type = 'ARN' ) THEN (SELECT ref_no
													FROM   invoice
													WHERE
				  elt_account_number = c.elt_account_number
				  AND invoice_no = c.num)
				  ELSE ''
				END                  AS memo,
				CASE
				  WHEN c.type = 'PMT' THEN (SELECT TOP 1 ref_no_our
											FROM   invoice x
				  LEFT OUTER JOIN customer_payment_detail y
							   ON
				  x.elt_account_number = y.elt_account_number
				  AND x.invoice_no = y.invoice_no
											WHERE
				  y.elt_account_number = c.elt_account_number
				  AND y.payment_no = c.num)
				  WHEN ( c.type = 'INV'
						  OR c.type = 'ARN' ) THEN (SELECT ref_no_our
													FROM   invoice
													WHERE
				  elt_account_number = c.elt_account_number
				  AND invoice_no = c.num)
				  ELSE ''
				END                  AS file_no,
				Sum(c.debit_amount)  AS debit_amount,
				Sum(c.credit_amount) AS credit_amount,
				Sum(0)               AS balance,
				c.email,
				c.status,
				c.auto_uid
		 FROM   (SELECT a.elt_account_number,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN
						  '_Fiscal Closing of 2006'
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN (
						  CASE
						  WHEN Isnull(d.class_code, '') = '' THEN d.dba_name
						  ELSE d.dba_name + ' ['
							   + Rtrim(Ltrim(Isnull(d.class_code, ''))) + ']'
						  END )
						END                                         AS Customer_Name,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN '300000'
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  customer_number
						END                                         AS Customer_Number,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_type
						END                                         AS Type,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_date
						END                                         AS Date,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  air_ocean
						END                                         AS Air_Ocean,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  tran_num
						END                                         AS Num,
						CASE
						  WHEN ( tran_date = @StartDate
								 AND Isnull(flag_close, '') = 'Y' ) THEN ''
						  WHEN ( tran_date >= @StartDate
								 AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						  memo
						END                                         AS Memo,
						Sum(debit_amount + Isnull(debit_memo, 0))   AS debit_amount,
						Sum(credit_amount + Isnull(credit_memo, 0)) AS credit_amount,
						d.owner_email                               AS email,
						e.status                                    AS status,
						e.auto_uid
				 FROM   gl b
						INNER JOIN all_accounts_journal a
								ON b.elt_account_number = a.elt_account_number
								   AND a.gl_account_number = b.gl_account_number
						LEFT OUTER JOIN organization d
									 ON a.elt_account_number = d.elt_account_number
										AND a.customer_number = d.org_account_number
						LEFT OUTER JOIN email_report e
									 ON d.elt_account_number = e.elt_account_number
										AND d.org_account_number = e.company
				 WHERE  LEFT(a.elt_account_number, 5) = @EltAccountNumber
						AND b.gl_account_type = @GLAccountType
						AND ( tran_date >= @StartDate
							  AND tran_date < Dateadd(day, 1, @EndDate)
							   OR tran_type = 'INIT' )
						AND ( e.auto_uid IN (SELECT Max(auto_uid)
											 FROM   email_report
											 GROUP  BY elt_account_number,
													   company)
							   OR Isnull(e.auto_uid, '') = '' )
				 GROUP  BY a.elt_account_number,
						   d.dba_name,
						   d.class_code,
						   customer_number,
						   tran_type,
						   tran_date,
						   flag_close,
						   air_ocean,
						   tran_num,
						   memo,
						   owner_email,
						   status,
						   auto_uid) c
		 WHERE  Isnull(c.customer_name, '') <> ''
		 GROUP  BY c.elt_account_number,
				   c.customer_name,
				   c.customer_number,
				   c.type,
				   c.date,
				   c.air_ocean,
				   c.num,
				   c.memo,
				   c.email,
				   c.status,
				   c.auto_uid)
		UNION
		(SELECT a.elt_account_number,
				customer_name,
				customer_number,
				NULL                                        AS Date,
				'Start Balance'                                       AS Type,
				''                                          AS air_ocean,
				''                                          AS Num,
				''                                          AS memo,
				''                                          AS file_no,
				0                                           AS debit_amount,
				0                                           AS credit_amount,
				Sum(debit_amount+Isnull(debit_memo, 0))
				+ Sum(credit_amount+Isnull(credit_memo, 0)) AS balance,
				d.owner_email                               AS email,
				e.status,
				e.auto_uid
		 FROM   gl b
				INNER JOIN all_accounts_journal a
						ON b.elt_account_number = a.elt_account_number
						   AND a.gl_account_number = b.gl_account_number
				LEFT OUTER JOIN organization d
							 ON a.elt_account_number = d.elt_account_number
								AND a.customer_number = d.org_account_number
				LEFT OUTER JOIN email_report e
							 ON d.elt_account_number = e.elt_account_number
								AND d.org_account_number = e.company
		 WHERE  LEFT(a.elt_account_number, 5) = @EltAccountNumber
				AND b.gl_account_type = @GLAccountType
				AND tran_date < @StartDate
				AND Isnull(customer_name, '') <> ''
				AND Isnull(flag_close, '') = ''
				AND ( e.auto_uid IN (SELECT Max(auto_uid)
									 FROM   email_report
									 GROUP  BY elt_account_number,
											   company)
					   OR Isnull(e.auto_uid, '') = '' )
		 GROUP  BY a.elt_account_number,
				   customer_name,
				   customer_number,
				   d.owner_email,
				   e.status,
				   e.auto_uid
		 HAVING ( Sum(debit_amount+Isnull(debit_memo, 0))
				  + Sum(credit_amount+Isnull(credit_memo, 0)) ) <> 0)
		ORDER  BY elt_account_number,
				  customer_name,
				  customer_number,
				  date,
				  type,
				  air_ocean,
				  num,
				  memo  
		
		END 
END
GO
PRINT N'Creating [Reporting].[BalanceSheetReport]...';


GO


CREATE PROCEDURE [Reporting].[BalanceSheetReport]
	@EndDate datetime,	
	@EltAccountNumber int 
AS
DECLARE @FirstDateOfThisYear datetime
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SET @FirstDateOfThisYear = ( select DateAdd(dd, DAY(0)-1, DateAdd(mm, MONTH(0)-1, DateAdd(yy, YEAR(@EndDate)-2000, '20000101'))))
		SELECT 
			CASE
			WHEN b.gl_master_type = 'REVENUE'
				   OR b.gl_master_type = 'EXPENSE'	THEN 'Liability & Equity'
			WHEN b.gl_master_type = 'ASSET'			THEN 'Asset' 
			WHEN b.gl_master_type = 'EQUITY'		THEN 'Liability & Equity'
			WHEN b.gl_master_type = 'LIABILITY'		THEN 'Liability & Equity'
			ELSE b.gl_master_type 	   
			END												AS Header,
			
			CASE
			 WHEN b.gl_master_type = 'REVENUE'
				   OR b.gl_master_type = 'EXPENSE' THEN 'EQUITY'
			 ELSE b.gl_master_type
		   END                                               AS Type,
		   CASE
			 WHEN b.gl_account_type = 'Cash in Bank'
				   OR b.gl_account_type = 'Accounts Receivable' THEN 'Current Asset'
			 WHEN b.gl_account_type = 'Accounts Payable' THEN 'Current Liability'
			 WHEN b.gl_account_type = 'Other Revenue'
				   OR b.gl_account_type = 'Revenue' THEN 'Equity-Retained Earnings'
			 WHEN b.gl_account_type = 'Expense'
				   OR b.gl_account_type = 'Cost of Sales'
				   OR b.gl_account_type = 'Other Expense' THEN
			 'Equity-Retained Earnings'
			 ELSE b.gl_account_type
		   END                                               AS gl_account_type,
		   b.gl_account_type                                 AS gl_account_type2,
		   a.gl_account_number                               AS GL_Number,
		   a.gl_account_name                                 AS GL_Name,
		   Sum(a.debit_amount + Isnull(a.debit_memo, 0)
			   + a.credit_amount + Isnull(a.credit_memo, 0)) AS Amount,
		   Sum(b.gl_begin_balance)                           AS Begin_Balance
	FROM   all_accounts_journal a,
		   gl b
	WHERE  a.elt_account_number = b.elt_account_number
		   AND a.elt_account_number = @EltAccountNumber
		   AND a.gl_account_number = b.gl_account_number
		   AND a.tran_date >= @FirstDateOfThisYear
		   AND a.tran_date < Dateadd(day, 1, @EndDate)
	GROUP  BY b.gl_master_type,
			  gl_account_type,
			  a.gl_account_number,
			  a.gl_account_name
	ORDER  BY b.gl_master_type,
			  gl_account_type,
			  a.gl_account_number  
				      
	END          
END
GO
PRINT N'Creating [Reporting].[BankRegisterReport]...';


GO



CREATE PROCEDURE [Reporting].[BankRegisterReport]
	@GLAccountType VARCHAR(128),
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SELECT a.elt_account_number,
			   tran_type                                    AS Type,
			   tran_date                                    AS Date,
			   check_no                                     AS Check_No,
			   memo                                         AS Memo,
			   CASE
				 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
				 ELSE o.dba_name + ' ['
					  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
			   END                                          AS Description,
			   Isnull(a.print_check_as, '')                 AS PrintCheckAs,
			   CASE
				 WHEN Isnull(chk_complete, '') <> '' THEN '*'
				 ELSE ''
			   END                                          AS Clear,
			   CASE
				 WHEN Isnull(chk_void, '') <> '' THEN '*'
				 ELSE ''
			   END                                          AS Void,
			   ( debit_amount + Isnull(debit_memo, 0)
				 + credit_amount + Isnull(credit_memo, 0) ) AS Amount,
			   air_ocean,
			   tran_num,
			   Replace(Replace(Upper(gl_account_name), 'CASH IN BANK-', ''),
			   'CASH IN BANK -',
			   '')                                          AS gl_account_name
		FROM   gl b,
			   all_accounts_journal a
			   LEFT OUTER JOIN organization o
							ON a.elt_account_number = o.elt_account_number
							   AND a.customer_number = o.org_account_number
		WHERE  a.elt_account_number = b.elt_account_number
			   AND a.elt_account_number = @EltAccountNumber
			   AND a.gl_account_number = b.gl_account_number
			   AND b.gl_account_type = @GLAccountType
			   --AND a.gl_account_number = '1200'
			   AND ( tran_date >= @StartDate
					 AND tran_date < Dateadd(day, 1, @EndDate) )
			   AND Isnull(flag_close, '') <> 'Y'
		ORDER  BY a.elt_account_number,
				  tran_date,
				  tran_seq_num
	END          
END
GO
PRINT N'Creating [Reporting].[ExpenseReportDetail]...';


GO


CREATE PROCEDURE [Reporting].[ExpenseReportDetail]
	@GLAccountType VARCHAR(128), --@'Expense'
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		
		SELECT a.elt_account_number,
			   Isnull(customer_name, '')               AS Customer_Name,
			   tran_type                               AS Type,
			   tran_date                               AS Date,
			   CASE
				 WHEN Isnull(flag_close, '') = 'Y' THEN ''
				 ELSE tran_num
			   END                                     AS Num,
			   memo                                    AS Memo,
			   gl_account_name                         AS Account,
			   split                                   AS Split,
			   ( debit_amount + Isnull(debit_memo, 0) )AS Amount,
			   balance                                 AS Balance,
			   ' '                                     AS Link
		FROM   all_accounts_journal a,
			   gl b
		WHERE  a.elt_account_number = b.elt_account_number
			   AND a.elt_account_number = @EltAccountNumber
			   AND a.gl_account_number = b.gl_account_number
			   AND b.gl_account_type = @GLAccountType
			   AND ( tran_date >= @StartDate
					 AND tran_date < Dateadd(day, 1, @EndDate) )
			   AND ( tran_type = 'BILL'
					  OR tran_type = 'CHK' )
			   AND Isnull(flag_close, '') <> 'Y'
		ORDER  BY a.elt_account_number,
				  customer_name,
				  tran_date,
				  tran_seq_num  
				      
	END          
END
GO
PRINT N'Creating [Reporting].[ExpenseReportMaster]...';


GO
CREATE PROCEDURE [Reporting].[ExpenseReportMaster]
	@GLAccountType VARCHAR(128), --'Expense'
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SELECT c.customer_name,
			   Sum(c.amount)  AS Amount,
			   Sum(c.balance) AS Balance
		FROM   (SELECT CASE
						 WHEN ( tran_date = @StartDate
								AND Isnull(flag_close, '') = 'Y' ) THEN
						 '_Fiscal Closing of 2006'
						 WHEN ( tran_date >= @StartDate
								AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
						 Isnull(
						 customer_name, '')
					   END                                       AS Customer_Name,
					   Sum(debit_amount + Isnull(debit_memo, 0)) AS Amount,
					   Sum(debit_amount + Isnull(debit_memo, 0)) AS Balance
				FROM   all_accounts_journal a,
					   gl b
				WHERE  a.elt_account_number = b.elt_account_number
					   AND a.elt_account_number = @EltAccountNumber
					   AND a.gl_account_number = b.gl_account_number
					   AND b.gl_account_type = @GLAccountType
					   AND ( tran_date >= @StartDate
							 AND tran_date < Dateadd(day, 1, @EndDate) )
					   AND ( tran_type = 'BILL'
							  OR tran_type = 'CHK' )
				GROUP  BY customer_name,
						  tran_date,
						  flag_close) c
		GROUP  BY c.customer_name
		ORDER  BY customer_name
		      
	END          
END
GO
PRINT N'Creating [Reporting].[GeneralLedgerDetailReport]...';


GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[GeneralLedgerDetailReport]
	--@GLAccountType VARCHAR(128), --@GLAccountType
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	IF LEN(CAST(@EltAccountNumber AS varchar(20))) >5
		BEGIN
			SELECT a.elt_account_number,
				   a.gl_account_number                            AS GL_Number,
				   b.gl_account_desc                              AS GL_Name,
				   a.tran_type                                    AS Type,
				   a.air_ocean,
				   a.tran_date                                    AS Date,
				   a.tran_num                                     AS Num,
				   a.check_no                                     AS Check_No,
				   CASE
					 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
					 ELSE o.dba_name + ' ['
						  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
				   END                                            AS Company_Name,
				   a.memo                                         AS Memo,
				   a.split                                        AS Split,
				   ( a.debit_amount + Isnull(a.debit_memo, 0) )   AS debit_amount,
				   ( a.credit_amount + Isnull(a.credit_memo, 0) ) AS credit_amount
			FROM   gl b,
				   all_accounts_journal a
				   LEFT OUTER JOIN organization o
								ON a.elt_account_number = o.elt_account_number
								   AND a.customer_number = o.org_account_number
			WHERE  a.elt_account_number = b.elt_account_number
				   AND a.elt_account_number = @EltAccountNumber
				   AND a.gl_account_number = b.gl_account_number
				   AND ( a.tran_date >= @StartDate
						 AND a.tran_date < Dateadd(day, 1, @EndDate)
						  OR a.tran_type IS NULL )
				   AND Isnull(flag_close, '') <> 'Y'
			ORDER  BY a.elt_account_number,
					  a.gl_account_number,
					  a.tran_date,
					  a.tran_seq_num   
		END          
	--ELSE
	--	BEGIN	
			
	--	END
END
GO
PRINT N'Creating [Reporting].[GeneralLedgerMasterReport]...';


GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[GeneralLedgerMasterReport]
	--@GLAccountType VARCHAR(128), --@GLAccountType
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
DECLARE @FirstDateOfThisYear datetime
DECLARE @Title nvarchar(50)
BEGIN

	SET @FirstDateOfThisYear = ( select DateAdd(dd, DAY(0)-1, DateAdd(mm, MONTH(0)-1, DateAdd(yy, YEAR(@StartDate)-2000, '20000101'))))
	SET	@Title	=(
		SELECT '_Fiscal Closing of '+ CAST((YEAR(@FirstDateOfThisYear)-1) as varchar)+' ~ '+ CONVERT(VARCHAR(10), @StartDate, 101) AS [MM/DD/YYYY]

	)
	SET NOCOUNT ON;
	IF LEN(CAST(@EltAccountNumber AS varchar(20))) >5
		BEGIN
			IF @FirstDateOfThisYear = @StartDate
				BEGIN
					SELECT c.elt_account_number,
						   c.gl_number,
						   c.gl_name,
						   c.customer_name,
						   Sum(c.balance) AS Balance
					FROM   (SELECT a.elt_account_number           AS elt_account_number,
								   a.tran_date,
								   CASE
									 WHEN ( tran_date = @StartDate
											AND Isnull(flag_close, '') = 'Y' ) THEN ''
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN (
									 CASE
									 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
									 ELSE o.dba_name + ' ['
										  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
									 END )
								   END                            AS customer_name,
								   CASE
									 WHEN ( tran_date = @StartDate
											AND Isnull(flag_close, '') = 'Y' ) THEN
									 Isnull(a.gl_account_number, '')
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN
									 Isnull(a.gl_account_number, '')
								   END                            AS GL_Number,
								   CASE
									 WHEN ( tran_date = @StartDate
											AND Isnull(flag_close, '') = 'Y' ) THEN
									 @Title
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN
									 Isnull(b.gl_account_desc, '')
								   END                            AS GL_Name,
								   Sum(a.credit_amount + a.debit_amount
									   + Isnull(a.credit_memo, 0)
									   + Isnull(a.debit_memo, 0)) AS Balance
							FROM   gl b,
								   all_accounts_journal a
								   LEFT OUTER JOIN organization o
												ON a.elt_account_number = o.elt_account_number
												   AND a.customer_number = o.org_account_number
							WHERE  a.elt_account_number = @EltAccountNumber
								   AND a.elt_account_number = b.elt_account_number
								   AND a.gl_account_number = b.gl_account_number
								   AND ( tran_date >= @StartDate
										 AND tran_date < Dateadd(day, 1, @EndDate)
										  OR tran_type = 'INIT' )
							GROUP  BY a.elt_account_number,
									  o.dba_name,
									  o.class_code,
									  a.gl_account_number,
									  b.gl_account_desc,
									  a.tran_date,
									  flag_close,
									  a.customer_name) c
					WHERE  LEFT(Isnull(c.customer_name, ''), 7) = '_Fiscal'
							OR LEFT(Isnull(c.gl_name, ''), 7) = '_Fiscal'
					GROUP  BY c.elt_account_number,
							  c.gl_number,
							  c.gl_name,
							  c.customer_name
					ORDER  BY elt_account_number,
							  gl_number,
							  gl_name

				END
			ELSE
				BEGIN
					SELECT c.elt_account_number,
						   c.gl_number,
						   c.gl_name,
						   c.customer_name,
						   Sum(c.balance) AS Balance
					FROM   (SELECT a.elt_account_number           AS elt_account_number,
								   a.tran_date,
								   CASE
									 WHEN ( tran_date >= @FirstDateOfThisYear
											AND tran_date < Dateadd(day, 0, @StartDate) ) THEN ''
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN (
									 CASE
									 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
									 ELSE o.dba_name + ' ['
										  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
									 END )
								   END                            AS customer_name,
								   CASE
									 WHEN ( tran_date >= @FirstDateOfThisYear
											AND tran_date < Dateadd(day, 0, @StartDate) ) THEN
									 Isnull(a.gl_account_number, '')
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN
									 Isnull(a.gl_account_number, '')
								   END                            AS GL_Number,
								   CASE
									 WHEN ( tran_date >= @FirstDateOfThisYear --1/1/2007 0000
											AND tran_date < Dateadd(day, 0, @StartDate) ) THEN
									 @Title 
									 WHEN ( a.tran_date >= @StartDate
											AND a.tran_date < Dateadd(day, 1, @EndDate) ) THEN
									 Isnull(b.gl_account_desc, '')
								   END                            AS GL_Name,
								   Sum(a.credit_amount + a.debit_amount
									   + Isnull(a.credit_memo, 0)
									   + Isnull(a.debit_memo, 0)) AS Balance
							FROM   gl b,
								   all_accounts_journal a
								   LEFT OUTER JOIN organization o
												ON a.elt_account_number = o.elt_account_number
												   AND a.customer_number = o.org_account_number
							WHERE  a.elt_account_number = @EltAccountNumber
								   AND a.elt_account_number = b.elt_account_number
								   AND a.gl_account_number = b.gl_account_number
								   AND ( tran_date >= @FirstDateOfThisYear
										 AND tran_date < Dateadd(day, 1, @EndDate)
										  OR tran_type = 'INIT' )
							GROUP  BY a.elt_account_number,
									  o.dba_name,
									  o.class_code,
									  a.gl_account_number,
									  b.gl_account_desc,
									  a.tran_date,
									  flag_close,
									  a.customer_name) c
					WHERE  LEFT(Isnull(c.customer_name, ''), 7) = '_Fiscal'
							OR LEFT(Isnull(c.gl_name, ''), 7) = '_Fiscal'
					GROUP  BY c.elt_account_number,
							  c.gl_number,
							  c.gl_name,
							  c.customer_name
					ORDER  BY elt_account_number,
							  gl_number,
							  gl_name
			END
		END          
	--ELSE
	--	BEGIN	
			
	--	END
END
GO
PRINT N'Creating [Reporting].[IncomeStatementReport]...';


GO


CREATE PROCEDURE [Reporting].[IncomeStatementReport]
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		 SELECT 
				b.gl_master_type               AS Area,
				CASE
					WHEN ( Isnull(b.gl_account_type, '') = 'Cost of Sales' ) 
						THEN ('ORDINARY INCOME/EXPENSE')
					WHEN ( Isnull(b.gl_account_type, '') = 'Expense' ) 
						THEN ('GROSS PROFIT')
					WHEN ( Isnull(b.gl_account_type, '') = 'Other Expense' ) 
						THEN ('GROSS PROFIT')
					WHEN ( Isnull(b.gl_account_type, '') = 'Revenue' ) 
						THEN ('ORDINARY INCOME/EXPENSE')
					WHEN ( Isnull(b.gl_account_type, '') = 'Other Revenue' ) 
						THEN ('ORDINARY INCOME/EXPENSE')
					ELSE Isnull(b.gl_account_type, '')
			   END         
												AS Category,
			   CASE
					WHEN ( Isnull(b.gl_account_type, '') = 'Cost of Sales' ) 
						THEN ('Cost of Sales')
					WHEN ( Isnull(b.gl_account_type, '') = 'Expense' ) 
						THEN ('Expense')
					WHEN ( Isnull(b.gl_account_type, '') = 'Other Expense' ) 
						THEN ('Expense')
					WHEN ( Isnull(b.gl_account_type, '') = 'Revenue' ) 
						THEN ('Revenue')
					WHEN ( Isnull(b.gl_account_type, '') = 'Other Revenue' ) 
						THEN ('Revenue')
					ELSE Isnull(b.gl_account_type, '')
			   END         
												AS SubCategory,
			   b.gl_account_type               AS Type,
			   a.gl_account_number             AS GL_Number,
			   a.gl_account_name               AS GL_Name,
			   Sum(a.debit_amount + a.credit_amount
				   + Isnull(a.debit_memo, 0)
				   + Isnull(a.credit_memo, 0)) AS Amount

		FROM   all_accounts_journal a,
			   gl b
		WHERE  a.elt_account_number = b.elt_account_number
			   AND a.elt_account_number = @EltAccountNumber
			   AND a.gl_account_number = b.gl_account_number
			   AND ( b.gl_master_type = 'REVENUE'
					  OR gl_master_type = 'EXPENSE' )
			   AND ( a.tran_date >= @StartDate
					 AND a.tran_date < Dateadd(day, 1, @EndDate) )
			   AND Isnull(flag_close, '') <> 'Y'
		GROUP  BY b.gl_master_type,
				  b.gl_account_type,
				  a.gl_account_number,
				  a.gl_account_name
		ORDER  BY b.gl_master_type desc,
				  b.gl_account_type desc,
				  a.gl_account_number desc  
				      
	END          
END
GO
PRINT N'Creating [Reporting].[SalesReportDetail]...';


GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [Reporting].[SalesReportDetail]
	@GLAccountType VARCHAR(128), --@'Revenue'
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SELECT a.elt_account_number,
			   CASE
				 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
				 ELSE o.dba_name + ' ['
					  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
			   END                                              AS Customer_Name,
			   customer_number                                  AS Customer_Number,
			   air_ocean                                        AS air_ocean,
			   tran_type                                        AS Type,
			   CASE
				 WHEN Isnull(flag_close, '') = 'Y' THEN ''
				 ELSE tran_num
			   END                                              AS Num,
			   tran_date                                        AS Date,
			   -Sum(( credit_amount + Isnull(credit_memo, 0) )) AS Amount,
			   -Sum(balance)                                    AS Balance,
			   ' '                                              AS Link
		FROM   gl b,
			   all_accounts_journal a
			   LEFT OUTER JOIN organization o
							ON a.elt_account_number = o.elt_account_number
							   AND a.customer_number = o.org_account_number
		WHERE  a.elt_account_number = b.elt_account_number
			   AND a.elt_account_number = @EltAccountNumber
			   AND a.gl_account_number = b.gl_account_number
			   AND b.gl_account_type = @GLAccountType
			   AND ( tran_date >= @StartDate
					 AND tran_date < Dateadd(day, 1, @EndDate) )
			   AND Isnull(flag_close, '') <> 'Y'
			   AND customer_name <> ''
		GROUP  BY a.elt_account_number,
				  o.dba_name,
				  o.class_code,
				  customer_number,
				  air_ocean,
				  tran_type,
				  tran_date,
				  flag_close,
				  tran_num
		ORDER  BY customer_name,
				  air_ocean,
				  tran_date,
				  tran_type,
				  tran_num  
		      
	END          
END
GO
PRINT N'Creating [Reporting].[SalesReportMaster]...';


GO



CREATE PROCEDURE [Reporting].[SalesReportMaster]
	@GLAccountType VARCHAR(128), --'Revenue'
	@StartDate datetime,
	@EndDate datetime,	
	@EltAccountNumber int 
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN	
		SELECT c.customer_name,
		   c.customer_number,
		   Sum(c.amount)  AS Amount,
		   Sum(c.balance) AS Balance
		FROM   (SELECT CASE
					 WHEN ( tran_date = @StartDate
							AND Isnull(flag_close, '') = 'Y' ) THEN
					 '_Fiscal Closing of 2006'
					 WHEN ( tran_date >= @StartDate
							AND tran_date < Dateadd(day, 1, @EndDate) ) THEN (
					 CASE
					 WHEN Isnull(o.class_code, '') = '' THEN o.dba_name
					 ELSE o.dba_name + ' ['
						  + Rtrim(Ltrim(Isnull(o.class_code, ''))) + ']'
					 END )
				   END                                          AS Customer_Name,
				   CASE
					 WHEN ( tran_date = @StartDate
							AND Isnull(flag_close, '') = 'Y' ) THEN '0'
					 WHEN ( tran_date >= @StartDate
							AND tran_date < Dateadd(day, 1, @EndDate) ) THEN
					 customer_number
				   END                                          AS Customer_Number,
				   -Sum(credit_amount + Isnull(credit_memo, 0)) AS Amount,
				   -Sum(credit_amount + Isnull(credit_memo, 0)) AS Balance
			FROM   gl b,
				   all_accounts_journal a
				   LEFT OUTER JOIN organization o
								ON a.elt_account_number = o.elt_account_number
								   AND a.customer_number = o.org_account_number
			WHERE  a.elt_account_number = b.elt_account_number
				   AND a.elt_account_number = @EltAccountNumber
				   AND a.gl_account_number = b.gl_account_number
				   AND b.gl_account_type = @GLAccountType 
				   AND ( tran_date >= @StartDate
						 AND tran_date < Dateadd(day, 1, @EndDate) )
				   AND customer_name <> ''
			GROUP  BY o.dba_name,
					  o.class_code,
					  customer_number,
					  tran_date,
					  flag_close) c
		GROUP  BY c.customer_name,
			  c.customer_number
		ORDER  BY customer_name,
			  customer_number  
		      
	END          
END
GO
PRINT N'Creating [dbo].[AddTabAccessForUserType]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[AddTabAccessForUserType]
	@elt_account_number int,
	@login_name nvarchar(200)	
AS
BEGIN

	DECLARE @Userid int

	DECLARE @UserType int
	DECLARE @is_denied CHAR(1)
	SELECT @Userid =[userid] ,@UserType = [user_type] FROM [dbo].[users] WHERE [elt_account_number] = @elt_account_number AND [login_name] = @login_name
	print @UserType
	

	 DELETE  FROM [dbo].[tab_user] WHERE [elt_account_number] = @elt_account_number AND  [user_id] =@Userid 

		INSERT INTO [dbo].[tab_user]
		([elt_account_number]
		,[user_id]
		,[page_id]
		,[is_denied]
		)
		select @elt_account_number
		, @Userid
		, [page_id],'N' FROM [dbo].[UserType_Tab_Ref] WHERE  User_type =@UserType 

		select * from [dbo].[tab_user]  WHERE [elt_account_number] = @elt_account_number AND user_id = @Userid
	
END
GO
PRINT N'Creating [dbo].[AddUserPageAccess]...';


GO

CREATE PROCEDURE [dbo].[AddUserPageAccess]
	@elt_account_number decimal,
	@user_id decimal,
	@page_id int
AS
BEGIN
	INSERT INTO [dbo].[page_user_access]
					([elt_account_number]
					,[user_id]
					,[page_id]
					)
	SELECT @elt_account_number,@user_id,@page_id

END
GO
PRINT N'Creating [dbo].[ChangeLogin]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[ChangeLogin]   
	@NewLogin nvarchar(100),
	@OldLogin nvarchar(100),
	@elt_account_number int,
	@Msg nvarchar(300) out,
	@Result bit out
AS
BEGIN
SET @Result=0
 --Check if duplicate in UserProfile
IF(SELECT count(*)  FROM [dbo].[UserProfile] where UserName=@NewLogin ) > 0
	BEGIN
		SET @Result=0
		SET @Msg='Email already exists!'
		RETURN 
	END
ELSE
	BEGIN
	IF(SELECT count(*)  FROM [dbo].[UserProfile] where UserName=@OldLogin and elt_account_number=@elt_account_number) = 1 AND (SELECT count(*)  FROM [dbo].users where login_name=@OldLogin and elt_account_number=@elt_account_number) =1 
		BEGIN
			UPDATE [dbo].[UserProfile] SET UserName= @NewLogin WHERE UserName=@OldLogin and elt_account_number=@elt_account_number
			UPDATE [dbo].users SET login_name= @NewLogin WHERE login_name=@OldLogin and elt_account_number=@elt_account_number
			SET @Result=1
		END
	ELSE 
	   BEGIN
	   IF(SELECT count(*)  FROM [dbo].[UserProfile] where UserName=@OldLogin)=0
	    SET @Msg='UserNotCreated'
	   ELSE
		SET @Msg='Can not change this ID due to data error!'
	   END 
	END
END
GO
PRINT N'Creating [dbo].[CheckLogin]...';


GO

CREATE PROCEDURE CheckLogin
	@elt_account_number int,
	@login_name varchar(100),
	@password varchar(100)
AS
BEGIN
	SELECT count(*)      
	FROM [PRDDB].[dbo].[users] WHERE  [elt_account_number] =@elt_account_number
	AND 
	[login_name] = @login_name
	AND [password] =@password
END
GO
PRINT N'Creating [dbo].[CheckPageAccess]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[CheckPageAccess]
	@elt_account_number int,
	@login_name nvarchar(200),
	@url nvarchar(500),
	@result  bit out
AS
BEGIN
--1. Find out user_id with email-- return false if it doesn't exist
--2. Find out page_id with url 
--3. Check if it has the entry --return false if not
--4. Checck if it has entry but blocked --return false if bloked
--4. return true
	DECLARE @Userid int
	DECLARE @Pageid int
	DECLARE @is_blockecd bit
	SELECT @Userid =[userid] FROM [dbo].[users] WHERE [elt_account_number] = @elt_account_number AND [login_name] = @login_name
	SET @result =0

	SELECT @Pageid=[page_id] FROM [dbo].[tab_master] WHERE [master_url] LIKE '%'+ @url+'%'
	PRINT @url
	PRINT @Pageid
	IF @Pageid IS NOT NULL
	BEGIN 
		SELECT @is_blockecd = isnull([is_bloked],0) FROM [dbo].[page_user_access] 
		WHERE [elt_account_number] = @elt_account_number AND  [user_id] =@Userid AND [page_id] = @Pageid	
		   IF @is_blockecd = 0
			SET @result =1
		   ELSE 
			SET @result =0
 	END	     
END
GO
PRINT N'Creating [dbo].[CheckSession]...';


GO
CREATE PROCEDURE [dbo].[CheckSession]
    @elt_account_number int,
    @operation int,
	@user_name nvarchar(100),
	@url nvarchar(200),
	@ip varchar(20),
	@sessionid varchar(100),
	@reason nvarchar(300),
	@Msg nvarchar(300) out,
	@Result bit out
AS
BEGIN
    SET @Result=0
	DECLARE @SessionTime int = 30
--@operation 
--1. add to table
	IF @operation = 1
	BEGIN 
	 
	  declare @maxuser int
	 
	  SELECT @maxuser =isnull( [maxuser],5) FROM [dbo].[agent] where elt_account_number=@elt_account_number

	  IF @maxuser < = ( select count(distinct a.login_name) from [dbo].UserSession a inner join dbo.users b on a.login_name=b.login_name  where b.elt_account_number=@elt_account_number AND alive=1 AND DATEDIFF(minute, last_updated, GETDATE()) < @SessionTime) 
	  BEGIN
		SET @Msg='Maximum allowed user number reached.'
		SET @Result=0
	  END	  
	  ELSE
	  BEGIN 
		  SET @Result=1  
		  IF (select count(*) from [dbo].UserSession  WHERE login_name=@user_name  AND alive=1 AND DATEDIFF(minute, last_updated, GETDATE()) < @SessionTime) > 0 
			  BEGIN
				--'User already logged in the system.'
				   UPDATE [dbo].UserSession SET alive=0, kick_out_reason='Re Login'  WHERE login_name=@user_name and alive=1
					INSERT INTO [dbo].UserSession
					   ([session_id]				 
					   ,[ip]
					   ,[Requested_page]
					   ,[login_name]
					   ,login_time				         
					   ,[last_updated]
						,elt_account_number   
					   ,alive
					  )
				 VALUES
					   (@sessionid				
					   ,@ip
					   ,@url
					   ,@user_name
					   ,getdate()
					   ,getdate()
						,@elt_account_number   
					   ,1
					  )
			  END	
		  ELSE
		  BEGIN		  
			INSERT INTO [dbo].UserSession
				   ([session_id]				 
				   ,[ip]
				   ,[Requested_page]
				   ,[login_name]
				   ,login_time				         
				   ,[last_updated]
				    ,elt_account_number   
				   ,alive
				  )
			 VALUES
				   (@sessionid			
				   ,@ip
				   ,@url
				   ,@user_name
				   ,getdate()
				   ,getdate()
				    ,@elt_account_number   
				   ,1
				  )
			SET @Result=1
		  END 
	  END 
	END --IF @operation = 1
	IF @operation = 2
	BEGIN
	---2. check  
	-- a. check if exist if not return false
	-- b. check if it is expired (30 min) if so kick out @operation = 3 
	-- c. update timestamp
		DECLARE @last_updated datetime
	
		SELECT @last_updated=last_updated
		FROM [dbo].UserSession WHERE (session_id =@sessionid) and login_name=@user_name and alive=1
		IF @last_updated IS NULL 
			SET @Result=0
		ELSE 
		BEGIN
			IF DATEDIFF(minute, @last_updated, GETDATE()) > @SessionTime
				BEGIN
					SET @operation=2
					SET @Msg='User session timed out.'
					  UPDATE [dbo].UserSession SET alive=0, kick_out_reason=@Msg  WHERE login_name=@user_name and session_id=@sessionid 
				END 
			ELSE 
				BEGIN 					
						UPDATE [dbo].UserSession SET [Requested_page] = @url ,[last_updated]=getdate() WHERE [session_id]=@sessionid
					SET @Result=1
				END 
			END 
		END --IF @operation = 2
    IF @operation = 3 
--3. kick out the user
	BEGIN
		UPDATE [dbo].UserSession SET [alive] = 0, kick_out_reason='Sign Out',last_updated=getdate()  WHERE login_name=@user_name and session_id=@sessionid
		SET @Result=0
	END 
END
GO
PRINT N'Creating [dbo].[CopyFile]...';


GO


CREATE PROCEDURE [dbo].[CopyFile] 		
		 @Name varchar(200)
		,@ParentID decimal
		,@IsFolder decimal
		,@FromID decimal				
		,@OwnerEmail varchar(100)
		,@ID decimal out 
AS
BEGIN 
	INSERT INTO [dbo].[Files]
	   ([Name]
	   ,[ParentID]
	   ,[IsFolder] 
	   ,ContentID    
	   ,OwnerEmail)
	VALUES
	   (@Name 
	   ,@ParentID
	   ,@IsFolder
	   ,(SELECT ContentID from [dbo].[Files] WHERE ID = @FromID) 
	   ,@OwnerEmail)
	 set @ID=@@Identity 
END
GO
PRINT N'Creating [DBO].[CopyUser]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE DBO.CopyUser
	@FromAccount nvarchar(100),
	@ToAccount nvarchar(100),
	@elt_account_number int
AS
BEGIN


INSERT INTO [dbo].[users]
           ([elt_account_number]
           ,[userid]
           ,[user_type]
           ,[user_right]
           ,[login_name]
           ,[password]
           ,[org_acct]
           ,[user_lname]
           ,[user_fname]
           ,[user_title]
           ,[user_address]
           ,[user_city]
           ,[user_state]
           ,[user_zip]
           ,[user_country]
           ,[user_phone]
           ,[user_email]
           ,[create_date]
           ,[pw_change_date]
           ,[last_modified]
           ,[last_login_date]
           ,[default_warehouse]
           ,[awb_port]
           ,[bol_port]
           ,[sed_port]
           ,[invoice_port]
           ,[check_port]
           ,[shipping_label_port]
           ,[awb_queue]
           ,[bol_queue]
           ,[sed_queue]
           ,[invoice_queue]
           ,[check_queue]
           ,[shipping_label_queue]
           ,[ig_user_ssn]
           ,[ig_user_dob]
           ,[ig_user_cell]
           ,[ig_recent_work]
           ,[page_id]
           ,[label_type]
           ,[add_to_label]
           ,[awb_prn_name]
           ,[bol_prn_name]
           ,[sed_prn_name]
           ,[invoice_prn_name]
           ,[check_prn_name]
           ,[shipping_label_prn_name]
           ,[is_org_merged]
           ,[page_tab_id])    


SELECT [elt_account_number]
      ,(select top 1 userid from [dbo].[users] order by userid desc) +1
      ,[user_type]
      ,[user_right]
      ,@ToAccount
      ,[password]
      ,[org_acct]
      ,[user_lname]
      ,[user_fname]
      ,[user_title]
      ,[user_address]
      ,[user_city]
      ,[user_state]
      ,[user_zip]
      ,[user_country]
      ,[user_phone]
      ,[user_email]
      ,GETDATE()
      ,[pw_change_date]
      ,GETDATE()
      ,[last_login_date]
      ,[default_warehouse]
      ,[awb_port]
      ,[bol_port]
      ,[sed_port]
      ,[invoice_port]
      ,[check_port]
      ,[shipping_label_port]
      ,[awb_queue]
      ,[bol_queue]
      ,[sed_queue]
      ,[invoice_queue]
      ,[check_queue]
      ,[shipping_label_queue]
      ,[ig_user_ssn]
      ,[ig_user_dob]
      ,[ig_user_cell]
      ,[ig_recent_work]
      ,[page_id]
      ,[label_type]
      ,[add_to_label]
      ,[awb_prn_name]
      ,[bol_prn_name]
      ,[sed_prn_name]
      ,[invoice_prn_name]
      ,[check_prn_name]
      ,[shipping_label_prn_name]
      ,[is_org_merged]
      ,[page_tab_id]
  FROM [dbo].[users] WHERE login_name=@FromAccount and elt_account_number=@elt_account_number





END
GO
PRINT N'Creating [dbo].[CreateFile]...';


GO


CREATE PROCEDURE [dbo].[CreateFile] 		
		 @Name varchar(200)
		,@ParentID decimal
		,@IsFolder bit
		,@Data varbinary(max)=null		
		,@CreatorEmail varchar(100)
		,@ID decimal out 
AS
BEGIN 

	INSERT INTO [dbo].[FileContent]
		   ([LastWriteTime]
		   ,[Data]
		   ,[CreatorEmail]
		   )
	 VALUES
		   (getdate()        
		   ,@Data
		   ,@CreatorEmail)

	INSERT INTO [dbo].[Files]
	   ([Name]
	   ,[ParentID]
	   ,[IsFolder] 
	   ,ContentID    
	   ,OwnerEmail)
	VALUES
	   (@Name 
	   ,@ParentID
	   ,@IsFolder
	   ,SCOPE_IDENTITY()
	   ,@CreatorEmail)
	 
	 set @ID=SCOPE_IDENTITY ()
END
GO
PRINT N'Creating [dbo].[DeleteAESLineItem]...';


GO
-- =============================================
-- Author:		@Author,,Name>
-- Create date: @Create Date,
-- Description:	@Description,
-- =============================================
CREATE PROCEDURE [dbo].[DeleteAESLineItem]			
		    @id decimal          
AS
BEGIN	
   Delete from  [dbo].[aes_detail]  
 WHERE id=@id 
END
GO
PRINT N'Creating [dbo].[GetAESLineItems]...';


GO

CREATE PROCEDURE [dbo].[GetAESLineItems]
	@AESID decimal=0,
	@HAWB varchar(50)='',
	@MAWB varchar(50)='',
	@elt_account_number decimal,
	@file_type varchar(10) =''
AS
BEGIN	
	SET NOCOUNT ON;
       --New AES
	IF @file_type='AE'
		BEGIN
			IF @AESID = 0
			BEGIN       
				if @HAWB <> '' AND @MAWB <> '' 
					Begin
						SELECT 0 as id , 'D' AS dfm,commodity_item_no AS b_number,commodity_item_no AS b_number_copy,'' as item_desc,
							 No_pieces AS b_qty1,'' AS unit1,0 AS b_qty2,'' AS unit2,
							 (CASE WHEN (Kg_Lb='L' OR Kg_Lb='LB') THEN CAST(gross_weight/2.20462262 AS INT)  ELSE gross_weight END) AS gross_weight
							 ,0 AS item_value,'' AS export_code,'' AS license_type,'' AS license_number,'' AS eccn,'' AS vin_type,'' AS vin,'' AS vc_title,'' AS vc_state 
							 FROM hawb_weight_charge 
							 WHERE elt_account_number=  @elt_account_number   AND hawb_num=@HAWB  
					End
				ELSE             
					if (@HAWB='' AND @MAWB <> '' )
						Begin
							SELECT 0 AS ID ,  'D' AS dfm,commodity_item_no AS b_number,commodity_item_no AS b_number_copy,'' as item_desc,
							 No_pieces AS b_qty1,'' AS unit1,0 AS b_qty2,'' AS unit2,
							 (CASE WHEN (Kg_Lb='L' OR Kg_Lb='LB') THEN CAST(gross_weight/2.20462262 AS INT)  ELSE gross_weight END) AS gross_weight
							 ,0 AS item_value,'' AS export_code,'' AS license_type,'' AS license_number,'' AS eccn,'' AS vin_type,'' AS vin,'' AS vc_title,'' AS vc_state 
							 FROM mawb_weight_charge WHERE elt_account_number=  @elt_account_number   AND mawb_num= @MAWB 
						End
			End
			 -- Saved AES
		  ELSE
			SELECT id ,  dfm,b_number,b_number as b_number_copy,b_qty1,unit1,b_qty2,unit2, item_desc,
			gross_weight,item_value,export_code,license_type,license_number,eccn,vin_type,vin,vc_title,vc_state FROM aes_detail 
			WHERE elt_account_number=  @elt_account_number   AND aes_id=  @AESID   ORDER BY item_no
		END
    ELSE
		BEGIN
	
		   IF @AESID = 0
			BEGIN       
			
				if @HAWB <> '' AND @MAWB <> ''
					Begin
						 SELECT 0 AS ID , 'D' AS dfm,'' AS b_number,'' AS b_number_copy, pieces AS b_qty1,'' AS unit1,0 AS b_qty2,'' AS unit2,gross_weight,0 AS item_value,'' AS export_code,'' AS license_type,'' AS license_number,'' AS eccn,'' AS vin_type,'' AS vin,'' AS vc_title,'' AS vc_state ,'' as item_desc
						FROM hbol_master WHERE elt_account_number= @elt_account_number AND hbol_num=@HAWB AND booking_num=@MAWB
					End
				ELSE             
					if (@HAWB='' AND @MAWB <> '' )
						Begin
							
							SELECT 0 AS ID ,  'D' AS dfm,'' AS b_number,'' AS b_number_copy,
							pieces AS b_qty1,'' AS unit1,0 AS b_qty2,'' AS unit2,gross_weight,0 AS item_value,
							'' AS export_code,'' AS license_type,'' AS license_number,'' AS eccn,'' AS vin_type,'' AS vin,'' AS vc_title,'' AS vc_state ,'' as item_desc
							FROM mbol_master WHERE elt_account_number=@elt_account_number AND booking_num=@MAWB
						End
			End
			 -- Saved AES
		  ELSE
			SELECT id ,  dfm,b_number,b_number as b_number_copy,b_qty1,unit1,b_qty2,unit2, item_desc,
			gross_weight,item_value,export_code,license_type,license_number,eccn,vin_type,vin,vc_title,vc_state FROM aes_detail 
			WHERE elt_account_number=  elt_account_number   AND aes_id=  @AESID   ORDER BY item_no
		END		 
END


--SELECT 0 AS ID ,  'D' AS dfm,'' AS b_number,'' AS b_number_copy,
--                            pieces AS b_qty1,'' AS unit1,0 AS b_qty2,'' AS unit2,gross_weight,0 AS item_value,
--                    '' AS export_code,'' AS license_type,'' AS license_number,'' AS eccn,'' AS vin_type,'' AS vin,'' AS vc_title,'' AS vc_state 
--                    FROM mbol_master WHERE elt_account_number=80002000 AND booking_num='20052191PYL'
GO
PRINT N'Creating [dbo].[GetAgentsInMAWB]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetAgentsInMAWB]
    @MAWB VARCHAR(100),
	@ELT_ACCOUNT_NUMBER INT 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
SELECT a.agent_name,a.agent_no,b.Consignee_acct_num FROM hawb_master a JOIN mawb_master b
 ON (a.mawb_num = b.mawb_num AND a.elt_account_number=b.elt_account_number)
  WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num=@MAWB
  GROUP BY a.agent_name,a.agent_no,b.Consignee_acct_num  ORDER BY a.agent_name
END
GO
PRINT N'Creating [dbo].[GetAgentsInMBOL]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[GetAgentsInMBOL]
    @MBOL VARCHAR(100),
	@ELT_ACCOUNT_NUMBER INT 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
SELECT a.agent_name,a.agent_no,b.Consignee_acct_num FROM hbol_master a JOIN mbol_master b
 ON (a.mbol_num = b.mbol_num AND a.elt_account_number=b.elt_account_number)
  WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mbol_num=@MBOL
  GROUP BY a.agent_name,a.agent_no,b.Consignee_acct_num  ORDER BY a.agent_name
END
GO
PRINT N'Creating [dbo].[GetAirExportDocumentList]...';


GO

CREATE PROCEDURE [dbo].[GetAirExportDocumentList]
	@BillType varchar(20),
	@ELT_ACCOUNT_NUMBER int,
	@BillNum varchar(30)
AS
BEGIN

   If @BillType = 'house' 
        BEGIN
           SELECT 'N' as isDirect,a.mawb_num,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
           (select owner_email from dbo.organization where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num=(SELECT TOP 1 mawb_num FROM hawb_master
           WHERE elt_account_number=@ELT_ACCOUNT_NUMBER AND hawb_num=@BillNum) AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hawb_num
        END 
        
    IF @BillType = 'master'
         BEGIN        
           SELECT 'N' as isDirect,a.mawb_num,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
             (select owner_email from dbo.organization  where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num= @BillNum  AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hawb_num           
            
            If @@ROWCOUNT =0 
            BEGIN
               SELECT 'Y' as isDirect,a.mawb_num,'' AS hawb_num,a.consignee_acct_num as agent_no,a.consignee_name as agent_name,a.shipper_account_number,a.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,MsgTxt,a.master_agent,
                 (select owner_email from dbo.organization where org_account_number =a.shipper_account_number and a.elt_account_number = elt_account_number) as shipper_email
               FROM mawb_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='A' AND c.import_export='E')
               LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number)
               LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='')
               WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num=@BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name
            END
        END     
        
        IF  @BillType = 'file'
         BEGIN        
           SELECT 'N' as isDirect,a.mawb_num,f.file#,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
             (select owner_email from dbo.organization where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.consignee_acct_num=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           LEFT OUTER JOIN mawb_number f ON (b.elt_account_number=f.elt_account_number AND b.mawb_num=f.mawb_no)
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND f.file#=@BillNum AND ISNULL(b.agent_no,0)<>0 ORDER BY agent_name, b.hawb_num        
            
			If @@ROWCOUNT =0 
			 BEGIN
			   SELECT 'Y' as isDirect,a.mawb_num,f.file#,'' AS hawb_num,a.consignee_acct_num as agent_no,a.consignee_name as agent_name,a.shipper_account_number,a.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,MsgTxt,a.master_agent ,
			     (select owner_email from dbo.organization  where org_account_number =a.shipper_account_number and a.elt_account_number = elt_account_number) as shipper_email
			   FROM mawb_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='A' AND c.import_export='E') 
			   LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number) 
			   LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='') 
			   LEFT OUTER JOIN mawb_number f ON (a.elt_account_number=f.elt_account_number AND a.mawb_num=f.mawb_no) 
			   WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND f.file#=@BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name
			END            
         END
        
END
GO
PRINT N'Creating [dbo].[GetAirlines]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[GetAirlines]

	@elt_account_number int,
	@str nvarchar(50) =null
AS
BEGIN
    SELECT    
	[carrier_code],
	dba_name   
	FROM [organization]  WHERE ISNUMERIC([carrier_code]) =1 AND  
	elt_account_number=@elt_account_number AND is_carrier = 'Y' and (@str  is null or dba_name like '%'+@str+'%')
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GetAllRate]...';


GO


CREATE PROCEDURE [dbo].[GetAllRate]
	@elt_account_number decimal,
	@rate_type int  =0,
	@org_account_number int = 0 
AS
BEGIN		
	if @rate_type =4 --Customer Selling Rate
		SELECT	 a.*,b.dba_name FROM all_rate_table a,organization b 
		WHERE   a.elt_account_number=b.elt_account_number 
		and a.elt_account_number = @elt_account_number  
		AND  a.customer_no=b.org_account_number AND a.rate_type=@rate_type
		AND ((customer_no = @org_account_number) or (@org_account_number =0))	 
		ORDER BY b.dba_name,origin_port,dest_port,kg_lb,airline,item_no,weight_break
	 
	 if @rate_type =3 --Airline Buying Rate
	 begin 
		SELECT a.*,b.dba_name FROM all_rate_table a left outer join organization b
				ON a.elt_account_number=b.elt_account_number AND a.airline=b.carrier_code 
           		WHERE a.elt_account_number = @elt_account_number
			   AND a.rate_type=@rate_type					
			   ORDER BY origin_port,dest_port,kg_lb,airline,item_no,weight_break
	 end 
	 
	  if @rate_type = 1 --Agent Buying Rate
	 begin 
    		SELECT	 a.*,b.dba_name FROM all_rate_table a,organization b 
			 WHERE   a.elt_account_number=b.elt_account_number 
			 and a.elt_account_number = @elt_account_number AND  a.agent_no=b.org_account_number
			  AND a.rate_type=@rate_type
			  AND ((agent_no  = @org_account_number) or (@org_account_number =0))	 
			  ORDER BY b.dba_name,origin_port,dest_port,kg_lb,airline,item_no,weight_break
	 end 
		if @rate_type = 5 --IATA Rate	
	 begin  
 		SELECT a.*,b.dba_name FROM all_rate_table a left outer join organization b
				 ON a.elt_account_number=b.elt_account_number AND a.airline=b.carrier_code
			   WHERE a.elt_account_number = @elt_account_number 
           		AND a.rate_type=@rate_type 						
			 ORDER BY origin_port,dest_port,kg_lb,airline,item_no,weight_break
		end 

end
GO
PRINT N'Creating [dbo].[GetAllUserAuthorizedPages]...';


GO

CREATE PROCEDURE [dbo].[GetAllUserAuthorizedPages]
	@elt_account_number decimal,
	@user_id decimal
AS
BEGIN
SELECT [page_label]     
      ,[top_module]
      ,[sub_module]
       ,a.[page_id]
      ,isnull([is_bloked],0) as is_bloked
  FROM  [dbo].[page_user_access] A INNER JOIN DBO.tab_master B ON A.page_id = b.page_id WHERE A.elt_account_number = @elt_account_number and A.user_id = @user_id order by top_module, sub_module, page_label
END
GO
PRINT N'Creating [dbo].[GetAllUserPages]...';


GO

CREATE PROCEDURE [dbo].GetAllUserPages
	@elt_account_number decimal,
	@user_id decimal
AS
BEGIN
SELECT [page_label]     
      ,[top_module]
      ,[sub_module]
       [page_id]
      ,[is_bloked]
  FROM  [dbo].[page_user_access] A INNER JOIN DBO.tab_master B ON A.page_id = b.page_id WHERE A.elt_account_number = @elt_account_number and A.user_id = @user_id
END
GO
PRINT N'Creating [dbo].[GetBranches]...';


GO

CREATE PROCEDURE [dbo].[GetBranches]
	@elt_account_number decimal
AS
BEGIN
	 SELECT [elt_account_number]
      ,[org_account_number]
      , CASE WHEN isnull(class_code,'') = '' THEN dba_name
        ELSE dba_name + '[' + RTRIM(LTRIM(isnull(class_code,''))) + ']' END as dba_name
      ,[class_code]
      ,[isFrequently]
      ,[business_legal_name]
      ,[business_fed_taxid]
      ,[business_address]
      ,[business_address2]
      ,[business_address3]
      ,[business_city]
      ,[business_state]
      ,[business_zip]
      ,[business_country]
      ,[b_country_code]
      ,[business_phone]
      ,[business_phone_ext]
      ,[business_phone_mask]
      ,[business_phone2]
      ,[business_phone2_ext]
      ,[business_phone2_mask]
      ,[business_fax]
      ,[business_fax_mask]
      ,[business_url]
      ,[web_login_id]
      ,[web_login_pin]
      ,[owner_lname]
      ,[owner_fname]
      ,[owner_mname]
      ,[owner_title]
      ,[owner_departm]
      ,[owner_mail_address]
      ,[owner_mail_address2]
      ,[owner_mail_address3]
      ,[owner_mail_city]
      ,[owner_mail_state]
      ,[owner_mail_zip]
      ,[owner_mail_country]
      ,[owner_phone]
      ,[owner_phone_mask]
      ,[owner_email]
      ,[attn_name]
      ,[notify_name]
      ,[agent_elt_acct]
      ,[edt]
      ,[iata_code]
      ,[carrier_code]
      ,[carrier_id]
      ,[carrier_type]
      ,[account_status]
      ,[comment]
      ,[comment2]
      ,[credit_amt]
      ,[bill_term]
      ,[coloader_elt_acct]
      ,[colodee_elt_acct_name]
      ,[z_bond_number]
      ,[z_bond_exp_date]
      ,[z_bond_amount]
      ,[z_bond_surety]
      ,[z_bank_name]
      ,[z_bank_account_no]
      ,[z_chl_no]
      ,[z_firm_code]
      ,[z_carrier_code]
      ,[z_carrier_prefix]
      ,[z_attn_txt]
      ,[SalesPerson]
      ,[c2FirstName]
      ,[c2MiddleName]
      ,[c2LastName]
      ,[c2Title]
      ,[c2Phone]
      ,[c2Ext]
      ,[c2Phone_mask]
      ,[c2Cell]
      ,[c2Cell_mask]
      ,[c2Fax]
      ,[c2Fax_mask]
      ,[c2Email]
      ,[c3FirstName]
      ,[c3MiddleName]
      ,[c3LastName]
      ,[c3Title]
      ,[c3Phone]
      ,[c3Phone_mask]
      ,[c3Ext]
      ,[c3Cell]
      ,[c3Cell_mask]
      ,[c3Fax]
      ,[c3Fax_mask]
      ,[c3Email]
      ,[is_shipper]
      ,[is_consignee]
      ,[is_agent]
      ,[is_vendor]
      ,[is_carrier]
      ,[is_coloader]
      ,[z_is_trucker]
      ,[z_is_special]
      ,[z_is_broker]
      ,[z_is_warehousing]
      ,[z_is_cfs]
      ,[z_is_govt]
      ,[SubConsignee]
      ,[SubShipper]
      ,[SubAgent]
      ,[SubCarrier]
      ,[SubTrucker]
      ,[SubWarehousing]
      ,[SubCFS]
      ,[SubBroker]
      ,[SubGovt]
      ,[SubVendor]
      ,[SubSpecial]
      ,[defaultBroker]
      ,[defaultBrokerName]
      ,[broker_info]
      ,[refferedBy]
      ,[date_opened]
      ,[last_update]
      ,[acct_name]
      ,[business_st_taxid]
      ,[owner_ssn]
      ,[business_phone_mask_exp]
      ,[business_phone2_mask_exp]
      ,[business_fax_mask_exp]
      ,[owner_phone_mask_exp]
      ,[c2Phone_mask_exp]
      ,[c2Cell_mask_exp]
      ,[c2Fax_mask_exp]
      ,[c3Phone_mask_exp]
      ,[c3Cell_mask_exp]
      ,[c3Fax_mask_exp]
      ,[business_phone_mask_pre]
      ,[business_phone2_mask_pre]
      ,[business_fax_mask_pre]
      ,[owner_phone_mask_pre]
      ,[c2Phone_mask_pre]
      ,[c2Cell_mask_pre]
      ,[c2Fax_mask_pre]
      ,[c3Phone_mask_pre]
      ,[c3Cell_mask_pre]
      ,[c3Fax_mask_pre]
      ,[print_check_as]
      ,[print_check_as_info]
      ,[known_shipper]
      ,[coloader_elt_acct_name]
      ,[ICC_MC]
      ,[FF_account_no]
      ,[is_customer]
      ,[subCustomer]
      ,[OrgId]
	
	   FROM StgDB.[dbo].[organization]
	   WHERE  left(elt_account_number,5) = left(@elt_account_number,5)


END
GO
PRINT N'Creating [dbo].[GetClient]...';


GO

CREATE PROCEDURE [dbo].[GetClient]
	@elt_account_number decimal,
	@org_account_number decimal
AS
BEGIN
	SELECT [elt_account_number]
      ,[org_account_number]
      , CASE WHEN isnull(class_code,'') = '' THEN dba_name
        ELSE dba_name + '[' + RTRIM(LTRIM(isnull(class_code,''))) + ']' END as dba_name
      ,[class_code]
      ,[isFrequently]
      ,[business_legal_name]
      ,[business_fed_taxid]
      ,[business_address]
      ,[business_address2]
      ,[business_address3]
      ,[business_city]
      ,[business_state]
      ,[business_zip]
      ,[business_country]
      ,[b_country_code]
      ,[business_phone]
      ,[business_phone_ext]
      ,[business_phone_mask]
      ,[business_phone2]
      ,[business_phone2_ext]
      ,[business_phone2_mask]
      ,[business_fax]
      ,[business_fax_mask]
      ,[business_url]
      ,[web_login_id]
      ,[web_login_pin]
      ,[owner_lname]
      ,[owner_fname]
      ,[owner_mname]
      ,[owner_title]
      ,[owner_departm]
      ,[owner_mail_address]
      ,[owner_mail_address2]
      ,[owner_mail_address3]
      ,[owner_mail_city]
      ,[owner_mail_state]
      ,[owner_mail_zip]
      ,[owner_mail_country]
      ,[owner_phone]
      ,[owner_phone_mask]
      ,[owner_email]
      ,[attn_name]
      ,[notify_name]
      ,[agent_elt_acct]
      ,[edt]
      ,[iata_code]
      ,[carrier_code]
      ,[carrier_id]
      ,[carrier_type]
      ,[account_status]
      ,[comment]
      ,[comment2]
      ,[credit_amt]
      ,[bill_term]
      ,[coloader_elt_acct]
      ,[colodee_elt_acct_name]
      ,[z_bond_number]
      ,[z_bond_exp_date]
      ,[z_bond_amount]
      ,[z_bond_surety]
      ,[z_bank_name]
      ,[z_bank_account_no]
      ,[z_chl_no]
      ,[z_firm_code]
      ,[z_carrier_code]
      ,[z_carrier_prefix]
      ,[z_attn_txt]
      ,[SalesPerson]
      ,[c2FirstName]
      ,[c2MiddleName]
      ,[c2LastName]
      ,[c2Title]
      ,[c2Phone]
      ,[c2Ext]
      ,[c2Phone_mask]
      ,[c2Cell]
      ,[c2Cell_mask]
      ,[c2Fax]
      ,[c2Fax_mask]
      ,[c2Email]
      ,[c3FirstName]
      ,[c3MiddleName]
      ,[c3LastName]
      ,[c3Title]
      ,[c3Phone]
      ,[c3Phone_mask]
      ,[c3Ext]
      ,[c3Cell]
      ,[c3Cell_mask]
      ,[c3Fax]
      ,[c3Fax_mask]
      ,[c3Email]
      ,[is_shipper]
      ,[is_consignee]
      ,[is_agent]
      ,[is_vendor]
      ,[is_carrier]
      ,[is_coloader]
      ,[z_is_trucker]
      ,[z_is_special]
      ,[z_is_broker]
      ,[z_is_warehousing]
      ,[z_is_cfs]
      ,[z_is_govt]
      ,[SubConsignee]
      ,[SubShipper]
      ,[SubAgent]
      ,[SubCarrier]
      ,[SubTrucker]
      ,[SubWarehousing]
      ,[SubCFS]
      ,[SubBroker]
      ,[SubGovt]
      ,[SubVendor]
      ,[SubSpecial]
      ,[defaultBroker]
      ,[defaultBrokerName]
      ,[broker_info]
      ,[refferedBy]
      ,[date_opened]
      ,[last_update]
      ,[acct_name]
      ,[business_st_taxid]
      ,[owner_ssn]
      ,[business_phone_mask_exp]
      ,[business_phone2_mask_exp]
      ,[business_fax_mask_exp]
      ,[owner_phone_mask_exp]
      ,[c2Phone_mask_exp]
      ,[c2Cell_mask_exp]
      ,[c2Fax_mask_exp]
      ,[c3Phone_mask_exp]
      ,[c3Cell_mask_exp]
      ,[c3Fax_mask_exp]
      ,[business_phone_mask_pre]
      ,[business_phone2_mask_pre]
      ,[business_fax_mask_pre]
      ,[owner_phone_mask_pre]
      ,[c2Phone_mask_pre]
      ,[c2Cell_mask_pre]
      ,[c2Fax_mask_pre]
      ,[c3Phone_mask_pre]
      ,[c3Cell_mask_pre]
      ,[c3Fax_mask_pre]
      ,[print_check_as]
      ,[print_check_as_info]
      ,[known_shipper]
      ,[coloader_elt_acct_name]
      ,[ICC_MC]
      ,[FF_account_no]
      ,[is_customer]
      ,[subCustomer]
      ,[OrgId]	
	   FROM [dbo].[organization]
	   where  elt_account_number = @elt_account_number 
	   and org_account_number =@org_account_number 


END
GO
PRINT N'Creating [dbo].[GetClientList]...';


GO

CREATE PROCEDURE [dbo].[GetClientList]
	@elt_account_number decimal,
	@startIndex int=0,
	@endIndex int=0,
	@filter nvarchar(50) =''
AS
BEGIN
	 SELECT * FROM (SELECT [elt_account_number]
      ,[org_account_number]
      , CASE WHEN isnull(class_code,'') = '' THEN dba_name
        ELSE dba_name + '[' + RTRIM(LTRIM(isnull(class_code,''))) + ']' END as dba_name
      ,[class_code]
      ,[isFrequently]
      ,[business_legal_name]
      ,[business_fed_taxid]
      ,[business_address]
      ,[business_address2]
      ,[business_address3]
      ,[business_city]
      ,[business_state]
      ,[business_zip]
      ,[business_country]
      ,[b_country_code]
      ,[business_phone]
      ,[business_phone_ext]
      ,[business_phone_mask]
      ,[business_phone2]
      ,[business_phone2_ext]
      ,[business_phone2_mask]
      ,[business_fax]
      ,[business_fax_mask]
      ,[business_url]
      ,[web_login_id]
      ,[web_login_pin]
      ,[owner_lname]
      ,[owner_fname]
      ,[owner_mname]
      ,[owner_title]
      ,[owner_departm]
      ,[owner_mail_address]
      ,[owner_mail_address2]
      ,[owner_mail_address3]
      ,[owner_mail_city]
      ,[owner_mail_state]
      ,[owner_mail_zip]
      ,[owner_mail_country]
      ,[owner_phone]
      ,[owner_phone_mask]
      ,[owner_email]
      ,[attn_name]
      ,[notify_name]
      ,[agent_elt_acct]
      ,[edt]
      ,[iata_code]
      ,[carrier_code]
      ,[carrier_id]
      ,[carrier_type]
      ,[account_status]
      ,[comment]
      ,[comment2]
      ,[credit_amt]
      ,[bill_term]
      ,[coloader_elt_acct]
      ,[colodee_elt_acct_name]
      ,[z_bond_number]
      ,[z_bond_exp_date]
      ,[z_bond_amount]
      ,[z_bond_surety]
      ,[z_bank_name]
      ,[z_bank_account_no]
      ,[z_chl_no]
      ,[z_firm_code]
      ,[z_carrier_code]
      ,[z_carrier_prefix]
      ,[z_attn_txt]
      ,[SalesPerson]
      ,[c2FirstName]
      ,[c2MiddleName]
      ,[c2LastName]
      ,[c2Title]
      ,[c2Phone]
      ,[c2Ext]
      ,[c2Phone_mask]
      ,[c2Cell]
      ,[c2Cell_mask]
      ,[c2Fax]
      ,[c2Fax_mask]
      ,[c2Email]
      ,[c3FirstName]
      ,[c3MiddleName]
      ,[c3LastName]
      ,[c3Title]
      ,[c3Phone]
      ,[c3Phone_mask]
      ,[c3Ext]
      ,[c3Cell]
      ,[c3Cell_mask]
      ,[c3Fax]
      ,[c3Fax_mask]
      ,[c3Email]
      ,[is_shipper]
      ,[is_consignee]
      ,[is_agent]
      ,[is_vendor]
      ,[is_carrier]
      ,[is_coloader]
      ,[z_is_trucker]
      ,[z_is_special]
      ,[z_is_broker]
      ,[z_is_warehousing]
      ,[z_is_cfs]
      ,[z_is_govt]
      ,[SubConsignee]
      ,[SubShipper]
      ,[SubAgent]
      ,[SubCarrier]
      ,[SubTrucker]
      ,[SubWarehousing]
      ,[SubCFS]
      ,[SubBroker]
      ,[SubGovt]
      ,[SubVendor]
      ,[SubSpecial]
      ,[defaultBroker]
      ,[defaultBrokerName]
      ,[broker_info]
      ,[refferedBy]
      ,[date_opened]
      ,[last_update]
      ,[acct_name]
      ,[business_st_taxid]
      ,[owner_ssn]
      ,[business_phone_mask_exp]
      ,[business_phone2_mask_exp]
      ,[business_fax_mask_exp]
      ,[owner_phone_mask_exp]
      ,[c2Phone_mask_exp]
      ,[c2Cell_mask_exp]
      ,[c2Fax_mask_exp]
      ,[c3Phone_mask_exp]
      ,[c3Cell_mask_exp]
      ,[c3Fax_mask_exp]
      ,[business_phone_mask_pre]
      ,[business_phone2_mask_pre]
      ,[business_fax_mask_pre]
      ,[owner_phone_mask_pre]
      ,[c2Phone_mask_pre]
      ,[c2Cell_mask_pre]
      ,[c2Fax_mask_pre]
      ,[c3Phone_mask_pre]
      ,[c3Cell_mask_pre]
      ,[c3Fax_mask_pre]
      ,[print_check_as]
      ,[print_check_as_info]
      ,[known_shipper]
      ,[coloader_elt_acct_name]
      ,[ICC_MC]
      ,[FF_account_no]
      ,[is_customer]
      ,[subCustomer]
      ,[OrgId]
	  ,row_number()over(order by t.dba_name) as [rn]
	   FROM [PRDDB].[dbo].[organization]
	   as t where t.dba_name LIKE @filter ) as st where st.[rn] between @startIndex and @endIndex

	   AND elt_account_number = @elt_account_number


END
GO
PRINT N'Creating [dbo].[GetDomesticFreightDocumentList]...';


GO

CREATE PROCEDURE [dbo].[GetDomesticFreightDocumentList]
	@BillType varchar(20),
	@ELT_ACCOUNT_NUMBER int,
	@BillNum varchar(30)
AS
BEGIN

   If @BillType = 'house' 
        BEGIN
           SELECT 'N' as isDirect,a.mawb_num,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
           (select owner_email from dbo.organization where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num=(SELECT TOP 1 mawb_num FROM hawb_master
           WHERE elt_account_number=@ELT_ACCOUNT_NUMBER AND hawb_num=@BillNum) AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hawb_num
        END 
        
    IF @BillType = 'master'
         BEGIN        
           SELECT 'N' as isDirect,a.mawb_num,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
             (select owner_email from dbo.organization  where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num= @BillNum  AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hawb_num           
            
            If @@ROWCOUNT =0 
            BEGIN
               SELECT 'Y' as isDirect,a.mawb_num,'' AS hawb_num,a.consignee_acct_num as agent_no,a.consignee_name as agent_name,a.shipper_account_number,a.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,MsgTxt,a.master_agent,
                 (select owner_email from dbo.organization where org_account_number =a.shipper_account_number and a.elt_account_number = elt_account_number) as shipper_email
               FROM mawb_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='A' AND c.import_export='E')
               LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number)
               LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='')
               WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND a.mawb_num=@BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name
            END
        END     
        
        IF  @BillType = 'file'
         BEGIN        
           SELECT 'N' as isDirect,a.mawb_num,f.file#,b.hawb_num,b.agent_no,b.agent_name,b.shipper_account_number,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,
           d.owner_email as agent_email,
             (select owner_email from dbo.organization where org_account_number =b.shipper_account_number and b.elt_account_number = elt_account_number) as shipper_email,
           d.edt,d.agent_elt_acct,MsgTxt,a.master_agent
           FROM mawb_master a LEFT OUTER JOIN hawb_master b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num)
           LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND c.air_ocean='A' AND c.import_export='E')
           LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.consignee_acct_num=d.org_account_number)
           LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='')
           LEFT OUTER JOIN mawb_number f ON (b.elt_account_number=f.elt_account_number AND b.mawb_num=f.mawb_no)
           WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND f.file#=@BillNum AND ISNULL(b.agent_no,0)<>0 ORDER BY agent_name, b.hawb_num        
            
			If @@ROWCOUNT =0 
			 BEGIN
			   SELECT 'Y' as isDirect,a.mawb_num,f.file#,'' AS hawb_num,a.consignee_acct_num as agent_no,a.consignee_name as agent_name,a.shipper_account_number,a.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,MsgTxt,a.master_agent ,
			     (select owner_email from dbo.organization  where org_account_number =a.shipper_account_number and a.elt_account_number = elt_account_number) as shipper_email
			   FROM mawb_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='A' AND c.import_export='E') 
			   LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number) 
			   LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='') 
			   LEFT OUTER JOIN mawb_number f ON (a.elt_account_number=f.elt_account_number AND a.mawb_num=f.mawb_no) 
			   WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND f.file#=@BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name
			END            
         END
        
END
GO
PRINT N'Creating [dbo].[GetFileByID]...';


GO


CREATE PROCEDURE [dbo].[GetFileByID] 
	@FileID decimal
	
AS
BEGIN 
		SELECT isnull(FC.[LastWriteTime],getdate())as [LastWriteTime],
		      
		       FC.[Data],
		       FC.[CreatorEmail],
		       F.OwnerEmail
		  ,F.[Name]
		  ,F.[ID]
		  ,F.[ParentID]
		  ,F.[IsFolder]
		  ,FC.[Data]
		  ,F.[OptimisticLockField]
		  ,F.[GCRecord]
		  ,F.[SSMA_TimeStamp]
		  FROM [dbo].[Files] F 
		  LEFT OUTER JOIN [dbo].[FileContent] FC on F.ContentID = FC.ContentID
		  WHERE ID = @FileID 
	 
END
GO
PRINT N'Creating [dbo].[GetFileIDforParentID]...';


GO


CREATE PROCEDURE [dbo].[GetFileIDforParentID]
	@ParentID decimal,
	@OwnerEmail varchar(200),
	@ID decimal out
AS
BEGIN 
		SELECT top 1 @ID=F.ID
		  FROM [dbo].[Files] F 
		  LEFT OUTER JOIN [dbo].[FileContent] FC on F.ContentID = FC.ContentID
		  WHERE ParentID = @ParentID and OwnerEmail=@OwnerEmail order by F.LastWriteTime desc
	 
END
GO
PRINT N'Creating [dbo].[GetFiles]...';


GO


CREATE PROCEDURE [dbo].[GetFiles] 
	@OwnerEmail varchar(100)
	
AS
BEGIN 
	SELECT isnull(FC.[LastWriteTime],getdate())as [LastWriteTime],

	FC.[Data],
	FC.[CreatorEmail],
	F.OwnerEmail
	,F.[Name]
	,F.[ID]
	,F.[ParentID]
	,F.[IsFolder]
	,FC.[Data]
	,F.[OptimisticLockField]
	,F.[GCRecord]
	,F.[SSMA_TimeStamp]
	FROM [dbo].[Files] F 
	LEFT OUTER JOIN [dbo].[FileContent] FC on F.ContentID = FC.ContentID
	WHERE OwnerEmail = @OwnerEmail 
	 
END
GO
PRINT N'Creating [dbo].[GetImportDocumentList]...';


GO

CREATE PROCEDURE [dbo].[GetImportDocumentList]
	@BillType varchar(20),
	@elt_account_number varchar(20),
	@BillNum varchar(20),
	@iType char(1)
AS
BEGIN
	IF @BillType = 'file' 
		SELECT  a.sec,c.invoice_no, a.mawb_num,b.hawb_num,d.owner_email,e.MsgTxt,d.org_account_number as agent_no,d.dba_name as agent_name,b.pieces,b.gross_wt,b.freight_collect+b.oc_collect as col_amt,b.pickup_date 
		FROM import_mawb a LEFT OUTER JOIN import_hawb b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num AND a.sec=b.sec AND a.iType=b.iType) 
		LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND a.iType=c.air_ocean) 
		LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.agent_org_acct=d.org_account_number) 
		LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND e.MsgType='') 
		WHERE a.elt_account_number=@elt_account_number   AND a.file_no=@BillNum AND a.iType=@iType AND ISNULL(b.mawb_num,'')<>'' AND c.import_export='I'
	IF @BillType = 'master' 
		 SELECT  a.sec,c.invoice_no, a.mawb_num,b.hawb_num,d.owner_email,e.MsgTxt,d.org_account_number as agent_no,d.dba_name as agent_name,b.pieces,b.gross_wt,b.freight_collect+b.oc_collect as col_amt,b.pickup_date 
		 FROM import_mawb a LEFT OUTER JOIN import_hawb b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num AND a.sec=b.sec AND a.iType=b.iType) 
		 LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND a.iType=c.air_ocean) 
		 LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.agent_org_acct=d.org_account_number) 
		 LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND e.MsgType='') 
		 WHERE a.elt_account_number=@elt_account_number   AND a.mawb_num=@BillNum AND a.iType=@iType AND ISNULL(b.mawb_num,'')<>'' AND c.import_export='I'
	IF @BillType = 'house' 
		 SELECT  a.sec,c.invoice_no, a.mawb_num,b.hawb_num,d.owner_email,e.MsgTxt,d.org_account_number as agent_no,d.dba_name as agent_name,b.pieces,b.gross_wt,b.freight_collect+b.oc_collect as col_amt,b.pickup_date 
		 FROM import_mawb a LEFT OUTER JOIN import_hawb b ON (a.elt_account_number=b.elt_account_number AND a.mawb_num=b.mawb_num AND a.sec=b.sec AND a.iType=b.iType) 
		 LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.mawb_num=c.mawb_num AND b.hawb_num=c.hawb_num AND a.iType=c.air_ocean) 
		 LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.agent_org_acct=d.org_account_number) 
		 LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND e.MsgType='') 
		 WHERE a.elt_account_number=@elt_account_number   AND b.hawb_num=@BillNum AND a.iType=@iType AND ISNULL(b.mawb_num,'')<>'' AND c.import_export='I'

END
GO
PRINT N'Creating [dbo].[GetOceanExportDocumentList]...';


GO

CREATE PROCEDURE [dbo].[GetOceanExportDocumentList]
	@BillType varchar(20),
	@ELT_ACCOUNT_NUMBER int,
	@BillNum varchar(30)
AS
BEGIN
  
   If @BillType = 'house' 
        BEGIN
             select 'N' as isDirect,b.booking_num,b.mbol_num,b.hbol_num,b.agent_no,b.agent_name, b.shipper_acct_num, b.shipper_name,a.consignee_acct_num as master_agent,ISNULL(c.invoice_no,-1) as invoice_no, d.owner_email as agent_email, d.edt,d.agent_elt_acct,e.MsgTxt 
             ,(select owner_email from dbo.organization  where org_account_number =b.shipper_acct_num and b.elt_account_number = elt_account_number) as shipper_email
             FROM mbol_master a 
             LEFT OUTER JOIN hbol_master b ON (a.elt_account_number=b.elt_account_number AND a.booking_num=b.booking_num) 
             LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.booking_num=c.mawb_num AND b.hbol_num=c.hawb_num AND c.air_ocean='O' AND c.import_export='E') 
             LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number) 
             LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='') 
             WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND b.booking_num=
             (SELECT booking_num FROM hbol_master WHERE elt_account_number=@ELT_ACCOUNT_NUMBER AND hbol_num=@BillNum) 
             AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hbol_num
               
        END 
        
    IF @BillType = 'master'
         BEGIN  
         
             SELECT 'N' as isDirect,b.booking_num,b.mbol_num,b.hbol_num,b.agent_no,b.agent_name,a.consignee_acct_num as master_agent, b.shipper_acct_num,b.shipper_name,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,e.MsgTxt 
                          ,(select owner_email from dbo.organization where org_account_number =b.shipper_acct_num and b.elt_account_number = elt_account_number) as shipper_email

             FROM mbol_master a LEFT OUTER JOIN hbol_master b ON (a.elt_account_number=b.elt_account_number AND a.booking_num=b.booking_num) 
             LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.booking_num=c.mawb_num AND b.hbol_num=c.hawb_num AND c.air_ocean='O' AND c.import_export='E') 
             LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number) 
             LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='') 
             WHERE a.elt_account_number= @ELT_ACCOUNT_NUMBER  AND b.booking_num= @BillNum AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hbol_num             
             
            If @@ROWCOUNT =0 
            BEGIN
                 SELECT 'Y' as isDirect,a.booking_num,a.mbol_num,'' AS hbol_num,a.consignee_acct_num as agent_no,a.shipper_acct_num,a.shipper_name,a.consignee_name as agent_name,a.consignee_acct_num as master_agent,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,e.MsgTxt 
                  ,(select owner_email from dbo.organization where org_account_number =a.shipper_acct_num and a.elt_account_number = elt_account_number) as shipper_email

                 FROM mbol_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.booking_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='O' AND c.import_export='E') 
                 LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number) 
                 LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='') 
                 WHERE a.elt_account_number= @ELT_ACCOUNT_NUMBER AND a.booking_num = @BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name 
                 

            END
        END     
        
        IF  @BillType = 'file'
         BEGIN        
             SELECT 'N' as isDirect,b.booking_num,b.mbol_num,b.hbol_num,b.agent_no,b.agent_name,b.shipper_acct_num,b.shipper_name,a.consignee_acct_num as master_agent,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,e.MsgTxt 
                          ,(select owner_email from dbo.organization  where org_account_number =b.shipper_acct_num and b.elt_account_number = elt_account_number) as shipper_email

             FROM mbol_master a LEFT OUTER JOIN hbol_master b ON (a.elt_account_number=b.elt_account_number AND a.booking_num=b.booking_num) 
             LEFT OUTER JOIN invoice c ON (b.elt_account_number=c.elt_account_number AND b.booking_num=c.mawb_num AND b.hbol_num=c.hawb_num AND c.air_ocean='O' AND c.import_export='E') 
             LEFT OUTER JOIN organization d ON (b.elt_account_number=d.elt_account_number AND b.agent_no=d.org_account_number) 
             LEFT OUTER JOIN greetMessage e ON (b.elt_account_number=e.AgentID AND MsgType='') 
             LEFT OUTER JOIN ocean_booking_number f ON (a.elt_account_number=f.elt_account_number AND a.booking_num=f.booking_num) 
             WHERE a.elt_account_number= @ELT_ACCOUNT_NUMBER AND f.file_no=@BillNum AND ISNULL(b.agent_no,0)<>0 ORDER BY b.agent_name, b.hbol_num 
            
			If @@ROWCOUNT =0 
			 BEGIN
				SELECT 'Y' as isDirect,a.booking_num,a.mbol_num,'' AS hbol_num,a.consignee_acct_num as agent_no,a.shipper_acct_num,a.shipper_name,a.consignee_name as agent_name,a.consignee_acct_num as master_agent,ISNULL(c.invoice_no,-1) as invoice_no,d.owner_email as agent_email,d.edt,d.agent_elt_acct,e.MsgTxt 
				,(select owner_email from dbo.organization  where org_account_number =a.shipper_acct_num and a.elt_account_number = elt_account_number) as shipper_email

				FROM mbol_master a LEFT OUTER JOIN invoice c ON (a.elt_account_number=c.elt_account_number AND a.booking_num=c.mawb_num AND ISNULL(c.hawb_num,'')='' AND c.air_ocean='O' AND c.import_export='E') 
				LEFT OUTER JOIN organization d ON (a.elt_account_number=d.elt_account_number AND a.consignee_acct_num=d.org_account_number) 
				LEFT OUTER JOIN greetMessage e ON (a.elt_account_number=e.AgentID AND MsgType='') 
				LEFT OUTER JOIN ocean_booking_number f ON (a.elt_account_number=f.elt_account_number AND a.booking_num=f.booking_num) 
				WHERE a.elt_account_number=@ELT_ACCOUNT_NUMBER AND f.file_no=@BillNum AND ISNULL(a.consignee_acct_num,0)<>0 ORDER BY a.consignee_name
			END            
         END
        
        
END
GO
PRINT N'Creating [dbo].[GetRootFileItemID]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetRootFileItemID]
	@UserEmail Varchar(100),
	@ID int out 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT Top 1 @ID = isnull([ID],0) FROM [dbo].[Files]
   WHERE OwnerEmail= @UserEmail and IsFolder = 1 and ParentID = -1 ORDER BY ID 
END
GO
PRINT N'Creating [dbo].[GetScheduleB]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetScheduleB]
	@elt_account_number int,
	@description nvarchar(300)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT 
       [sb]
      ,[sb_unit1]
      ,[sb_unit2]
      ,[description]
      ,[export_code]
      ,[license_type]
      ,[eccn]
  FROM [dbo].[scheduleB] 
  WHERE  elt_account_number = @elt_account_number and description = @description
END
GO
PRINT N'Creating [dbo].[ig_up_organization_delete]...';


GO

/****** Object:  Stored Procedure dbo.ig_up_organization_delete    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_delete    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_delete    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_delete    Script Date: 5/5/2008 2:24:38 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_delete    Script Date: 5/13/2006 10:39:02 PM ******/

CREATE PROCEDURE dbo.ig_up_organization_delete
(
	@elt_account_number numeric(8),
	@org_account_number numeric(7)
)
AS
	SET NOCOUNT OFF;
DELETE FROM organization WHERE (elt_account_number = @elt_account_number) AND (org_account_number = @org_account_number)
GO
PRINT N'Creating [dbo].[ig_up_organization_insert]...';


GO

/****** Object:  Stored Procedure dbo.ig_up_organization_insert    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_insert    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_insert    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_insert    Script Date: 5/5/2008 2:24:39 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_insert    Script Date: 5/13/2006 10:39:02 PM ******/

CREATE PROCEDURE dbo.ig_up_organization_insert
(
	@elt_account_number numeric(8),
	@org_account_number numeric(7),
	@acct_name nvarchar(16),
	@dba_name nvarchar(128),
	@class_code nchar(1),
	@date_opened datetime,
	@last_update datetime,
	@business_legal_name nvarchar(128),
	@business_fed_taxid nvarchar(16),
	@business_st_taxid nvarchar(16),
	@business_address nvarchar(128),
	@business_city nvarchar(32),
	@business_state nvarchar(2),
	@business_zip nvarchar(10),
	@business_country nvarchar(16),
	@b_country_code nvarchar(2),
	@business_phone nvarchar(32),
	@business_fax nvarchar(32),
	@business_url nvarchar(64),
	@owner_ssn nvarchar(9),
	@owner_lname nvarchar(32),
	@owner_fname nvarchar(32),
	@owner_mname nvarchar(32),
	@owner_mail_address nvarchar(128),
	@owner_mail_city nvarchar(32),
	@owner_mail_state nvarchar(2),
	@owner_mail_zip nvarchar(10),
	@owner_mail_country nvarchar(16),
	@owner_phone nvarchar(32),
	@owner_email nvarchar(64),
	@attn_name nvarchar(64),
	@notify_name nvarchar(64),
	@is_shipper nchar(1),
	@is_consignee nchar(1),
	@broker_info nvarchar(256),
	@is_agent nchar(1),
	@agent_elt_acct nchar(8),
	@edt nchar(1),
	@is_vendor nchar(1),
	@is_carrier nchar(1),
	@iata_code nvarchar(16),
	@carrier_code nvarchar(16),
	@carrier_id nvarchar(16),
	@carrier_type nchar(1),
	@account_status nvarchar(1),
	@comment nvarchar(512),
	@credit_amt numeric(12,2),
	@bill_term int,
	@is_coloader nchar(1),
	@coloader_elt_acct numeric(8),
	@z_is_trucker nchar(1),
	@z_is_special nchar(1),
	@z_is_broker nchar(1),
	@z_is_warehousing nchar(1),
	@z_is_cfs nchar(1),
	@z_is_govt nchar(1),
	@z_bond_number numeric(18),
	@z_bond_exp_date datetime,
	@z_bond_amount numeric(18),
	@z_bond_surety nchar(30),
	@z_bank_name nchar(50),
	@z_bank_account_no nchar(20),
	@z_chl_no nchar(30),
	@z_firm_code nchar(20),
	@z_carrier_code nchar(20),
	@z_carrier_prefix nchar(10)
)
AS
	SET NOCOUNT OFF;
INSERT INTO organization(elt_account_number, org_account_number, acct_name, dba_name, class_code, date_opened, last_update, business_legal_name, business_fed_taxid, business_st_taxid, business_address, business_city, business_state, business_zip, business_country, b_country_code, business_phone, business_fax, business_url, owner_ssn, owner_lname, owner_fname, owner_mname, owner_mail_address, owner_mail_city, owner_mail_state, owner_mail_zip, owner_mail_country, owner_phone, owner_email, attn_name, notify_name, is_shipper, is_consignee, broker_info, is_agent, agent_elt_acct, edt, is_vendor, is_carrier, iata_code, carrier_code, carrier_id, carrier_type, account_status, comment, credit_amt, bill_term, is_coloader, coloader_elt_acct, z_is_trucker, z_is_special, z_is_broker, z_is_warehousing, z_is_cfs, z_is_govt, z_bond_number, z_bond_exp_date, z_bond_amount, z_bond_surety, z_bank_name, z_bank_account_no, z_chl_no, z_firm_code, z_carrier_code, z_carrier_prefix) VALUES (@elt_account_number, @org_account_number, @acct_name, @dba_name, @class_code, @date_opened, @last_update, @business_legal_name, @business_fed_taxid, @business_st_taxid, @business_address, @business_city, @business_state, @business_zip, @business_country, @b_country_code, @business_phone, @business_fax, @business_url, @owner_ssn, @owner_lname, @owner_fname, @owner_mname, @owner_mail_address, @owner_mail_city, @owner_mail_state, @owner_mail_zip, @owner_mail_country, @owner_phone, @owner_email, @attn_name, @notify_name, @is_shipper, @is_consignee, @broker_info, @is_agent, @agent_elt_acct, @edt, @is_vendor, @is_carrier, @iata_code, @carrier_code, @carrier_id, @carrier_type, @account_status, @comment, @credit_amt, @bill_term, @is_coloader, @coloader_elt_acct, @z_is_trucker, @z_is_special, @z_is_broker, @z_is_warehousing, @z_is_cfs, @z_is_govt, @z_bond_number, @z_bond_exp_date, @z_bond_amount, @z_bond_surety, @z_bank_name, @z_bank_account_no, @z_chl_no, @z_firm_code, @z_carrier_code, @z_carrier_prefix);
	SELECT elt_account_number, org_account_number, acct_name, dba_name, class_code, date_opened, last_update, business_legal_name, business_fed_taxid, business_st_taxid, business_address, business_city, business_state, business_zip, business_country, b_country_code, business_phone, business_fax, business_url, owner_ssn, owner_lname, owner_fname, owner_mname, owner_mail_address, owner_mail_city, owner_mail_state, owner_mail_zip, owner_mail_country, owner_phone, owner_email, attn_name, notify_name, is_shipper, is_consignee, broker_info, is_agent, agent_elt_acct, edt, is_vendor, is_carrier, iata_code, carrier_code, carrier_id, carrier_type, account_status, comment, credit_amt, bill_term, is_coloader, coloader_elt_acct, z_is_trucker, z_is_special, z_is_broker, z_is_warehousing, z_is_cfs, z_is_govt, z_bond_number, z_bond_exp_date, z_bond_amount, z_bond_surety, z_bank_name, z_bank_account_no, z_chl_no, z_firm_code, z_carrier_code, z_carrier_prefix FROM organization WHERE (elt_account_number = @elt_account_number) AND (org_account_number = @org_account_number)
GO
PRINT N'Creating [dbo].[ig_up_organization_select]...';


GO

/****** Object:  Stored Procedure dbo.ig_up_organization_select    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_select    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_select    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_select    Script Date: 5/5/2008 2:24:39 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_select    Script Date: 5/13/2006 10:39:02 PM ******/

CREATE PROCEDURE dbo.ig_up_organization_select
AS
	SET NOCOUNT ON;
SELECT elt_account_number, org_account_number, acct_name, dba_name, class_code, date_opened, last_update, business_legal_name, business_fed_taxid, business_st_taxid, business_address, business_city, business_state, business_zip, business_country, b_country_code, business_phone, business_fax, business_url, owner_ssn, owner_lname, owner_fname, owner_mname, owner_mail_address, owner_mail_city, owner_mail_state, owner_mail_zip, owner_mail_country, owner_phone, owner_email, attn_name, notify_name, is_shipper, is_consignee, broker_info, is_agent, agent_elt_acct, edt, is_vendor, is_carrier, iata_code, carrier_code, carrier_id, carrier_type, account_status, comment, credit_amt, bill_term, is_coloader, coloader_elt_acct, z_is_trucker, z_is_special, z_is_broker, z_is_warehousing, z_is_cfs, z_is_govt, z_bond_number, z_bond_exp_date, z_bond_amount, z_bond_surety, z_bank_name, z_bank_account_no, z_chl_no, z_firm_code, z_carrier_code, z_carrier_prefix FROM organization
GO
PRINT N'Creating [dbo].[ig_up_organization_update]...';


GO

/****** Object:  Stored Procedure dbo.ig_up_organization_update    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_update    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_update    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  Stored Procedure dbo.ig_up_organization_update    Script Date: 5/5/2008 2:24:40 PM ******/


CREATE PROCEDURE dbo.ig_up_organization_update
(
	@elt_account_number numeric(8),
	@org_account_number numeric(7),
	@acct_name nvarchar(16),
	@dba_name nvarchar(128),
	@class_code nchar(1),
	@date_opened datetime,
	@last_update datetime,
	@business_legal_name nvarchar(128),
	@business_fed_taxid nvarchar(16),
	@business_st_taxid nvarchar(16),
	@business_address nvarchar(128),
	@business_city nvarchar(32),
	@business_state nvarchar(2),
	@business_zip nvarchar(10),
	@business_country nvarchar(64),
	@b_country_code nvarchar(2),
	@business_phone nvarchar(32),
	@business_fax nvarchar(32),
	@business_url nvarchar(64),
	@owner_ssn nvarchar(9),
	@owner_lname nvarchar(32),
	@owner_fname nvarchar(32),
	@owner_mname nvarchar(32),
	@owner_mail_address nvarchar(128),
	@owner_mail_city nvarchar(32),
	@owner_mail_state nvarchar(2),
	@owner_mail_zip nvarchar(10),
	@owner_mail_country nvarchar(16),
	@owner_phone nvarchar(32),
	@owner_email nvarchar(64),
	@attn_name nvarchar(64),
	@notify_name nvarchar(64),
	@is_shipper nchar(1),
	@is_consignee nchar(1),
	@broker_info nvarchar(256),
	@is_agent nchar(1),
	@agent_elt_acct nchar(8),
	@edt nchar(1),
	@is_vendor nchar(1),
	@is_carrier nchar(1),
	@iata_code nvarchar(16),
	@carrier_code nvarchar(16),
	@carrier_id nvarchar(16),
	@carrier_type nchar(1),
	@account_status nvarchar(1),
	@comment nvarchar(512),
	@credit_amt numeric(12,2),
	@bill_term int,
	@is_coloader nchar(1),
	@coloader_elt_acct numeric(8),
	@z_is_trucker nchar(1),
	@z_is_special nchar(1),
	@z_is_broker nchar(1),
	@z_is_warehousing nchar(1),
	@z_is_cfs nchar(1),
	@z_is_govt nchar(1),
	@z_bond_number numeric(18),
	@z_bond_exp_date datetime,
	@z_bond_amount numeric(18),
	@z_bond_surety nchar(30),
	@z_bank_name nchar(50),
	@z_bank_account_no nchar(20),
	@z_chl_no nchar(30),
	@z_firm_code nchar(20),
	@z_carrier_code nchar(20),
	@z_carrier_prefix nchar(10),
	@z_attn_txt nvarchar(64),
	@SalesPerson nvarchar(64)
	
)
AS
	SET NOCOUNT OFF;
UPDATE organization SET elt_account_number = @elt_account_number, org_account_number = @org_account_number, acct_name = @acct_name, dba_name = @dba_name, class_code = @class_code, date_opened = @date_opened, last_update = @last_update, business_legal_name = @business_legal_name, business_fed_taxid = @business_fed_taxid, business_st_taxid = @business_st_taxid, business_address = @business_address, business_city = @business_city, business_state = @business_state, business_zip = @business_zip, business_country = @business_country, b_country_code = @b_country_code, business_phone = @business_phone, business_fax = @business_fax, business_url = @business_url, owner_ssn = @owner_ssn, owner_lname = @owner_lname, owner_fname = @owner_fname, owner_mname = @owner_mname, owner_mail_address = @owner_mail_address, owner_mail_city = @owner_mail_city, owner_mail_state = @owner_mail_state, owner_mail_zip = @owner_mail_zip, owner_mail_country = @owner_mail_country, owner_phone = @owner_phone, owner_email = @owner_email, attn_name = @attn_name, notify_name = @notify_name, is_shipper = @is_shipper, is_consignee = @is_consignee, broker_info = @broker_info, is_agent = @is_agent, agent_elt_acct = @agent_elt_acct, edt = @edt, is_vendor = @is_vendor, is_carrier = @is_carrier, iata_code = @iata_code, carrier_code = @carrier_code, carrier_id = @carrier_id, carrier_type = @carrier_type, account_status = @account_status, comment = @comment, credit_amt = @credit_amt, bill_term = @bill_term, is_coloader = @is_coloader, coloader_elt_acct = @coloader_elt_acct, z_is_trucker = @z_is_trucker, z_is_special = @z_is_special, z_is_broker = @z_is_broker, z_is_warehousing = @z_is_warehousing, z_is_cfs = @z_is_cfs, z_is_govt = @z_is_govt, z_bond_number = @z_bond_number, z_bond_exp_date = @z_bond_exp_date, z_bond_amount = @z_bond_amount, z_bond_surety = @z_bond_surety, z_bank_name = @z_bank_name, z_bank_account_no = @z_bank_account_no, z_chl_no = @z_chl_no, z_firm_code = @z_firm_code, z_carrier_code = @z_carrier_code, z_carrier_prefix = @z_carrier_prefix,z_attn_txt = @z_attn_txt,SalesPerson = @SalesPerson WHERE (elt_account_number = @elt_account_number) AND (org_account_number = @org_account_number) ;
	SELECT elt_account_number, org_account_number, acct_name, dba_name, class_code, date_opened, last_update, business_legal_name, business_fed_taxid, business_st_taxid, business_address, business_city, business_state, business_zip, business_country, b_country_code, business_phone, business_fax, business_url, owner_ssn, owner_lname, owner_fname, owner_mname, owner_mail_address, owner_mail_city, owner_mail_state, owner_mail_zip, owner_mail_country, owner_phone, owner_email, attn_name, notify_name, is_shipper, is_consignee, broker_info, is_agent, agent_elt_acct, edt, is_vendor, is_carrier, iata_code, carrier_code, carrier_id, carrier_type, account_status, comment, credit_amt, bill_term, is_coloader, coloader_elt_acct, z_is_trucker, z_is_special, z_is_broker, z_is_warehousing, z_is_cfs, z_is_govt, z_bond_number, z_bond_exp_date, z_bond_amount, z_bond_surety, z_bank_name, z_bank_account_no, z_chl_no, z_firm_code, z_carrier_code, z_carrier_prefix FROM organization WHERE (elt_account_number = @elt_account_number) AND (org_account_number = @org_account_number)
GO
PRINT N'Creating [dbo].[InitUserPageAccess]...';


GO

CREATE PROCEDURE [dbo].[InitUserPageAccess]
	@elt_account_number decimal,
	@user_id decimal,
	@user_type int
AS
BEGIN

		--Find Subscription 
	DECLARE @SubsCode nvarchar(50) 
	SELECT @SubsCode=[subscription_code] FROM [dbo].[subscription_freighteasy] where elt_account_number=@elt_account_number

	DECLARE @TbSegments TABLE
	(
	  id int, 
	  SegCode nvarchar(50)
	)	
	DECLARE @TbIds TABLE
	(
		[page_id] int	
	)
	
	INSERT INTO @TbSegments (id, SegCode) SELECT Id, Data FROM dbo.Split(@SubsCode, '_')
	--SELECT * FROM @TbSegments
	DECLARE @Count int
	DECLARE @id int
	DECLARE @Segment nvarchar(50)
	SET @id = 1
	SELECT @Count = count(*) from @TbSegments
	DELETE FROM [dbo].[page_user_access] WHERE elt_account_number=@elt_account_number AND user_id =@user_id
	
	While @id < @Count +1
	Begin
		SELECT @Segment = SegCode FROM @TbSegments WHERE id=@id 
		PRINT 'FOR '+ @Segment
		
		INSERT INTO @TbIds
		(
		[page_id]	
		)	    
		SELECT [page_id] FROM [dbo].[Subscription_Tab_Ref] where [Code_Segmenet] =@Segment 	
		
		DECLARE @Count2 int
		DECLARE @CurID int
		SELECT @Count2 = count(*) from @TbIds
		WHILE @Count2 > 0 
        BEGIN 
            SELECT top 1  @CurID =   [page_id] from @TbIds 
			IF (SELECT Count(*)  FROM [dbo].[page_user_access] WHERE user_id=@user_id and elt_account_number=@elt_account_number and page_id=@CurID) =0 
			BEGIN
				DECLARE @PRINT VARCHAR(500)
				SELECT @PRINT= b.top_module + b.sub_module + b.page_label from tab_master b where b.page_id=@CurID
				PRINT @PRINT
				INSERT INTO [dbo].[page_user_access]
					([elt_account_number]
					,[user_id]
					,[page_id]
					,is_bloked
					)
				SELECT  @elt_account_number, @user_id , @CurID, 1 
			END 
		    DELETE FROM @TbIds WHERE [page_id] =@CurID
			SELECT @Count2 = count(*) from @TbIds			
		END 
		SET @id=@id +1
			
	End

	UPDATE [dbo].[page_user_access] SET is_bloked = 0 WHERE [page_id] IN ( SELECT  [page_id] FROM [dbo].[UserType_Tab_Ref] a 
			WHERE a.User_type=@user_type ) AND user_id =@user_id AND elt_account_number=@elt_account_number	
    
	--SELECT a.*, b.master_url from [dbo].[page_user_access] a inner join tab_master b on a.page_id=b.page_id WHERE isnull(A.is_bloked,0)=0
END
GO
PRINT N'Creating [dbo].[Insert_all_rate_table]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[Insert_all_rate_table]
			@elt_account_number decimal
           ,@item_no decimal
           ,@rate_type int
           ,@agent_no int
           ,@customer_no int
           ,@airline nvarchar(50)
           ,@origin_port nvarchar(50)
           ,@dest_port nvarchar(50)
           ,@weight_break decimal
           ,@rate decimal(8,2)
           ,@kg_lb nchar(1)
           ,@share decimal(8,2)         
           ,@rate_table_id decimal

AS
BEGIN

	INSERT INTO [dbo].[all_rate_table]
			   ([elt_account_number]
			   ,[item_no]
			   ,[rate_type]
			   ,[agent_no]
			   ,[customer_no]
			   ,[airline]
			   ,[origin_port]
			   ,[dest_port]
			   ,[weight_break]
			   ,[rate]
			   ,[kg_lb]
			   ,[share]			   
			   ,[rate_table_id])
		 VALUES
			   (@elt_account_number 
			   ,@item_no 
			   ,@rate_type 
			   ,@agent_no 
			   ,@customer_no 
			   ,@airline 
			   ,@origin_port 
			   ,@dest_port 
			   ,@weight_break 
			   ,@rate 
			   ,@kg_lb 
			   ,@share 			   
			   ,@rate_table_id )

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[InsertAESLineItem]...';


GO
-- =============================================
-- Author:		@Author,,Name>
-- Create date: @Create Date,
-- Description:	@Description,
-- =============================================
CREATE PROCEDURE [dbo].[InsertAESLineItem]
			@elt_account_number decimal(8,0)
           ,@item_no int=0
           ,@dfm nvarchar(1)
           ,@b_number nvarchar(32)
           ,@item_desc nvarchar(128)=''
           ,@b_qty1 int=0
           ,@unit1 nvarchar(16)=''
           ,@b_qty2 int=0
           ,@unit2 nvarchar(16)=''
           ,@gross_weight decimal(12,2)=0
           ,@vin_type nvarchar(1)=''
           ,@vin nvarchar(32)=''
           ,@vc_title nvarchar(15)=''
           ,@vc_state nvarchar(2)=''
           ,@item_value decimal(12,2)=0
           ,@export_code nvarchar(32)=''
           ,@license_type nvarchar(32)=''
           ,@aes_id decimal(18,0)
           ,@eccn nvarchar(5)=''
           ,@license_number nvarchar(12)=''
AS
BEGIN	
   INSERT INTO [dbo].[aes_detail]
           ([elt_account_number]
           ,[item_no]
           ,[dfm]
           ,[b_number]
           ,[item_desc]
           ,[b_qty1]
           ,[unit1]
           ,[b_qty2]
           ,[unit2]
           ,[gross_weight]
           ,[vin_type]
           ,[vin]
           ,[vc_title]
           ,[vc_state]
           ,[item_value]
           ,[export_code]
           ,[license_type]
           ,[aes_id]
           ,[eccn]
           ,[license_number])
     VALUES
           (@elt_account_number
           ,@item_no
           ,@dfm
           ,@b_number
           ,@item_desc
           ,@b_qty1
           ,@unit1
           ,@b_qty2
           ,@unit2
           ,@gross_weight
           ,@vin_type
           ,@vin
           ,@vc_title
           ,@vc_state
           ,@item_value
           ,@export_code
           ,@license_type
           ,@aes_id
           ,@eccn
           ,@license_number)
END
GO
PRINT N'Creating [dbo].[sp_aging_list_by_company]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================

   
CREATE PROCEDURE [dbo].[sp_aging_list_by_company]
	-- Add the parameters for the stored procedure here
(
	@elt_account_number numeric(8),
	@selected_date datetime,
	@customer_no varchar(32)
)		
AS

BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	DECLARE @gl_account_ar DECIMAL
	--Insert statements for procedure here
	SELECT @gl_account_ar = gl_account_number
		  FROM   gl
		  WHERE  elt_account_number = @elt_account_number
				 AND gl_account_desc = 'Accounts Receivable'

	DECLARE @customer_dba_name nvarchar(180)    
	IF @customer_no = ''
		BEGIN TRY
			INSERT [PRDDB].[dbo].[invoice_joined_temp]
			SELECT *
			FROM
			  (SELECT invoice_id,
					CASE
						  WHEN isnull(f.class_code,'') = '' THEN f.dba_name
						  ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
					  END AS customer_dba_name,
					  f.business_phone,
					  0 AS customer_credit,
					  d.customer_number AS customer_no,
					  d.elt_account_number,
					  d.invoice_no,
					  invoice_type,
					  import_export,
					  air_ocean,
					  invoice_date,
					  ref_no,
					  ref_no_Our,
					  Customer_info,
					  Total_Pieces,
					  Total_Gross_Weight,
					  Total_Charge_Weight,
					  Origin_Dest,
					  origin,
					  dest,
					  Customer_Number,
					  Customer_Name,
					  shipper,
					  consignee,
					  entry_no,
					  entry_date,
					  Carrier,
					  Arrival_Dept,
					  mawb_num,
					  hawb_num,
					  subtotal,
					  sale_tax,
					  agent_profit,
					  accounts_receivable,
					  amount_charged,
					  ISNULL(e.p_amt,0) AS amount_paid,
					  ISNULL(e.b_amt,amount_charged) AS balance,
					  total_cost,
					  remarks,
					  pay_status,
					  term_curr,
					  term30,
					  term60,
					  term90,
					  received_amt,
					  pmt_method,
					  existing_credits,
					  deposit_to,
					  lock_ar,
					  lock_ap,
					  in_memo,
					  is_org_merged,
					  master_invoice_no
			   FROM invoice d
			   LEFT OUTER JOIN
				 (SELECT a.invoice_no,
						 a.amount_charged-SUM(ISNULL(b.payment,0)) AS b_amt,
						 SUM(ISNULL(b.payment,0)) AS p_amt
				  FROM invoice a
				  LEFT OUTER JOIN customer_payment_detail b ON (a.elt_account_number=b.elt_account_number
																AND a.invoice_no=b.invoice_no)
				  LEFT OUTER JOIN customer_payment c ON (b.elt_account_number=c.elt_account_number
														 AND b.payment_no=c.payment_no)
				  WHERE a.elt_account_number=@elt_account_number
					AND a.invoice_date<=@selected_date
					AND (c.payment_date<=@selected_date
						 OR c.payment_date IS NULL)
				  GROUP BY a.invoice_no,
						   a.amount_charged) e ON (d.invoice_no=e.invoice_no
												   AND d.elt_account_number=@elt_account_number)
			   LEFT OUTER JOIN organization f ON (f.elt_account_number=d.elt_account_number
												  AND f.org_account_number=d.customer_number)
			   WHERE (b_amt<>0
					  OR b_amt IS NULL)
				 AND invoice_date<=@selected_date
				 AND d.elt_account_number=@elt_account_number
				 AND d.elt_account_number is not null
			   UNION ALL SELECT invoice_id,
								 CASE
									WHEN isnull(f.class_code,'') = '' THEN f.dba_name
									ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
								END AS customer_dba_name,
								f.business_phone,
								-1*e.credit AS customer_credit,
								   e.customer_no,
								   g.elt_account_number,
								   g.invoice_no,
								   invoice_type,
								   import_export,
								   air_ocean,
								   invoice_date,
								   ref_no,
								   ref_no_Our,
								   Customer_info,
								   Total_Pieces,
								   Total_Gross_Weight,
								   Total_Charge_Weight,
								   Origin_Dest,
								   origin,
								   dest,
								   Customer_Number,
								   Customer_Name,
								   shipper,
								   consignee,
								   entry_no,
								   entry_date,
								   Carrier,
								   Arrival_Dept,
								   mawb_num,
								   hawb_num,
								   subtotal,
								   sale_tax,
								   agent_profit,
								   accounts_receivable,
								   amount_charged,
								   amount_paid,
								   balance,
								   total_cost,
								   remarks,
								   pay_status,
								   term_curr,
								   term30,
								   term60,
								   term90,
								   received_amt,
								   pmt_method,
								   existing_credits,
								   deposit_to,
								   lock_ar,
								   lock_ap,
								   in_memo,
								   is_org_merged,
								   master_invoice_no
			   FROM organization f
			   RIGHT OUTER JOIN
				 (SELECT customer_no,
						 -1*SUM(val_1+val_2) AS credit
				  FROM
					(SELECT b.customer_number AS customer_no,
							(b.credit_amount+b.debit_amount) AS val_1,
							SUM(a.payment) AS val_2
					 FROM customer_payment_detail a
					 LEFT OUTER JOIN all_accounts_journal b ON (a.elt_account_number=b.elt_account_number
																AND b.tran_num=a.payment_no
																AND b.tran_type='PMT'
																AND b.gl_Account_number=@gl_account_ar)
					 WHERE b.elt_account_number=@elt_account_number
					   AND b.tran_date<=@selected_date
					 GROUP BY b.customer_number,
							  b.credit_amount,
							  b.debit_amount,
							  a.payment_no) c
				  GROUP BY c.customer_no) e
			   LEFT OUTER JOIN
				 (SELECT *
				  FROM invoice
				  WHERE elt_account_number=@elt_account_number
					AND balance<>0
					AND pay_status='A') g ON (g.invoice_no IS NULL
											  AND g.elt_account_number IS NULL) ON (f.elt_account_number=@elt_account_number
																					AND f.org_account_number=e.customer_no)
			   WHERE e.credit<>0
			   AND g.elt_account_number is not null
			   ) union_set
			ORDER BY customer_dba_name,
					 customer_number,
					 invoice_date+term_curr
	    END TRY
	    BEGIN CATCH
			-- Execute error retrieval routine.
			SELECT 
				ERROR_NUMBER() AS ErrorNumber
				,ERROR_MESSAGE() AS ErrorMessage
				,@elt_account_number as elt_account_number;
		END CATCH; 
	ELSE
		BEGIN TRY
			INSERT [PRDDB].[dbo].[invoice_joined_temp]
			SELECT *
			FROM
			  (SELECT 
					invoice_id,
					CASE
						  WHEN isnull(f.class_code,'') = '' THEN f.dba_name
						  ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
					  END AS customer_dba_name,
					  f.business_phone,
					  0 AS customer_credit,
					  d.customer_number AS customer_no,
					  d.elt_account_number,
					  d.invoice_no,
					  invoice_type,
					  import_export,
					  air_ocean,
					  invoice_date,
					  ref_no,
					  ref_no_Our,
					  Customer_info,
					  Total_Pieces,
					  Total_Gross_Weight,
					  Total_Charge_Weight,
					  Origin_Dest,
					  origin,
					  dest,
					  Customer_Number,
					  Customer_Name,
					  shipper,
					  consignee,
					  entry_no,
					  entry_date,
					  Carrier,
					  Arrival_Dept,
					  mawb_num,
					  hawb_num,
					  subtotal,
					  sale_tax,
					  agent_profit,
					  accounts_receivable,
					  amount_charged,
					  ISNULL(e.p_amt,0) AS amount_paid,
					  ISNULL(e.b_amt,amount_charged) AS balance,
					  total_cost,
					  remarks,
					  pay_status,
					  term_curr,
					  term30,
					  term60,
					  term90,
					  received_amt,
					  pmt_method,
					  existing_credits,
					  deposit_to,
					  lock_ar,
					  lock_ap,
					  in_memo,
					  is_org_merged,
					  master_invoice_no
			   FROM invoice d
			   LEFT OUTER JOIN
				 (SELECT a.invoice_no,
						 a.amount_charged-SUM(ISNULL(b.payment,0)) AS b_amt,
						 SUM(ISNULL(b.payment,0)) AS p_amt
				  FROM invoice a
				  LEFT OUTER JOIN customer_payment_detail b ON (a.elt_account_number=b.elt_account_number
																AND a.invoice_no=b.invoice_no)
				  LEFT OUTER JOIN customer_payment c ON (b.elt_account_number=c.elt_account_number
														 AND b.payment_no=c.payment_no)
				  WHERE a.elt_account_number=@elt_account_number
					AND a.invoice_date<=@selected_date
					AND (c.payment_date<=@selected_date
						 OR c.payment_date IS NULL)
				  GROUP BY a.invoice_no,
						   a.amount_charged) e ON (d.invoice_no=e.invoice_no
												   AND d.elt_account_number=@elt_account_number)
			   LEFT OUTER JOIN organization f ON (f.elt_account_number=d.elt_account_number
												  AND f.org_account_number=d.customer_number)
			   WHERE (b_amt<>0
					  OR b_amt IS NULL)
				 AND invoice_date<=@selected_date
				 AND d.elt_account_number=@elt_account_number
				 AND d.elt_account_number is not null
				  
			   UNION ALL SELECT 
								invoice_id,
								CASE
									WHEN isnull(f.class_code,'') = '' THEN f.dba_name
									ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
								END AS customer_dba_name,
								f.business_phone,
								-1*e.credit AS customer_credit,
								   e.customer_no,
								   g.elt_account_number,
								   g.invoice_no,
								   invoice_type,
								   import_export,
								   air_ocean,
								   invoice_date,
								   ref_no,
								   ref_no_Our,
								   Customer_info,
								   Total_Pieces,
								   Total_Gross_Weight,
								   Total_Charge_Weight,
								   Origin_Dest,
								   origin,
								   dest,
								   Customer_Number,
								   Customer_Name,
								   shipper,
								   consignee,
								   entry_no,
								   entry_date,
								   Carrier,
								   Arrival_Dept,
								   mawb_num,
								   hawb_num,
								   subtotal,
								   sale_tax,
								   agent_profit,
								   accounts_receivable,
								   amount_charged,
								   amount_paid,
								   balance,
								   total_cost,
								   remarks,
								   pay_status,
								   term_curr,
								   term30,
								   term60,
								   term90,
								   received_amt,
								   pmt_method,
								   existing_credits,
								   deposit_to,
								   lock_ar,
								   lock_ap,
								   in_memo,
								   is_org_merged,
								   master_invoice_no
			   FROM organization f
			   RIGHT OUTER JOIN
				 (SELECT customer_no,
						 -1*SUM(val_1+val_2) AS credit
				  FROM
					(SELECT b.customer_number AS customer_no,
							(b.credit_amount+b.debit_amount) AS val_1,
							SUM(a.payment) AS val_2
					 FROM customer_payment_detail a
					 LEFT OUTER JOIN all_accounts_journal b ON (a.elt_account_number=b.elt_account_number
																AND b.tran_num=a.payment_no
																AND b.tran_type='PMT'
																AND b.gl_Account_number=@gl_account_ar)
					 WHERE b.elt_account_number=@elt_account_number
					   AND b.tran_date<=@selected_date
					 GROUP BY b.customer_number,
							  b.credit_amount,
							  b.debit_amount,
							  a.payment_no) c
				  GROUP BY c.customer_no) e
			   LEFT OUTER JOIN
				 (SELECT *
				  FROM invoice
				  WHERE elt_account_number=@elt_account_number
					AND balance<>0
					AND pay_status='A') g ON (g.invoice_no IS NULL
											  AND g.elt_account_number IS NULL) ON (f.elt_account_number=@elt_account_number
																					AND f.org_account_number=e.customer_no)
			   WHERE e.credit<>0
			   AND g.elt_account_number is not null
			   ) union_set
			WHERE customer_no=@customer_no
			ORDER BY customer_dba_name,
					 customer_number,
					 invoice_date+term_curr
			SELECT 
				@elt_account_number as elt_account_number;
	    END TRY
	    BEGIN CATCH
	    	-- Execute error retrieval routine.
			SELECT 
				ERROR_NUMBER() AS ErrorNumber
				,ERROR_MESSAGE() AS ErrorMessage
				,@elt_account_number as elt_account_number;
		END CATCH; 


END
GO
PRINT N'Creating [dbo].[sp_aging_list_by_company_insert]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[sp_aging_list_by_company_insert]
(
	@elt_account_number numeric(8),
	@invoice_id numeric(18)
)	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	DECLARE @gl_account_ar DECIMAL
	--Insert statements for procedure here
	SELECT @gl_account_ar = gl_account_number
		  FROM   gl
		  WHERE  elt_account_number = @elt_account_number
				 AND gl_account_desc = 'Accounts Receivable'
	DECLARE @customer_dba_name nvarchar(180)  
	BEGIN TRY
		INSERT [PRDDB].[dbo].[invoice_joined_temp]
			SELECT *
			FROM
			  (SELECT invoice_id,
					CASE
						  WHEN isnull(f.class_code,'') = '' THEN f.dba_name
						  ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
					  END AS customer_dba_name,
					  f.business_phone,
					  0 AS customer_credit,
					  d.customer_number AS customer_no,
					  d.elt_account_number,
					  d.invoice_no,
					  invoice_type,
					  import_export,
					  air_ocean,
					  invoice_date,
					  ref_no,
					  ref_no_Our,
					  Customer_info,
					  Total_Pieces,
					  Total_Gross_Weight,
					  Total_Charge_Weight,
					  Origin_Dest,
					  origin,
					  dest,
					  Customer_Number,
					  Customer_Name,
					  shipper,
					  consignee,
					  entry_no,
					  entry_date,
					  Carrier,
					  Arrival_Dept,
					  mawb_num,
					  hawb_num,
					  subtotal,
					  sale_tax,
					  agent_profit,
					  accounts_receivable,
					  amount_charged,
					  ISNULL(e.p_amt,0) AS amount_paid,
					  ISNULL(e.b_amt,amount_charged) AS balance,
					  total_cost,
					  remarks,
					  pay_status,
					  term_curr,
					  term30,
					  term60,
					  term90,
					  received_amt,
					  pmt_method,
					  existing_credits,
					  deposit_to,
					  lock_ar,
					  lock_ap,
					  in_memo,
					  is_org_merged,
					  master_invoice_no
			   FROM invoice d
			   LEFT OUTER JOIN
				 (SELECT a.invoice_no,
						 a.amount_charged-SUM(ISNULL(b.payment,0)) AS b_amt,
						 SUM(ISNULL(b.payment,0)) AS p_amt
				  FROM invoice a
				  LEFT OUTER JOIN customer_payment_detail b ON (a.elt_account_number=b.elt_account_number
																AND a.invoice_no=b.invoice_no)
				  LEFT OUTER JOIN customer_payment c ON (b.elt_account_number=c.elt_account_number
														 AND b.payment_no=c.payment_no)
				  WHERE a.elt_account_number=@elt_account_number
					
					AND (c.payment_date IS NULL)
				  GROUP BY a.invoice_no,
						   a.amount_charged) e ON (d.invoice_no=e.invoice_no
												   AND d.elt_account_number=@elt_account_number)
			   LEFT OUTER JOIN organization f ON (f.elt_account_number=d.elt_account_number
												  AND f.org_account_number=d.customer_number)
			   WHERE (b_amt<>0
					  OR b_amt IS NULL)
				 
				 AND d.elt_account_number=@elt_account_number
				 AND d.elt_account_number is not null
			   UNION ALL SELECT invoice_id,
								 CASE
									WHEN isnull(f.class_code,'') = '' THEN f.dba_name
									ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
								END AS customer_dba_name,
								f.business_phone,
								-1*e.credit AS customer_credit,
								   e.customer_no,
								   g.elt_account_number,
								   g.invoice_no,
								   invoice_type,
								   import_export,
								   air_ocean,
								   invoice_date,
								   ref_no,
								   ref_no_Our,
								   Customer_info,
								   Total_Pieces,
								   Total_Gross_Weight,
								   Total_Charge_Weight,
								   Origin_Dest,
								   origin,
								   dest,
								   Customer_Number,
								   Customer_Name,
								   shipper,
								   consignee,
								   entry_no,
								   entry_date,
								   Carrier,
								   Arrival_Dept,
								   mawb_num,
								   hawb_num,
								   subtotal,
								   sale_tax,
								   agent_profit,
								   accounts_receivable,
								   amount_charged,
								   amount_paid,
								   balance,
								   total_cost,
								   remarks,
								   pay_status,
								   term_curr,
								   term30,
								   term60,
								   term90,
								   received_amt,
								   pmt_method,
								   existing_credits,
								   deposit_to,
								   lock_ar,
								   lock_ap,
								   in_memo,
								   is_org_merged,
								   master_invoice_no
			   FROM organization f
			   RIGHT OUTER JOIN
				 (SELECT customer_no,
						 -1*SUM(val_1+val_2) AS credit
				  FROM
					(SELECT b.customer_number AS customer_no,
							(b.credit_amount+b.debit_amount) AS val_1,
							SUM(a.payment) AS val_2
					 FROM customer_payment_detail a
					 LEFT OUTER JOIN all_accounts_journal b ON (a.elt_account_number=b.elt_account_number
																AND b.tran_num=a.payment_no
																AND b.tran_type='PMT'
																AND b.gl_Account_number=@gl_account_ar)
					 WHERE b.elt_account_number=@elt_account_number
					 GROUP BY b.customer_number,
							  b.credit_amount,
							  b.debit_amount,
							  a.payment_no) c
				  GROUP BY c.customer_no) e
			   LEFT OUTER JOIN
				 (SELECT *
				  FROM invoice
				  WHERE elt_account_number=@elt_account_number
					AND balance<>0
					AND pay_status='A') g ON (g.invoice_no IS NULL
											  AND g.elt_account_number IS NULL) ON (f.elt_account_number=@elt_account_number
																					AND f.org_account_number=e.customer_no)
			   WHERE e.credit<>0
			   AND g.elt_account_number is not null
			   ) union_set
			WHERE invoice_id=@invoice_id
			ORDER BY customer_dba_name,
					 customer_number,
					 invoice_date+term_curr
	END TRY
	BEGIN CATCH
		-- Execute error retrieval routine.
		SELECT 
			ERROR_NUMBER() AS ErrorNumber
			,ERROR_MESSAGE() AS ErrorMessage
			,@elt_account_number as elt_account_number;
	END CATCH; 
END
GO
PRINT N'Creating [dbo].[sp_aging_list_by_company_update]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[sp_aging_list_by_company_update]
(
	@elt_account_number numeric(8),
	@invoice_id numeric(18)
)	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	DECLARE @invoice_id_in_temp DECIMAL
	DECLARE @gl_account_ar DECIMAL
	
	--Insert statements for procedure here
	SELECT @gl_account_ar = gl_account_number
		  FROM   gl
		  WHERE  elt_account_number = @elt_account_number
				 AND gl_account_desc = 'Accounts Receivable'
				 
	DECLARE @customer_dba_name nvarchar(180)  
	DECLARE @class_code nchar(32)
	DECLARE @dba_name nvarchar(128)
	DECLARE @business_phone nvarchar(32)
	DECLARE @customer_credit DECIMAL
	DECLARE @customer_no nvarchar(32)
	
	DECLARE @invoice_no DECIMAL
	DECLARE @invoice_type nchar(1)
	DECLARE @import_export nvarchar(1)  
	DECLARE @air_ocean nvarchar(1) 
	DECLARE @invoice_date datetime
	
	DECLARE @ref_no nvarchar(64) 
	DECLARE @ref_no_Our nvarchar(64) 
	DECLARE @Customer_info nvarchar(512) 
	DECLARE @Total_Pieces nvarchar(32) 
	DECLARE @Total_Gross_Weight nvarchar(32)
	
	DECLARE @Total_Charge_Weight nvarchar(32)
	DECLARE @Origin_Dest nvarchar(64)
	DECLARE @origin nvarchar(64)
	DECLARE @dest nvarchar(64)
	DECLARE @Customer_Number nvarchar(32)
	
	DECLARE @Customer_Name nvarchar(128)
	DECLARE @shipper nvarchar(512)
	DECLARE @consignee nvarchar(512)
	DECLARE @entry_no nvarchar(32)
	DECLARE @entry_date datetime
	
	DECLARE @Carrier nvarchar(128)
	DECLARE @Arrival_Dept nvarchar(32)
	DECLARE @mawb_num nvarchar(64)
	DECLARE @hawb_num nvarchar(64)
	DECLARE @subtotal DECIMAL
	
	DECLARE @sale_tax DECIMAL
	DECLARE @agent_profit DECIMAL
	DECLARE @accounts_receivable DECIMAL
	DECLARE @amount_charged DECIMAL
	DECLARE @amount_paid DECIMAL
	
	DECLARE @balance DECIMAL
	DECLARE @total_cost DECIMAL
	DECLARE @remarks NVARCHAR(MAX)
	DECLARE @pay_status nchar(1)
	DECLARE @term_curr int
	
	DECLARE @term30 nchar(1)
	DECLARE @term60 nchar(1)
	DECLARE @term90 nchar(1)
	DECLARE @received_amt DECIMAL
	DECLARE @pmt_method nvarchar(16)
	
	DECLARE @existing_credits DECIMAL
	DECLARE @deposit_to DECIMAL
	DECLARE @lock_ar nchar(1)
	DECLARE @lock_ap nchar(1)
	DECLARE @in_memo NVARCHAR(MAX)
	
	DECLARE @is_org_merged nchar(1)
	DECLARE @master_invoice_no DECIMAL
	
	BEGIN TRY
		
		-- Get data from invocie
		SELECT  @customer_dba_name=customer_dba_name,
				@business_phone=business_phone,
				@customer_credit=customer_credit,
				@customer_no =customer_number ,

				@invoice_no=invoice_no,
			  @invoice_type=invoice_type,
			  @import_export=import_export,
			  @air_ocean=air_ocean,
			  @invoice_date=invoice_date,
			  @ref_no=ref_no,
			  @ref_no_Our=ref_no_Our,
			  @Customer_info=Customer_info,
			  @Total_Pieces=Total_Pieces,
			  @Total_Gross_Weight=Total_Gross_Weight,
			  @Total_Charge_Weight=Total_Charge_Weight,
			  @Origin_Dest=Origin_Dest,
			  @origin=origin,
			  @dest=dest,
			  @Customer_Number=Customer_Number,
			  @Customer_Name=Customer_Name,
			  @shipper=shipper,
			  @consignee=consignee,
			  @entry_no=entry_no,
			  @entry_date=entry_date,
			  @Carrier=Carrier,
			  @Arrival_Dept=Arrival_Dept,
			  @mawb_num=mawb_num,
			  @hawb_num=hawb_num,
			  @subtotal=subtotal,
			  @sale_tax=sale_tax,
			  @agent_profit=agent_profit,
			  @accounts_receivable=accounts_receivable,
			  @amount_charged=amount_charged,
			  @amount_paid= amount_paid ,
			  --ISNULL(e.p_amt,0) AS amount_paid,
			  @balance = balance,
			  --ISNULL(e.b_amt,amount_charged) AS balance,
			  @total_cost=total_cost,
			  @remarks=remarks,
			  @pay_status=pay_status,
			  @term_curr=term_curr,
			  @term30=term30,
			  @term60=term60,
			  @term90=term90,
			  @received_amt=received_amt,
			  @pmt_method=pmt_method,
			  @existing_credits=existing_credits,
			  @deposit_to=deposit_to,
			  @lock_ar=lock_ar,
			  @lock_ap=lock_ap,
			  @in_memo=in_memo,
			  @is_org_merged=is_org_merged,
			  @master_invoice_no=master_invoice_no	
			FROM
				(SELECT invoice_id,
					CASE
						  WHEN isnull(f.class_code,'') = '' THEN f.dba_name
						  ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
					  END AS customer_dba_name,
					  f.business_phone,
					  0 AS customer_credit,
					  d.customer_number AS customer_no,
					  d.elt_account_number,
					  
					  d.invoice_no as invoice_no,
					  invoice_type,
					  import_export,
					  air_ocean,
					  invoice_date,
					  
					  ref_no,
					  ref_no_Our,
					  Customer_info,
					  Total_Pieces,
					  Total_Gross_Weight,
					  
					  Total_Charge_Weight,
					  Origin_Dest,
					  origin,
					  dest,
					  Customer_Number,
					  
					  Customer_Name,
					  shipper,
					  consignee,
					  entry_no,
					  entry_date,
					  
					  Carrier,
					  Arrival_Dept,
					  mawb_num,
					  hawb_num,
					  subtotal,
					  
					  sale_tax,
					  agent_profit,
					  accounts_receivable,
					  amount_charged,
					  ISNULL(e.p_amt,0) AS amount_paid,
					  
					  ISNULL(e.b_amt,amount_charged) AS balance,
					  total_cost,
					  remarks,
					  pay_status,
					  term_curr,
					  
					  term30,
					  term60,
					  term90,
					  received_amt,
					  pmt_method,
					  
					  existing_credits,
					  deposit_to,
					  lock_ar,
					  lock_ap,
					  in_memo,
					  
					  is_org_merged,
					  master_invoice_no
				   FROM invoice d
				   LEFT OUTER JOIN
					 (SELECT a.invoice_no,
							 a.amount_charged-SUM(ISNULL(b.payment,0)) AS b_amt,
							 SUM(ISNULL(b.payment,0)) AS p_amt
					  FROM invoice a
					  LEFT OUTER JOIN customer_payment_detail b ON (a.elt_account_number=b.elt_account_number
																	AND a.invoice_no=b.invoice_no)
					  LEFT OUTER JOIN customer_payment c ON (b.elt_account_number=c.elt_account_number
															 AND b.payment_no=c.payment_no)
					  WHERE a.elt_account_number=@elt_account_number
						
						AND (c.payment_date IS NULL)
					  GROUP BY a.invoice_no,
							   a.amount_charged) e ON (d.invoice_no=e.invoice_no
													   AND d.elt_account_number=@elt_account_number)
				   LEFT OUTER JOIN organization f ON (f.elt_account_number=d.elt_account_number
													  AND f.org_account_number=d.customer_number)
				   WHERE (b_amt<>0
						  OR b_amt IS NULL)
					 
					 AND d.elt_account_number=@elt_account_number
					 AND d.elt_account_number is not null
				   UNION ALL SELECT invoice_id,
									 CASE
										WHEN isnull(f.class_code,'') = '' THEN f.dba_name
										ELSE f.dba_name + ' [' + RTRIM(LTRIM(isnull(f.class_code,''))) + ']'
									END AS customer_dba_name,
									f.business_phone,
									-1*e.credit AS customer_credit,
									   e.customer_no,
									   g.elt_account_number,
									   g.invoice_no,
									   invoice_type,
									   import_export,
									   air_ocean,
									   invoice_date,
									   ref_no,
									   ref_no_Our,
									   Customer_info,
									   Total_Pieces,
									   Total_Gross_Weight,
									   Total_Charge_Weight,
									   Origin_Dest,
									   origin,
									   dest,
									   Customer_Number,
									   Customer_Name,
									   shipper,
									   consignee,
									   entry_no,
									   entry_date,
									   Carrier,
									   Arrival_Dept,
									   mawb_num,
									   hawb_num,
									   subtotal,
									   sale_tax,
									   agent_profit,
									   accounts_receivable,
									   amount_charged,
									   amount_paid,
									   balance,
									   total_cost,
									   remarks,
									   pay_status,
									   term_curr,
									   term30,
									   term60,
									   term90,
									   received_amt,
									   pmt_method,
									   existing_credits,
									   deposit_to,
									   lock_ar,
									   lock_ap,
									   in_memo,
									   is_org_merged,
									   master_invoice_no
				   FROM organization f
				   RIGHT OUTER JOIN
					 (SELECT customer_no,
							 -1*SUM(val_1+val_2) AS credit
					  FROM
						(SELECT b.customer_number AS customer_no,
								(b.credit_amount+b.debit_amount) AS val_1,
								SUM(a.payment) AS val_2
						 FROM customer_payment_detail a
						 LEFT OUTER JOIN all_accounts_journal b ON (a.elt_account_number=b.elt_account_number
																	AND b.tran_num=a.payment_no
																	AND b.tran_type='PMT'
																	AND b.gl_Account_number=@gl_account_ar)
						 WHERE b.elt_account_number=@elt_account_number
						 GROUP BY b.customer_number,
								  b.credit_amount,
								  b.debit_amount,
								  a.payment_no) c
					  GROUP BY c.customer_no) e
				   LEFT OUTER JOIN
					 (SELECT *
					  FROM invoice
					  WHERE elt_account_number=@elt_account_number
						AND balance<>0
						AND pay_status='A') g ON (g.invoice_no IS NULL
												  AND g.elt_account_number IS NULL) ON (f.elt_account_number=@elt_account_number
																						AND f.org_account_number=e.customer_no)
				   WHERE e.credit<>0
				   AND g.elt_account_number is not null
				   ) union_set
				WHERE invoice_id=@invoice_id
				ORDER BY customer_dba_name,
						 customer_number,
						 invoice_date+term_curr 


		UPDATE invoice_joined_temp
			   SET customer_dba_name = @customer_dba_name
				   ,business_phone = @business_phone
				   ,customer_credit = @customer_credit
				   ,customer_no = @customer_no
				   ,elt_account_number = @elt_account_number
				   ,invoice_no = @invoice_no
				   ,invoice_type = @invoice_type
				   ,import_export = @import_export
				   ,air_ocean = @air_ocean
				   ,invoice_date = @invoice_date
				   ,ref_no = @ref_no
				   ,ref_no_our = @ref_no_our
				   ,customer_info = @customer_info
				   ,total_pieces = @total_pieces
				   ,total_gross_weight = @total_gross_weight
				   ,total_charge_weight = @total_charge_weight
				   ,origin_dest = @origin_dest
				   ,origin = @origin
				   ,dest = @dest
				   ,customer_number = @customer_number
				   ,customer_name = @customer_name
				   ,shipper = @shipper
				   ,consignee = @consignee
				   ,entry_no = @entry_no
				   ,entry_date = @entry_date
				   ,carrier = @carrier
				   ,arrival_dept = @arrival_dept
				   ,mawb_num = @mawb_num
				   ,hawb_num = @hawb_num
				   ,subtotal = @subtotal
				   ,sale_tax = @sale_tax
				   ,agent_profit = @agent_profit
				   ,accounts_receivable = @accounts_receivable
				   ,amount_charged = @amount_charged
				   ,amount_paid = @amount_paid
				   ,balance = @balance
				   ,total_cost = @total_cost
				   ,remarks = @remarks
				   ,pay_status = @pay_status
				   ,term_curr = @term_curr
				   ,term30 = @term30
				   ,term60 = @term60
				   ,term90 = @term90
				   ,received_amt = @received_amt
				   ,pmt_method = @pmt_method
				   ,existing_credits = @existing_credits
				   ,deposit_to = @deposit_to
				   ,lock_ar = @lock_ar
				   ,lock_ap = @lock_ap
				   ,in_memo = @in_memo
				   ,is_org_merged = @is_org_merged
				   ,master_invoice_no = @master_invoice_no
			 WHERE invoice_id=@invoice_id	
		
			
	END TRY
	BEGIN CATCH
		-- Execute error retrieval routine.
		SELECT 
			ERROR_NUMBER() AS ErrorNumber
			,ERROR_MESSAGE() AS ErrorMessage
			,@elt_account_number as elt_account_number;
	END CATCH; 
	/*
	SELECT  @customer_dba_name,
				@business_phone,
				@customer_credit,
				@customer_no,
				@elt_account_number,
				@invoice_no,
			  @invoice_type,
			  @import_export,
			  @air_ocean,
			  @invoice_date,
			  @ref_no,
			  @ref_no_Our,
			  @Customer_info,
			  @Total_Pieces,
			  @Total_Gross_Weight,
			  @Total_Charge_Weight,
			  @Origin_Dest,
			  @origin,
			  @dest,
			  @Customer_Number,
			  @Customer_Name,
			  @shipper,
			  @consignee,
			  @entry_no,
			  @entry_date,
			  @Carrier,
			  @Arrival_Dept,
			  @mawb_num,
			  @hawb_num,
			  @subtotal,
			  @sale_tax,
			  @agent_profit,
			  @accounts_receivable,
			  @amount_charged,
			  @amount_paid ,
			  @balance,
			  @total_cost,
			  @remarks,
			  @pay_status,
			  @term_curr,
			  @term30,
			  @term60,
			  @term90,
			  @received_amt,
			  @pmt_method,
			  @existing_credits,
			  @deposit_to,
			  @lock_ar,
			  @lock_ap,
			  @in_memo,
			  @is_org_merged,
			  @master_invoice_no	
*/
END
GO
PRINT N'Creating [dbo].[sp_transfer_org_data]...';


GO

/****** Object:  Stored Procedure dbo.sp_transfer_org_data    Script Date: 7/31/2008 11:07:36 AM ******/

/****** Object:  Stored Procedure dbo.sp_transfer_org_data    Script Date: 5/5/2008 2:56:02 PM ******/

/****** Object:  Stored Procedure dbo.sp_transfer_org_data    Script Date: 5/5/2008 2:47:35 PM ******/

/****** Object:  Stored Procedure dbo.sp_transfer_org_data    Script Date: 5/5/2008 2:24:42 PM ******/

/****** Object:  Stored Procedure dbo.sp_transfer_org_data    Script Date: 2/21/2007 5:34:08 PM ******/



CREATE PROCEDURE dbo.sp_transfer_org_data
(
	@nElt_account_number As nvarchar(8),
	@source_org decimal(8),
	@target_org decimal(8)

)
AS

SET NOCOUNT OFF;

DECLARE @target_org_name As nvarchar(128)

SET @target_org_name = ( select dba_name from organization 
where elt_account_number = @nElt_account_number and org_account_number = @target_org )

-- 'agent_rate_table'
update agent_rate_table set agent_no=@target_org,agent_name = @target_org_name 
where elt_account_number = @nElt_account_number and isnull(agent_no,0) = @source_org
-- 'agent_view_object'
update agent_view_object set agent_no=@target_org 
where elt_account_number = @nElt_account_number and isnull(agent_no,0) = @source_org
-- 'all_accounts_journal'
update all_accounts_journal set customer_number=@target_org,customer_name = @target_org_name 
where elt_account_number = @nElt_account_number and isnull(customer_number,0) = @source_org
-- 'all_rate_table'
update all_rate_table set agent_no = @target_org 
where elt_account_number = @nElt_account_number and agent_no = @source_org
update all_rate_table set customer_no = @target_org 
where elt_account_number = @nElt_account_number and customer_no = @source_org
-- 'bill'
update bill set vendor_number = @target_org, vendor_name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(vendor_number,0) = @source_org
-- 'bill_detail'
update bill_detail set vendor_number = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_number,0) = @source_org
-- 'cargo_tracking'
update cargo_tracking set shipper_acct = @target_org,shipper_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(shipper_acct,0) = @source_org
update cargo_tracking set consignee_acct = @target_org,consignee_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(consignee_acct,0) = @source_org
-- 'certificate_origin_air'
update certificate_origin_air set shipper_acct_num = @target_org,shipper_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(shipper_acct_num,0) = @source_org
update certificate_origin_air set consignee_acct_num = @target_org,consignee_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(consignee_acct_num,0) = @source_org
update certificate_origin_air set agent_acct_num = @target_org,agent_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(agent_acct_num,0) = @source_org
update certificate_origin_air set notify_acct_num = @target_org,notify_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(notify_acct_num,0) = @source_org
-- 'certificate_origin_ocean'
update certificate_origin_ocean set shipper_acct_num = @target_org,shipper_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(shipper_acct_num,0) = @source_org
update certificate_origin_ocean set consignee_acct_num = @target_org,consignee_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(consignee_acct_num,0) = @source_org
update certificate_origin_ocean set agent_acct_num = @target_org,agent_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(agent_acct_num,0) = @source_org
update certificate_origin_ocean set notify_acct_num = @target_org,notify_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(notify_acct_num,0) = @source_org
-- 'check_queue'
update check_queue set vendor_number = @target_org,vendor_name = @target_org_name 
where elt_account_number = @nElt_account_number and isnull(vendor_number,0) = @source_org
-- 'colo'
update colo set colodee_org_num = @target_org 
where colodee_elt_acct = @nElt_account_number and isnull(colodee_org_num,0) = @source_org
-- 'customer_balance'
ALTER TABLE customer_balance ALTER COLUMN customer_name [nvarchar] (128) NULL
update customer_balance set customer_acct = @target_org, customer_name = @target_org_name  
where elt_account_number = @nElt_account_number and isnull(customer_acct,0) = @source_org
-- 'customer_credits'
ALTER TABLE customer_credits ALTER COLUMN customer_name [nvarchar] (128) NULL
if exists (select * from customer_credits where elt_account_number = @nElt_account_number and isnull(customer_no,0) = @source_org)
begin
update customer_credits set credit = credit + (select credit from customer_credits where elt_account_number = @nElt_account_number and isnull(customer_no,0) = @source_org)
delete from customer_credits where elt_account_number = @nElt_account_number and isnull(customer_no,0) = @source_org
end
else
update customer_credits set customer_no = @target_org, customer_name = @target_org_name where elt_account_number = @nElt_account_number and isnull(customer_no,0) = @source_org
-- 'customer_payment'
update customer_payment set customer_number = @target_org, customer_name = @target_org_name  
where elt_account_number = @nElt_account_number and isnull(customer_number,0) = @source_org
-- 'delivery_order'
update delivery_order set shipper_acct = @target_org,shipper_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(shipper_acct,0) = @source_org
update delivery_order set consignee_acct = @target_org,consignee_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(consignee_acct,0) = @source_org
-- 'email_history'
update email_history set to_org_id = @target_org,to_org_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(to_org_id,0) = @source_org
-- 'email_report'
update email_report set company = @target_org 
where elt_account_number = @nElt_account_number and isnull(company,0) = @source_org
-- 'general_journal_entry'
update general_journal_entry set org_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(org_acct,0) = @source_org
-- 'HAWB_master'
update HAWB_master set airline_vendor_num = @target_org 
where elt_account_number = @nElt_account_number and isnull(airline_vendor_num,0) = @source_org
update HAWB_master set Agent_No = @target_org,Agent_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Agent_No,0) = @source_org
update HAWB_master set Shipper_account_number = @target_org,Shipper_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Shipper_account_number,'') = cast( @source_org as nvarchar )
update HAWB_master set Consignee_acct_num = @target_org,Consignee_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Consignee_acct_num,'') = cast( @source_org as nvarchar )
update HAWB_master set Notify_no = @target_org 
where elt_account_number = @nElt_account_number and isnull(Notify_no,'') = cast( @source_org as nvarchar )
-- 'hbol_master'
update hbol_master set Agent_No = @target_org,Agent_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Agent_No,0) = @source_org
update hbol_master set forward_agent_acct_num = @target_org,forward_agent_name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(forward_agent_acct_num,0) = @source_org
update hbol_master set Shipper_acct_num = @target_org,Shipper_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Shipper_acct_num,0) = @source_org
update hbol_master set Consignee_acct_num = @target_org,Consignee_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Consignee_acct_num,0) = @source_org
update hbol_master set Notify_acct_num = @target_org,Notify_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Notify_acct_num,0) = @source_org
-- 'ig_org_comments'
update ig_org_comments set org_account_number = @target_org 
where elt_account_number = @nElt_account_number and isnull(org_account_number,0) = @source_org
-- 'ig_org_contact'
update ig_org_contact set org_account_number = @target_org 
where elt_account_number = @nElt_account_number and isnull(org_account_number,0) = @source_org
-- 'ig_schedule_b'
update ig_schedule_b set org_account_number = @target_org 
where elt_account_number = @nElt_account_number and isnull(org_account_number,0) = @source_org
-- 'import_hawb'
update import_hawb set agent_org_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(agent_org_acct,0) = @source_org
update import_hawb set shipper_acct = @target_org,shipper_name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(shipper_acct,0) = @source_org
update import_hawb set consignee_acct = @target_org,consignee_name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(consignee_acct,0) = @source_org
update import_hawb set notify_acct = @target_org,notify_name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(notify_acct,0) = @source_org
update import_hawb set broker_acct = @target_org,broker_name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(broker_acct,0) = @source_org
-- 'import_mawb'
update import_mawb set agent_org_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(agent_org_acct,0) = @source_org
-- 'invoice'
update invoice set Customer_Number = @target_org,Customer_Name=@target_org_name  
where elt_account_number = @nElt_account_number and isnull(Customer_Number,0) = @source_org
-- 'invoice_cost_item'
update invoice_cost_item set vendor_no = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_no,0) = @source_org
-- 'invoice_detail'
update invoice_detail set vendor_no = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_no,0) = @source_org
-- 'MAWB_MASTER'
update MAWB_MASTER set airline_vendor_num = @target_org 
where elt_account_number = @nElt_account_number and isnull(airline_vendor_num,0) = @source_org
update MAWB_MASTER set master_agent = @target_org 
where elt_account_number = @nElt_account_number and isnull(master_agent,0) = @source_org
update MAWB_MASTER set Shipper_account_number = @target_org,Shipper_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Shipper_account_number,'') = cast( @source_org as nvarchar )
update MAWB_MASTER set Consignee_acct_num = @target_org,Consignee_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Consignee_acct_num,'') = cast( @source_org as nvarchar )
update MAWB_MASTER set Notify_no = @target_org 
where elt_account_number = @nElt_account_number and isnull(Notify_no,'') = cast( @source_org as nvarchar )
-- 'MAWB_Other_Charge'
update MAWB_Other_Charge set vendor_num = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_num,0) = @source_org
-- 'mb_cost_item'
update mb_cost_item set vendor_no = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_no,0) = @source_org
-- 'mbol_master'
update mbol_master set agent_acct_num = @target_org,Agent_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(agent_acct_num,0) = @source_org
update mbol_master set Shipper_acct_num = @target_org,Shipper_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Shipper_acct_num,0) = @source_org
update mbol_master set Consignee_acct_num = @target_org,Consignee_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Consignee_acct_num,0) = @source_org
update mbol_master set Notify_acct_num = @target_org,Notify_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Notify_acct_num,0) = @source_org
-- 'mbol_other_charge'
update mbol_other_charge set vendor_num = @target_org 
where elt_account_number = @nElt_account_number and isnull(vendor_num,0) =  @source_org 
-- 'sed_master'
update ocean_sed_master set shipper_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(shipper_acct,0) = @source_org
update sed_master set shipper_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(shipper_acct,0) = @source_org
-- 'pickup_order'
update pickup_order set Shipper_account_number = @target_org,Shipper_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(Shipper_account_number,0) = @source_org
update pickup_order set pickup_account_number = @target_org,pickup_Name=@target_org_name 
where elt_account_number = @nElt_account_number and isnull(pickup_account_number,0) = @source_org
-- 'users'
update users set org_acct = @target_org 
where elt_account_number = @nElt_account_number and isnull(org_acct,0) = @source_org
GO
PRINT N'Creating [dbo].[UpdateAESLineItem]...';


GO
-- =============================================
-- Author:		@Author,,Name>
-- Create date: @Create Date,
-- Description:	@Description,
-- =============================================
CREATE PROCEDURE [dbo].[UpdateAESLineItem]			
		    @id decimal 
           ,@item_no int=0
           ,@dfm nvarchar(1)=''
           ,@b_number nvarchar(32)
           ,@item_desc nvarchar(128)=''
           ,@b_qty1 int=0
           ,@unit1 nvarchar(16)=''
           ,@b_qty2 int=0
           ,@unit2 nvarchar(16)=''
           ,@gross_weight decimal(12,2)=0
           ,@vin_type nvarchar(1)=''
           ,@vin nvarchar(32)=''
           ,@vc_title nvarchar(15)=''
           ,@vc_state nvarchar(2)=''
           ,@item_value decimal(12,2)=0
           ,@export_code nvarchar(32)=''
           ,@license_type nvarchar(32)=''
           ,@aes_id decimal(18,0)
           ,@eccn nvarchar(5)=''
           ,@license_number nvarchar(12)=''
AS
BEGIN	
   UPDATE [dbo].[aes_detail]
   SET [item_no] = @item_no
      ,[dfm] = @dfm
      ,[b_number] = @b_number
      ,[item_desc] = @item_desc
      ,[b_qty1] = @b_qty1
      ,[unit1] = @unit1
      ,[b_qty2] = @b_qty2
      ,[unit2] = @unit2
      ,[gross_weight] = @gross_weight
      ,[vin_type] = @vin_type
      ,[vin] = @vin
      ,[vc_title] = @vc_title
      ,[vc_state] = @vc_state
      ,[item_value] = @item_value
      ,[export_code] = @export_code
      ,[license_type] = @license_type
      ,[aes_id] = @aes_id
      ,[eccn] = @eccn
      ,[license_number] = @license_number
 WHERE id=@id 



END
GO
PRINT N'Creating [dbo].[UpdateAuthorizePage]...';


GO

CREATE PROCEDURE [dbo].UpdateAuthorizePage
	@elt_account_number decimal,
	@user_id decimal,
	@page_id decimal,
	@is_bloked bit
AS
BEGIN
	UPDATE  [dbo].[page_user_access] SET is_bloked=@is_bloked WHERE elt_account_number = @elt_account_number and [user_id] = @user_id and page_id=@page_id
END
GO
PRINT N'Creating [dbo].[Populate_all_rate_table]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO


CREATE TRIGGER [dbo].[Populate_all_rate_table]
   ON  [dbo].[rate_table]
   AFTER INSERT,DELETE,UPDATE
AS 
BEGIN
   DECLARE @DELETEDCOUNT INT
   DECLARE @INSERTEDCOUNT INT
   SELECT @DELETEDCOUNT = COUNT(*) FROM deleted
   SELECT @INSERTEDCOUNT = COUNT(*) FROM inserted

   --CustomerSellingRate=4,
   --     AgentBuyingRate=1,
   --     IataRate=5,
   --     AirlineBuyingRate=3
   DECLARE  @elt_account_number decimal
           ,@item_no decimal
           ,@rate_type int
           ,@agent_no int
           ,@customer_no int
           ,@airline nvarchar(50)
           ,@origin_port nvarchar(50)
           ,@dest_port nvarchar(50)
           ,@weight_break decimal
           ,@rate decimal(8,2)
           ,@kg_lb nchar(1)
           ,@share decimal(8,2)         
           ,@rate_table_id decimal
		   ,@breaks nvarchar(MAX)
		   ,@rates nvarchar(MAX)
		   ,@enabled bit
   IF( @INSERTEDCOUNT > 0 ) 
   BEGIN

		SELECT @rate_table_id=id,@enabled=[enabled]
		From inserted	 
		DELETE FROM all_rate_table WHERE rate_table_id=@rate_table_id

		SELECT @rate_type= rate_type,@airline=airline,@origin_port=origin_port,@dest_port=dest_port,@kg_lb=kg_lb,@share=share,
		@breaks=breaks,@rates=rates,@elt_account_number=elt_account_number , @customer_no= customer_no,@agent_no=  agent_no,@rate_table_id=id,@enabled=[enabled]
		From inserted
		DECLARE @t_break TABLE(id int, data nvarchar(20));
		DECLARE @t_rate TABLE(id int, data nvarchar(20));
		IF @breaks IS NOT NULL AND @rates IS NOT NULL
		BEGIN
			INSERT INTO @t_break select * from dbo.Split(@breaks,',');
			INSERT INTO @t_rate select * from dbo.Split(@rates,',');
			DECLARE @current_index int= (SELECT TOP 1 id FROM @t_break ORDER BY ID);
			DECLARE @last_index int= (SELECT TOP 1 id FROM @t_break ORDER BY  ID DESC);	
			SET @item_no = 1
			PRINT 'Trigger by insert or update action'  
			PRINT  @enabled

			WHILE @current_index <= @last_index
			BEGIN
				SET  @rate =NULL;
				SET @weight_break=NULL;
				UPDATE @t_break 
				SET data = NULL 
				WHERE data = ''
				UPDATE @t_rate 
				SET data = NULL 
				WHERE data = ''
				SET  @rate = Convert(DECIMAL(8,2),(SELECT TOP 1 data FROM  @t_rate WHERE ID= @current_index));
				SET  @weight_break =Convert(INT,(SELECT TOP 1 data FROM  @t_break WHERE ID= @current_index));
				IF @enabled =1 
					EXEC	[dbo].[Insert_all_rate_table]
				@elt_account_number ,
				@item_no ,
				@rate_type ,
				@agent_no ,
				@customer_no ,
				@airline ,
				@origin_port ,
				@dest_port ,
				@weight_break ,
				@rate ,
				@kg_lb ,
				@share ,
				@rate_table_id
				SET @current_index = (SELECT TOP 1 id FROM @t_break WHERE ID > @current_index  ORDER BY ID);
				SET @item_no = @item_no + 1

			END 
		END
	END
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [DeveloperUtil].[MigrateUser]...';


GO



CREATE PROCEDURE DeveloperUtil.MigrateUser
	@elt_account_number int,
	@userid int,
	@login_name nvarchar(200)
AS
BEGIN	
	DECLARE @user_type int
    PRINT 'SET elt_account_number on user  profile'

	UPDATE [dbo].[UserProfile]
	SET [elt_account_number] = @elt_account_number
	WHERE UserName=@login_name

	PRINT 'SET login name for the user table '
	UPDATE [dbo].[users]
	SET [login_name] = @login_name WHERE elt_account_number=@elt_account_number and userid=@userid   

	PRINT 'PAGE ACCESS'
	select @user_type= user_type from dbo.users  WHERE elt_account_number=@elt_account_number and userid=@userid
	EXEC	[dbo].[InitUserPageAccess]
		@elt_account_number,
		@userid ,
		@user_type

	SELECT A.* from users A inner join UserProfile B on A.elt_account_number=B.elt_account_number AND A.login_name = B.UserName
	WHERE A.elt_account_number=@elt_account_number AND A.login_name=@login_name
END
GO
PRINT N'Creating [DeveloperUtil].[MigrateUserPageAccess]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE DeveloperUtil.MigrateUserPageAccess

AS
BEGIN	 
	DECLARE @TbSegments TABLE
	(
	  ID int IDENTITY (18, 1) NOT NULL , 
	  userid int,
	  elt_account_number decimal,
	  user_type int
	)
	INSERT INTO @TbSegments (userid,elt_account_number,user_type)  SELECT userid, elt_account_number, user_type   from users 
	DECLARE @Count int
	DECLARE @id int
	DECLARE @Segment nvarchar(50)
	DECLARE @elt_account_number decimal
	DECLARE @user_id int
	DECLARE @user_type int
	SELECT @Count = count(*) from users
	DELETE FROM [dbo].[page_user_access]
	SET @id = 1

	While @id < @Count +1
	Begin
		SELECT  @elt_account_number=elt_account_number,@user_id=userid, @user_type=user_type FROM @TbSegments where id =@id
		EXEC	[dbo].[InitUserPageAccess] @elt_account_number, @user_id,@user_type 
		SET @id=@id +1
	END
END
GO
PRINT N'Creating [dbo].[View_pay_bill].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[25] 4[36] 2[12] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "cd"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 123
               Right = 225
            End
            DisplayFlags = 280
            TopColumn = 8
         End
         Begin Table = "cq"
            Begin Extent = 
               Top = 6
               Left = 263
               Bottom = 123
               Right = 450
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "gl"
            Begin Extent = 
               Top = 6
               Left = 488
               Bottom = 123
               Right = 675
            End
            DisplayFlags = 280
            TopColumn = 26
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'View_pay_bill';


GO
PRINT N'Creating [dbo].[View_pay_bill].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'View_pay_bill';


GO
PRINT N'Creating [dbo].[vw_ocean_master].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vw_ocean_master';


GO
PRINT N'Creating [dbo].[vw_ocean_master].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[34] 4[27] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 27
         End
         Begin Table = "b"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 114
               Right = 469
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vw_ocean_master';


GO
PRINT N'Creating [dbo].[VW_OperationCharge].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VW_OperationCharge';


GO
PRINT N'Creating [dbo].[VW_OperationCharge].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VW_OperationCharge';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[all_rate_table] WITH CHECK CHECK CONSTRAINT [FK_all_rate_table_rate_table];

ALTER TABLE [dbo].[AspNetUserClaims] WITH CHECK CHECK CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_User_Id];

ALTER TABLE [dbo].[AspNetUserLogins] WITH CHECK CHECK CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId];

ALTER TABLE [dbo].[RateBlockDefinition] WITH CHECK CHECK CONSTRAINT [FK_RateBlockDefinition_RateEntryRow];

ALTER TABLE [dbo].[RateEntryRow] WITH CHECK CHECK CONSTRAINT [FK_Row_Route];

ALTER TABLE [dbo].[webpages_UsersInRoles] WITH CHECK CHECK CONSTRAINT [fk_RoleId];

ALTER TABLE [dbo].[webpages_UsersInRoles] WITH CHECK CHECK CONSTRAINT [fk_UserId];


GO
PRINT N'Update complete.';


GO

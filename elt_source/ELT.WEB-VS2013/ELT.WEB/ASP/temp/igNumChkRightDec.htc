<PUBLIC:COMPONENT lightWeight="true">
	<PUBLIC:ATTACH event="oncontentready" for="element" onevent="evtContentReady();" />
	<PUBLIC:ATTACH event="onfocus"        for="element" onevent="evtFocus();"        />
	<PUBLIC:ATTACH event="onkeydown"      for="element" onevent="evtKeydown();"      />
	<PUBLIC:ATTACH event="onblur"         for="element" onevent="evtBlur();"         />
	<PUBLIC:PROPERTY name="defaultValue" value="0" />
	<PUBLIC:METHOD name="setDefaultValue" />

	 <SCRIPT language="javascript" type="text/javascript">
	    <!--
	    
		function evtContentReady()
		{
			if (!checkTagType()) return;
			element.runtimeStyle.textAlign = "right";
			if (trim(element.value).length == 0)
			element.value = defaultValue;

		}

		function CheckStr(strOriginal, strFind, strChange)
		{

			var position, strOri_Length;

			while (strOriginal.length > 1){
				if( strOriginal.substring(0,1) == "0") {
					strOriginal = strOriginal.substring(1);
				}
				else break;
			}

			if( strOriginal.substring(0,1) == ".") {
				strOriginal = "0" + strOriginal;
			}

			position = strOriginal.indexOf(strFind); 


			if(strOriginal == "") strOriginal = "0";

			while (position != -1){

			  strOriginal = strOriginal.replace(strFind, strChange);

			  position = strOriginal.indexOf(strFind);
			}
			return strOriginal;
		}


		function makeDecimal(sourceString,DP)
		{
			var ts = sourceString;
			var iIdx;
			var iCnt = 0;
			for(i=0;i<sourceString.length;i++)
			{
				iIdx = ts.indexOf(".");
				if(iIdx >= 0)  {
					iCnt++;
					ts = ts.substring(iIdx+1);
				}
			}

			if(iCnt > 0) 
			{	
				sourceString = CheckStr(sourceString,".","");
				sourceString = sourceString.substring(0,sourceString.length-DP) + "." + sourceString.substring(sourceString.length-DP);
				element.value = sourceString;
			}

			return sourceString;

		}

		function makeDecimalForce(sourceString,DP)
		{
			var iIdx;

			iIdx = sourceString.indexOf(".");
			if(iIdx < 0) return makeDecimalEndZero(sourceString,2);
			
			sourceString = CheckStr(sourceString,".","");
			if(iIdx == 0) 
			{
			   sourceString = "0" + sourceString;
			   iIdx++;
			}

			var strDec = sourceString.substring(iIdx,iIdx+DP);
			if(strDec == "") strDec = "00";
			sourceString = sourceString.substring(0,iIdx) + "." + strDec;
			element.value = sourceString;
			return sourceString;

		}

		function makeDecimalEnd(sourceString)
		{
			sourceString = CheckStr(sourceString,".","");
			sourceString = sourceString + ".";
			element.value = sourceString;
			return sourceString;
		}

		function makeDecimalEndZero(sourceString,DP)
		{
			sourceString = CheckStr(sourceString,".","");
			sourceString = sourceString + ".00";
			element.value = sourceString;
			return sourceString;
		}

		function trim(sourceString)
		{
			if (!checkTagType()) return;
			return sourceString.replace(/(?:^\s+|\s+$)/ig, "");
		}
		
		function evtFocus()
		{
			if (!checkTagType()) return;
			element.runtimeStyle.imeMode = "disabled";
			element.select();
		}

		function evtKeydown()
		{
			if (!checkTagType()) return;
			var nKey = event.keyCode;

			if(nKey == 13)
			{
				element.value = makeDecimalForce(element.value,2);
				event.returnValue = false;
			}

			if(nKey == 190)
			{
				element.value = makeDecimalEnd(element.value);
				event.returnValue = true;
			}

			if (event.ctrlKey)
			{
			if (nKey == 65 || nKey == 67 || nKey == 82 || 
				nKey == 86 || nKey == 88 || nKey == 90)
				event.returnValue = true;
			else
				event.returnValue = false;
			}
			else
			{
			
			if ((nKey >= 48 && nKey <= 57)  || 
				(nKey >= 96 && nKey <= 105) || 
				(nKey >= 33 && nKey <= 40)  ||
				nKey == 8  || nKey == 9  || nKey == 27  || nKey == 43  || 
				nKey == 45 || nKey == 46 || nKey == 107 || nKey == 109
			)
				event.returnValue = true;
				
			else
				event.returnValue = false;
			}
		}
		
		function evtBlur()
		{
			if (!checkTagType()) return;
			var objRegEx = /^\s*((\d+(\.\d*)?)|(\d*\.\d+))\s*$/;
		        element.value = makeDecimalForce(element.value,2);
			if (!objRegEx.test(trim(element.value)))
			element.value = defaultValue;
		}

		function checkTagType()
		{
			if (element.tagName.toUpperCase() == "INPUT" &&
			element.type.toUpperCase()    == "TEXT") return true;
                
			return false;
		}

		function setDefaultValue(newValue)
		{
			element.defaultValue = newValue;
		}


	    //-->
	</SCRIPT>

 
</PUBLIC:COMPONENT>

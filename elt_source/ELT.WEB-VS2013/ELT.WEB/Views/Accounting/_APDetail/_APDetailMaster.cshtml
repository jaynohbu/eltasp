@using ELT.WEB.Models
@using ELT.CDT
@model ELT.WEB.Models.APDetailMasterModel

@Html.DevExpress().GridView(
    settings =>
    {
        settings.DataBound = (sender, e) =>
        {
            MVCxGridView gv = sender as MVCxGridView;
          
          

        };

        settings.DetailRowExpandedChanged = (s, e) =>
        {

        };
        settings.HtmlRowCreated += (s, e) =>
        {          
          
            if (e.KeyValue.ToString().Contains("_Fiscal"))
            {
                System.Web.UI.WebControls.TableCell cell = e.Row.Cells[0];
                
                if (cell is DevExpress.Web.ASPxGridView.Rendering.GridViewTableDetailButtonCell)
                    cell.Controls[0].Visible = false;
            }
        };
        settings.Name = "grid";

        settings.CallbackRouteValues = new { Controller = "Accounting", Action = "APDetailMaster" };
        settings.Width = Unit.Percentage(100);
        settings.Theme = "Metropolis";
       


        settings.KeyFieldName = Model.KeyFieldName;
  
        
        settings.Columns.Add("Customer_Name", "Customer");

        settings.Columns.Add(column =>
        {
            column.FieldName = "Start";
            column.Caption = "Start Balance";
            column.SetDataItemTemplateContent(a =>
            {
                if (!string.IsNullOrEmpty(Convert.ToString(DataBinder.Eval(a.DataItem, "Start"))))
                {
                    string val = string.Format("{0:###,###,###.00}", Convert.ToDecimal(a.Text));
                    if (a.Text == "0") val = ".00";
                    ViewContext.Writer.Write(val
                       );
                }
            });
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "Billed";
            column.SetDataItemTemplateContent(a =>
            {
                if (!string.IsNullOrEmpty(Convert.ToString(DataBinder.Eval(a.DataItem, "Billed"))))
                {
                    string val = string.Format("{0:###,###,###.00}", Convert.ToDecimal(a.Text));
                    if (a.Text == "0") val = ".00";
                    ViewContext.Writer.Write(val
                       );
                }
            });
        });



        settings.Columns.Add(column =>
        {
            column.FieldName = "Paid";
            column.SetDataItemTemplateContent(a =>
            {
                if (!string.IsNullOrEmpty(Convert.ToString(DataBinder.Eval(a.DataItem, "Paid"))))
                {
                    string val = string.Format("{0:###,###,###.00}", Convert.ToDecimal(a.Text));
                    if (a.Text == "0") val = ".00";
                    ViewContext.Writer.Write(val
                       );
                }
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Balance";
            column.SetDataItemTemplateContent(a =>
            {
                if (!string.IsNullOrEmpty(Convert.ToString(DataBinder.Eval(a.DataItem, "Balance"))))
                {
                    string val = string.Format("{0:###,###,###.00}", Convert.ToDecimal(a.Text));
                    if (a.Text == "0") val = ".00";
                    ViewContext.Writer.Write(val
                       );
                }
            });
        });


        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = true;

        settings.SetDetailRowTemplateContent(c =>
        {

            Html.RenderAction("APDetailDetail", new { Key = (string)DataBinder.Eval(c.DataItem, Model.KeyFieldName), KeyFieldName = Model.KeyFieldName });
        });
        settings.PreRender = (sender, e) =>
        {
           
        };
    }).Bind(Model.Elements).GetHtml() 

